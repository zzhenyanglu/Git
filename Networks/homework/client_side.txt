import java.io.*;
import java.net.*;

public class client_side {
    public static void main(String[] argv) {

    String serverIP = "";
    int serverPort = -1;

    // Process command-line arguments.
    for (String arg : argv) {

       String[] splitArg = arg.split("=");

       if (splitArg.length == 2 && splitArg[0].equals("--serverIP")) {
          serverIP = splitArg[1];
       } else if (splitArg.length == 2 && splitArg[0].equals("--serverPort")) {
          serverPort = Integer.parseInt(splitArg[1]);
       } else {
          System.err.println("Usage: java EchoClient --serverIP=<ipaddr> --serverPort=<port>");
          return;
       }
    }

    // Check IP address.
    if (serverIP.isEmpty()) {
       System.err.println("Must specify server IP address with --serverIP");
       return;
    }

    // Check port number.
    if (serverPort == -1) {
       System.err.println("Must specify server port with --serverPort");
       return;
    }

    if (serverPort <= 1024) {
       System.err.println("Avoid potentially reserved port number: " + serverPort + " (should be > 1024)");
       return;
    }

    try (
       Socket echoSocket = new Socket(serverIP, serverPort);
       PrintWriter out = new PrintWriter(echoSocket.getOutputStream(), true);
       BufferedReader in = new BufferedReader(new InputStreamReader(echoSocket.getInputStream()));
       BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in))
    )

    {
        String userInput;
        String from_server;

        while ((userInput = stdIn.readLine()) != null) {
           out.println(userInput);
           from_server= in.readLine();

           System.out.println("server echo: " + from_server);

           if ( from_server== null)
           {
              System.out.println("Warning: Server-side application maybe has stopped.");
              continue;
           }
        }
    }

    catch (UnknownHostException e) {
       System.out.println(e.toString());
       System.err.println("Don't know about host " + serverIP);
       System.exit(1);
    }

    catch (IOException e) {
       System.out.println (e.toString());
       System.err.println("Couldn't get I/O for the connection to " + serverIP);
       System.exit(1);
    }
  }
}