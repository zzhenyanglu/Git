%MACRO coverage(cstate=, email=, year=, quarter=, cac_read_dir_loc=, codepath=);

   /* THRESHOLD MAXIMUM OBSERVATION DE = 200K ID =300K*/
   %let maxobs = 300000;


   %include "/project/CACDIRECT/CODE/&codepath./METADATA/library.inc";
   %include "/project/CACDIRECT/CODE/&cicodepath./EM_FLAG/METADATA/library.inc";


   %if &cac_read_dir_loc=A %then %do;
      libname base      "/project/CACDIRECT/&cidatapath./BASE_DEMO/B";
      libname indiv    "/project/CACDIRECT/&cidatapath./INDIV_DEMO/B";
      libname scf      "/project/CACDIRECT/&cidatapath./SCF_MKEY/B";
      libname geo      "/project/CACDIRECT/&cidatapath./GEO/B";
      libname samp     "/project/CACDIRECT/&cidatapath./SAMPLES/B";
      libname bridge   "/project/CACDIRECT/&cidatapath./BRIDGE/B";
   %end;

   %else %if &cac_read_dir_loc=B %then %do;
      libname base      "/project/CACDIRECT/&cidatapath./BASE_DEMO/A"; 
      libname indiv    "/project/CACDIRECT/&cidatapath./INDIV_DEMO/A";
      libname scf      "/project/CACDIRECT/&cidatapath./SCF_MKEY/A"; 
      libname geo      "/project/CACDIRECT/&cidatapath./GEO/A";
      libname samp     "/project/CACDIRECT/&cidatapath./SAMPLES/A";
      libname bridge   "/project/CACDIRECT/&cidatapath./BRIDGE/A";
   %end;

   /* GET # OF OBS IN CURRENT STATE  */
   
   %nobs(data=brg_sas.bridge_&cstate);
   %let brg_obs = &nobs;
        
   *HOW MANY LOOPS;
   
   %let loopo = %eval(&brg_obs/&maxobs+1);
      
   %put "THE NUMBER OF OBS OF CURRENT STATE IS &brg_obs";
   %put "LOOP &loopo TIMES TO SUBSET WITH &maxobs OBS IN EACH SUBSET";

   
   * THIS %SUBSET MACRO SUBSETS DATASET ACCORDING TO WHAT ARE THE &maxobs AND &nobs OF CURRENT STATE;
           * 1. CREATES &LOOPO SUBSETS;
           * 2. PUT EACH SUBSET INTO %MATCHMAKER ;
           *    SHOULD EXPECT RETURNED DATASET LIKE data em_flag.bridge_%sysfunc(dequote(&cstate))_&i_matched ;
           *    OR bridge_FL_1_MATCHED AS AN EXAMPLE;
           * 3. FINALLY, KEEP ONLY NEEDED FIELDS AND OUTPUT data em_flag.bridge_%sysfunc(dequote(&cstate))_&i_matched_only;
           *    OR bridge_FL_1_MATCHED_ONLY AS AN EXAMPLE;

   %macro subset;
      * UPPER BAND OF SUBSETTING ;
      %do i = 1 %to &loopo;             /*****************************************DO LOOP TO SUBSET AND RUN %MATCHMAKER WITH THE SUBSETS AS A PARAMETER */
        
         * LOWER BAND OF SUBSETTING ;
         %let j = %eval(&i-1);
        
         *SUBSETTING  ;   
         %put "SUBSETTING bridge_&cstate._&i";     
   
         data bridge_&cstate._&i;
            set brg_sas.bridge_&cstate;
            bridge_zip5 = compress(bridge_zip5,"+-abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPORSTUVWXYZ");
            if %eval(&maxobs*&j)< _n_ <= %eval(&maxobs*&i);
         run;
        
         proc print data = bridge_&cstate._&i(obs=10);run;
        

         x "cd /project/CACDIRECT/&cidatapath./PROCESS/&cstate";
       
         %matchmaker(
                            client_dir=
                          , client_data= bridge_&cstate._&i
                          , client_id= bridge_md5email_id
                          , name_format=2
                          , name_var=bridge_name_first
                          , name_var2=bridge_name_last
                          , addr_format=1
                          , addr1=bridge_address1
                          , addr2=
                          , state_var=bridge_state
                          , zip5=bridge_zip5
                          , zip4=
                          , match_lev=1
                          , key1=1
                          , key2=1
                          , key3=1
                          , key4=1
                          , key5=1
                          , key6=1
                          , key7=1
                          , state_list= %upcase(%str(%'&cstate%'))
                          , ethnic=0
                          , geo_interest=0
                          , census=0
                         , census_keep=0
                         , individual=0
                         , addr_detail=0
                         , cacd_prod=0
                         , results_by_state=0
                         , email=&email
                  );
         x "cd /project/CACDIRECT/&cidatapath./PROCESS";


         %put "DONE MATCHMAKING FOR bridge_&cstate._&i";                  /*********************************************END OF DO LOOP TO SUBSET AND RUN %MATCHMAKER WITH THE SUBSETS AS A PARAMETER */
      %end;
       
   %mend subset;
       
   * CALL THAT ;
   %subset;
       
   * THIS MACRO STACKS UP DATASETS GENERATED BY %MATCHMAKER ;
   %macro stackup;
         
      data bridge.bridge_pid_&cstate.(drop=cacdirect_hh_match rename=(bridge_md5email_id=cac_bridge_md5email_id));
         set
            %do m =1 %to &loopo;
                bridge_&cstate._&m._matched(keep =bridge: bridge_md5email_id cac_hh_pid cacdirect_hh_match where=( cacdirect_hh_match = 1))
            %end;
            ;
      run;

   %mend stackup;

   %put "STACKING SPLIT DATASETS UP";
   
   %stackup;
   
   %put "DONE STACKING";
   %put "DEDUPING BRIDGE EMAIL LIST";

   %nobs(data=bridge.bridge_pid_&cstate.);
   %let matched_only_obs=&nobs;
       
   proc sort nodupkey data=bridge.bridge_pid_&cstate. out=bridge_uniq_pid_&cstate.;
      by cac_hh_pid;
   run;
       
   %put "DONE DEDUPING";
      
   *  QC OF MATCHED DATASET CREATED BY %MATCHMAKER AND ORIGINAL DATABASET;
       
   *HOW MANY OBS IN BRIDGE DATASET ;
   %nobs(data=brg_sas.bridge_&cstate );
   %let bridge_obs=&nobs;
       
   %nobs(data=base.base_demo_&cstate);
   %let base_obs=&nobs;
       
   *  CREATE A DATASET CALLED BRIDGE_CUT_MATCHED_ONLY WHICH CONTAINS ONLY MATCHED RECORDS;
    
   *HOW MANY OBS IN BASE_DEMO HAVE BRIDGE EMAIL MATCHED ;
   %nobs(data=bridge_uniq_pid_&cstate.);
   %let matched_only_nodup_obs=&nobs;
       
   * MERGE MATCHED DATASET TOGETHER WITH BASE_DEMO ;
   * THIS IS THE FINAL STUFF;

   data base.base_demo_&cstate.(sortedby=cac_hh_pid);                       
        merge base.base_demo_&cstate (in=a)
              bridge_uniq_pid_&cstate. (in=b keep=cac_hh_pid);
        by cac_hh_pid;
        format cac_em_flag $8.;
        if a;
           cac_bridge_em_flag = b;

           /* NOTICE: YOU MUST HAVE FINISH 150_EM_COVEERAGE.SAS BEFORE RUNNING THE FOLLOWING CODE                */
           /* NOTICE: THE FOLLOWING DATASTEP IS GOING TO CREATE A CAC_EM_FLAG                                    */
           /*	      CAC_EM_FLAG = 00 when CAC_BRIDGE_EM_FLAG and  CAC_V12_EM_FLAG both 0                       */
           /*         CAC_EM_FLAG = 01 when CAC_BRIDGE_EM_FLAG =1 and CAC_V12_EM_FLAG =0                         */
           /*	      CAC_EM_FLAG = 11 when CAC_BRIDGE_EM_FLAG =1 and CAC_V12_EM_FLAG =1                         */
           /*	      CAC_EM_FLAG = 10 when CAC_BRIDGE_EM_FLAG =0 and CAC_V12_EM_FLAG =1                         */   
           /*         CAC_EM_FLAG CHAR                                                                           */ 
  
           CAC_EM_FLAG = trim(left(cac_bridge_em_flag)) || trim(left(cac_v12_em_flag));
           label CAC_EM_FLAG = "Indicates If At Least 1 Email Available for This Household From Email Vendors";   
           label cac_bridge_em_flag = "Indicates If At Least 1 Email Available for This Household From Bridge";   
   run;
       
   %put "DONE MERGING";

   * QC FINAL BASE_DEMO ;
      
   proc sql;
       select count(*) into: flagged_pid
       from base.base_demo_&cstate           
       where cac_bridge_em_flag =1;
       
       select count(*) into: total
       from base.base_demo_&cstate;           
   quit;
    
   %put "DONE QC";

   %put "       QC SUMMARY OF APPENDING BRIDGE EMAIL FOR &cstate. ON &year. QUARTER &quarter.         ";
   %put "_____________________________________________________________________________________________";
   %put "                                                                                             ";
   %put "  1. # OF OBS IN BRIDGE OF CURRENT STATE BEFORE APPENDING EMAIL IS &brg_obs                   ";
   %put "                                                                                             ";
   %put "  2. # OF OBS IN &cstate BASE_DEMO  IS &base_obs                                             ";
   %put "                                                                                             ";
   %put "  3. # OF EMAIL OF THIS STATE MATCHED BEFORE DEDUP IS &matched_only_obs                      ";
   %put "                                                                                             ";
   %put "  4. # OF UNIQUE EMAIL OF THIS STATE AFTER DEDUP IS &matched_only_nodup_obs                  ";
   %put "                                                                                             ";
   %put "  5. FLAGGED OBS IN BASE_DEMO IS &flagged_pid., SAME AS LINE 4                               ";
   %put "                                                                                             ";
   %put "  6. # OF OBS IN BRIDGE OF CURRENT STATE AFTER APPENDING EMAIL IS &total, SAME AS LINE 2     ";
   %put "                                                                                             ";
   %put "  7. COVERAGE FOR &cstate IS %sysevalf(&matched_only_nodup_obs/&base_obs).                   ";
   %put "_____________________________________________________________________________________________";

     
   data report;
        format STATE $2.
               BRIDGE_RECORDS     10.
               CI_RECORDS         10.
               MATCHMAKED_RECORDS 10.
               UNIQUE_EMAILS      10.
               CI_RECORDS_AFTWRS  10.
               CI_CVRG_RATE       10.2
               ;

               STATE          = "&cstate" ;
               BRIDGE_RECORDS = &brg_obs;
               CI_RECORDS     = &base_obs;       
               MATCHMAKED_RECORDS = &matched_only_obs;
               UNIQUE_EMAILS     =  &matched_only_nodup_obs;
               CI_RECORDS_AFTWRS =  &total;
               CI_CVRG_RATE = &matched_only_nodup_obs/&total;
   run;
   
   proc print data=report;run;
   

%mend coverage;
       
