
/* THRESHOLD MAXIMUM OBSERVATION DE = 200K ID =300K*/
%let maxobs = 300000;


%MACRO coverage(cstate=, email=, year=, quarter=, cac_read_dir_loc=, codepath=);
         
   %include "/project/CACDIRECT/CODE/&codepath./METADATA/library.inc";
   %include "/project/CACDIRECT/CODE/&cicodepath./EM_FLAG/METADATA/library.inc";

   %if &cac_read_dir_loc=A %then %do;
      libname base      "/project/CACDIRECT/&cidatapath./BASE_DEMO/B";
      libname indiv    "/project/CACDIRECT/&cidatapath./INDIV_DEMO/B";
      libname scf      "/project/CACDIRECT/&cidatapath./SCF_MKEY/B";
      libname geo      "/project/CACDIRECT/&cidatapath./GEO/B";
      libname samp     "/project/CACDIRECT/&cidatapath./SAMPLES/B";
      libname v12     "/project/CACDIRECT/&cidatapath./V12/B";
   %end;

   %else %if &cac_read_dir_loc=B %then %do;
      libname base     "/project/CACDIRECT/&cidatapath./BASE_DEMO/A";
      libname indiv    "/project/CACDIRECT/&cidatapath./INDIV_DEMO/A";
      libname scf      "/project/CACDIRECT/&cidatapath./SCF_MKEY/A";
      libname geo      "/project/CACDIRECT/&cidatapath./GEO/A";
      libname samp     "/project/CACDIRECT/&cidatapath./SAMPLES/A";
      libname v12     "/project/CACDIRECT/&cidatapath./V12/A";
   %end;

   /* GET THE NUMBER OF OBS IN CURRENT STATE  */
     
   %nobs(data=v12_sas.v12_&cstate);
   %let v12_obs = &nobs;
        
   *HOW MANY LOOPS;
   
   %let loopo = %eval(&v12_obs/&maxobs+1);
      
   %put "THE NUMBER OF OBS OF CURRENT STATE IS &v12_obs";
   %put "LOOP &loopo TIMES TO SUBSET WITH &maxobs OBS IN EACH SUBSET";

   * THIS %SUBSET MACRO SUBSETS DATASET ACCORDING TO WHAT ARE THE &maxobs AND &nobs OF CURRENT STATE;
           * 1. CREATES &LOOPO SUBSETS;
           * 2. PUT EACH SUBSET INTO %MATCHMAKER ;
           *    SHOULD EXPECT RETURNED DATASET LIKE data em_flag.v12_%sysfunc(dequote(&cstate))_&i_matched ;
           *    OR V12_FL_1_MATCHED AS AN EXAMPLE;
           * 3. FINALLY, KEEP ONLY NEEDED FIELDS AND OUTPUT data em_flag.v12_%sysfunc(dequote(&cstate))_&i_matched_only;
           *    OR V12_FL_1_MATCHED_ONLY AS AN EXAMPLE;
   
   %macro subset;
        
      %do i = 1 %to &loopo;             /*****************************************DO LOOP TO SUBSET AND RUN %MATCHMAKER WITH THE SUBSETS AS A PARAMETER */
        
         * LOWER BAND OF SUBSETTING ;
         %let j = %eval(&i-1);
        
         *SUBSETTING  ;   
         %put "SUBSETTING v12_&cstate._&i";     
   
         data v12_&cstate._&i;
            set v12_sas.v12_&cstate;
            if %eval(&maxobs*&j)< _n_ <= %eval(&maxobs*&i);
         run;
        
         proc print data = v12_&cstate._&i(obs=10);run;
        

         x "cd /project/CACDIRECT/&cidatapath./PROCESS/&cstate";
       
         %matchmaker(
                            client_dir=
                          , client_data= v12_&cstate._&i
                          , client_id= v12_cac_id
                          , name_format=2
                          , name_var=v12_name_first
                          , name_var2=v12_name_last
                          , addr_format=2
                          , addr1=v12_address1
                          , addr2=v12_address2
                          , state_var=v12_state
                          , zip5=v12_zip5
                          , zip4=v12_zip4
                          , match_lev=1
                          , key1=1
                          , key2=1
                          , key3=1
                          , key4=1
                          , key5=1
                          , key6=1
                          , key7=1
                          , state_list= %upcase(%str(%'&cstate%'))
                          , ethnic=0
                          , geo_interest=0
                          , census=0
                         , census_keep=0
                         , individual=0
                         , addr_detail=0
                         , cacd_prod=0
                         , results_by_state=0
                         , email=&email
                 );
         x "cd /project/CACDIRECT/&cidatapath./PROCESS";
      
         %put "DONE MATCHMAKING FOR v12_&cstate._&i";                  /*********************************************END OF DO LOOP TO SUBSET AND RUN %MATCHMAKER WITH THE SUBSETS AS A PARAMETER */
      %end;
       
   %mend subset;
       
   * CALL THAT ;
   %subset;
       
   * THIS MACRO % STACK STACKS UP DATASETS GENERATED BY %MATCHMAKER ;
   %macro stackup;
         
      data v12.v12_pid_&cstate (drop=v12_cac_id cacdirect_hh_match);
         set
            %do m =1 %to &loopo;
                v12_&cstate._&m._matched(keep = v12: cac_hh_pid cacdirect_hh_match cacdirect_match_key where=( cacdirect_hh_match = 1))
            %end;
            ;
      run;

   %mend stackup;

   %put "STACKING SPLIT DATASETS UP";
   
   %stackup;
   
   %put "DONE STACKING";
   %put "DEDUPING V12 EMAIL LIST";

   proc sort nodupkey data=v12.v12_pid_&cstate (keep=cac_hh_pid) out=v12_uniq_pid_&cstate.;
      by cac_hh_pid;
   run;
       
   %put "DONE DEDUPING";
      
   *  QC OF MATCHED DATASET CREATED BY %MATCHMAKER AND ORIGINAL DATABASET;
       
   *HOW MANY OBS IN V12 DATASET ;
   %nobs(data=v12_sas.v12_&cstate );
   %let v12_obs=&nobs;
       
   %nobs(data=base.base_demo_&cstate);
   %let base_obs=&nobs;
       
   *  CREATE A DATASET CALLED V12_CUT_MATCHED_ONLY WHICH CONTAINS ONLY MATCHED RECORDS;
    
   *HOW MANY OBS IN BASE_DEMO HAVE V12 EMAIL MATCHED ;
   %nobs(data=v12.v12_pid_&cstate);
   %let matched_only_nodup_obs=&nobs;
       
   * MERGE MATCHED DATASET TOGETHER WITH BASE_DEMO ;
   * THIS IS THE FINAL STUFF;
   

   data base.base_demo_&cstate (sortedby=cac_hh_pid);                   
        merge base.base_demo_&cstate (in=a sortedby=cac_hh_pid)
              v12_uniq_pid_&cstate. (in=b keep=cac_hh_pid);
        by cac_hh_pid;
        if a;
           cac_v12_em_flag = b;
   run;
       
   %put "DONE MERGING";

   * QC FINAL BASE_DEMO ;
      
   proc sql;
       select count(*) into: flagged_pid
       from base.base_demo_&cstate
       where cac_v12_em_flag =1;
       
       select count(*) into: total
       from base.base_demo_&cstate;
   quit;

   %put "DONE QC";
         
   %put "           QC SUMMARY OF APPENDING EMAIL FOR &cstate. ON &year. QUARTER &quarter.            ";
   %put "_____________________________________________________________________________________________";
   %put "                                                                                             ";
   %put "  1. # OF OBS IN V12 OF CURRENT STATE BEFORE APPENDING EMAIL IS &v12_obs                     ";
   %put "                                                                                             ";
   %put "  2. # OF OBS IN &cstate BASE_DEMO  IS &base_obs                                             ";
   %put "                                                                                             ";
   %put "  3. # OF UNIQUE EMAIL OF THIS STATE AFTER DEDUP IS &matched_only_nodup_obs                  ";
   %put "                                                                                             ";
   %put "  4. FLAGGED OBS IN DEV.BASE_DEMO IS &flagged_pid., SAME AS LINE 3                           ";
   %put "                                                                                             ";
   %put "  5. # OF OBS IN V12 OF CURRENT STATE AFTER APPENDING EMAIL IS &total, SAME AS LINE 2        ";
   %put "                                                                                             ";
   %put "  6. COVERAGE FOR &cstate IS %sysevalf(&matched_only_nodup_obs/&base_obs).                   ";
   %put "_____________________________________________________________________________________________";
     
%mend coverage;
       
