1                                        The WPS System      11:42 Wednesday, July 29, 2015     

NOTE: (c) Copyright World Programming Limited 2002-2014.  All rights reserved.
NOTE: World Programming System 3.01 (03.01.01.00.000635)
      Licensed to Cognesia
NOTE: This session is executing on the LINUX platform and is running in 64 bit mode

NOTE: AUTOEXEC processing beginning; file is
      /home/software/wps-3.1.1.0.635-maintenance/autoexec.sas
MPRINT(DIRECT_LIBS):  libname base "/project17/CACDIRECT/DATA/BASE_DEMO/A";
NOTE: Library base assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/BASE_DEMO/A

MPRINT(DIRECT_LIBS):  libname indiv "/project17/CACDIRECT/DATA/INDIV_DEMO/A";
NOTE: Library indiv assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/INDIV_DEMO/A

MPRINT(DIRECT_LIBS):  libname scf "/project17/CACDIRECT/DATA/SCF_MKEY/A";
NOTE: Library scf assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/SCF_MKEY/A

MPRINT(DIRECT_LIBS):  libname process "/project17/CACDIRECT/DATA/PROCESS";
NOTE: Library process assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/PROCESS

MPRINT(DIRECT_LIBS):  libname geo "/project17/CACDIRECT/DATA/GEO/A";
NOTE: Library geo assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/GEO/A

MPRINT(DIRECT_LIBS):  libname easi "/project17/CENSUS/DATA/2010/EASI";
NOTE: Library easi assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/2010/EASI

MPRINT(DIRECT_LIBS):  libname cen2010 "/project17/CENSUS/DATA/2010/FINAL";
NOTE: Library cen2010 assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/2010/FINAL

MPRINT(DIRECT_LIBS):  libname cen2000 "/project17/CENSUS/DATA/FINAL";
NOTE: Library cen2000 assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/FINAL

MPRINT(DIRECT_LIBS):  libname samp "/project/CACDIRECT/DATA/SAMPLES/A";
NOTE: Library samp assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/SAMPLES/A

MPRINT(DIRECT_LIBS):  libname dev "/project17/CACDIRECT/DATA/DEVELOPMENT";
NOTE: Library dev assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/DEVELOPMENT

MPRINT(DIRECT_LIBS):  libname et "/project17/CACDIRECT/DATA/ETECH/A";
NOTE: Library et assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/ETECH/A

MPRINT(DIRECT_LIBS):  libname jhs "/project17/CACDIRECT/DATA/JOB_HISTORY";
NOTE: Library jhs assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/JOB_HISTORY

MPRINT(DIRECT_LIBS):  libname buycnc "/project17/CACDIRECT/DATA/BUYER_CONNECT/A";
NOTE: Library buycnc assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/BUYER_CONNECT/A

MPRINT(DIRECT_LIBS):  libname foret "/project17/CACDIRECT/DATA/ETECH/FORETECH";
NOTE: Library foret assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/ETECH/FORETECH

MPRINT(DIRECT_LIBS):  libname newsilh "/project17/CACDIRECT/DATA/SILH3D/A";
NOTE: Library newsilh assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/SILH3D/A

MPRINT(DIRECT_LIBS):  libname ddnc "/project17/CACDIRECT/DATA/DDNC";
NOTE: Library ddnc assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/DDNC

MPRINT(DIRECT_LIBS):  libname domsilh "/project17/CACDIRECT/DATA/DOM_SILH/A";
NOTE: Library domsilh assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/DOM_SILH/A

MPRINT(DIRECT_LIBS):  libname intmdl "/project/CACDIRECT/DATA/INTMDL/A";
NOTE: Library intmdl assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/INTMDL/A

MPRINT(DIRECT_LIBS):  libname for_rts "/project/CACDIRECT/DATA/REAL_TIME/A";
NOTE: Library for_rts assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/REAL_TIME/A

MPRINT(DIRECT_LIBS):  libname v12 "/project/CACDIRECT/DATA/V12/A";
NOTE: Library v12 assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/V12/A

MPRINT(DIRECT_LIBS):  libname bridge "/project/CACDIRECT/DATA/BRIDGE/A";
NOTE: Library bridge assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/BRIDGE/A

MPRINT(DIRECT_LIBS):  libname geoagg "/project/CACDIRECT/DATA/GEOAGG/A";
NOTE: Library geoagg assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/GEOAGG/A

NOTE: Library dma assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/DMA/A

NOTE: Format cdif output
NOTE: Procedure format step took :
      real time : 0.027
      cpu time  : 0.027


NOTE: Format cac_le_a output
NOTE: Format cac_le_b output
NOTE: Format $cac_le_c output
NOTE: Format match output
NOTE: Format geo_match output
NOTE: Format $cac_cdi output
NOTE: Format prod_act output
NOTE: Format cac_act output
NOTE: Format cac_prod output
NOTE: Format cac_kids output
NOTE: Format cac_mar output
NOTE: Format cac_age output
NOTE: Format $cac_inc output
NOTE: Format $cac_ninc output
NOTE: Format $silh_ld output
NOTE: Format $silh_super output
NOTE: Format $silh output
NOTE: Format pofaage output
NOTE: Format pofaagi output
NOTE: Format cac_edu output
NOTE: Format cac_occ output
NOTE: Format $etethnic output
NOTE: Format $etrelig output
NOTE: Format $etlang output
NOTE: Format $ethisporg output
NOTE: Format $ethispasm output
NOTE: Format $etasiaasm output
NOTE: Format $etgender output
NOTE: Procedure format step took :
      real time : 0.008
      cpu time  : 0.008


NOTE: Format $val_st_scf output
NOTE: Procedure format step took :
      real time : 0.009
      cpu time  : 0.008


MPRINT(B2B_LIBS):  libname b2b '/project/B2B/DATA/PRODUCTION/FIRM/B';
NOTE: Library b2b assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/B2B/DATA/PRODUCTION/FIRM/B

MPRINT(B2B_LIBS):  libname b2bem '/project/B2B/DATA/PRODUCTION/EM/B';
NOTE: Library b2bem assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/B2B/DATA/PRODUCTION/EM/B

MPRINT(B2B_LIBS):  libname b2bmkey '/project/B2B/DATA/PRODUCTION/MATCHKEYS/B';
NOTE: Library b2bmkey assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/B2B/DATA/PRODUCTION/MATCHKEYS/B

MPRINT(B2B_LIBS):  libname b2bsamp '/project18/CLIENT/B2B/DATA/PRODUCTION/SAMPLES/B';
NOTE: Library b2bsamp assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project18/CLIENT/B2B/DATA/PRODUCTION/SAMPLES/B

MPRINT(B2B_LIBS):  libname b2bprocs '/project/B2B/DATA/PRODUCTION/PROCESS';
NOTE: Library b2bprocs assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/B2B/DATA/PRODUCTION/PROCESS

NOTE: Format $salesvol output
NOTE: Format $empsize output
NOTE: Format $offsize output
NOTE: Format $adsize output
NOTE: Format $location output
NOTE: Format $ctitle output
NOTE: Format $callstat output
NOTE: Format $b2bcred output
NOTE: Format $sqftg output
NOTE: Format $teleexp output
NOTE: Format $utilexp output
NOTE: Format $adexp output
NOTE: Format $payexp output
NOTE: Format $rentexp output
NOTE: Format $pcexp output
NOTE: Format $osupexp output
NOTE: Format $acctexp output
NOTE: Format $packexp output
NOTE: Format $labrexp output
NOTE: Format $insrexp output
NOTE: Format $prntexp output
NOTE: Format $admnexp output
NOTE: Format $leglexp output
NOTE: Format $cstatus output
NOTE: Format $exptype output
NOTE: Format $actflag output
NOTE: Format $tcode output
NOTE: Format $ttype output
NOTE: Format $wealth output
NOTE: Format $addrtype output
NOTE: Format $busstat output
NOTE: Format $govflag output
NOTE: Format $indflag output
NOTE: Format $sic1cac output
NOTE: Format $sic2cac output
NOTE: Format $sic4cac output
NOTE: Procedure format step took :
      real time : 0.025
      cpu time  : 0.024


NOTE: Format $sicdis output
NOTE: Procedure format step took :
      real time : 0.081
      cpu time  : 0.080


NOTE: AUTOEXEC processing completed

1         %MACRO coverage(cac_read_dir_loc=, codepath=, cstate=, spedis_thresh=,genders=);
2         
3            %let testobs = max;
4            %let outobs=max;
5         
6            %include "/project/CACDIRECT/CODE/&codepath./METADATA/library.inc";
7         
8            %if &cac_read_dir_loc=A %then %do;                                       *** IF
CURRENT PRODUCTION DATA IS IN A THEN WRITE DATA FOR NEW QUARTER TO B;
9               libname _ALL_;
10              libname base      "/project/CACDIRECT/&cidatapath./BASE_DEMO/B";
11              libname bridge   "/project/CACDIRECT/&cidatapath./BRIDGE/B";
12           %end;
13        
14           %else %if &cac_read_dir_loc=B %then %do;                                        ***
IF CURRENT PRODUCTION DATA IS IN B THEN WRITE DATA FOR NEW QUARTER TO A;
15              libname _ALL_;
16              libname base      "/project/CACDIRECT/&cidatapath./BASE_DEMO/A";
17              libname bridge   "/project/CACDIRECT/&cidatapath./BRIDGE/A";
18           %end;
19        
20           filename outfile
"/project/CACDIRECT/&cidatapath./EXPORT/BRIDGE/bridge_pid_table_&cstate..csv";
21        
22        /*
23           %parsimony(inlib=work, indata=clean, outlib=work, outdata=client_outdat,
keep_clean=1, keep_keys=1,
24                      keep_pieces=0, pname_form=1, pname1=clean_name, pname2=, paddr_form=1,
paddr1=clean_addr, paddr2=, pstate=&state_var, pzip=&zip5);
25        */
26        
27           *not sure if the bridge sort should nodup or not, need to talk to bryan/mike;
28        
29           proc sort data=bridge.bridge_pid_&cstate. (obs=&testobs) out=bridge_pid_&cstate.;
30              by cac_hh_pid;
31           run;
32        
33           %macro gender(gender=);
34        
35              data scored_&gender._&cstate (keep=cac_name_last cac_hh_pid
cac_bridge_md5email_id chosen: bridge: last_name_match);
36                 merge bridge_pid_&cstate (in=a)
37                       base.base_demo_&cstate (in=b obs=&testobs keep=cac_name_last cac_ind:
cac_hh_pid cac_em_flag where=(substr(cac_em_flag,1,1)='1'));
38                 by cac_hh_pid;
39                 if a and b;
40                 format chosen_cac_ind_gender chosen_cac_ind_number chosen_spedis_score 8.
chosen_match_level chosen_first_x_of_x_flag 8.
41                        chosen_cac_ind_name $14. chosen_cac_ind_mi $1. chosen_cac_ind_last
$20.;
42                 array genders cac_ind1_gender cac_ind2_gender cac_ind3_gender cac_ind4_gender
cac_ind5_gender;
43                 array names cac_ind1_name cac_ind2_name cac_ind3_name cac_ind4_name
cac_ind5_name;
44                 array mis cac_ind1_mi cac_ind2_mi cac_ind3_mi cac_ind4_mi cac_ind5_mi;
45                 if not(missing(cac_ind5_name)) then count=5;
46                 else if not(missing(cac_ind4_name)) then count=4;
47                 else if not(missing(cac_ind3_name)) then count=3;
48                 else if not(missing(cac_ind2_name)) then count=2;
49                 else if not(missing(cac_ind1_name)) then count=1;
50                 else delete;
51        
52                 *No indiv_demo names have spaces in them, despite some of them being made of
multiple words (maryjo);
53                 *I recommend trying to match a single word of the bridge name to the indiv
name first followed by the full name with spaces removed;
54                 *This is not implemented yet;
55        
56                 *Since we do not have mkey on the bridge_pid_xx datasets, we need to figure
out if the last name even matched on the first individual at all.;
57                 *Last name is the same for all individuals, so we will approximate mkey1-4
matching by using exact/fuzzy last name matching;
58        
59                 *No individuals in IL were under 18, so we are safe contacting any
individual;
60        
61                 *individual number gets priority;
62                 *taking the first person for a given gender, even if the gender is inferred
from the first individual;
63        
64                 *Matching order;
65                 *0. determine if last name matches exact or at least fuzzy (equivalent to
mkey1-4 assuming address must have matched);
66                 *0.5 process separately by gender to determine male match and female match
for each bridge ID (deduped at individual level so no one is both genders);
67                 *1. first_name exact match;
68                 *2. spedis partial match score sufficient;
69                 *3. first_name first character match and first_x_of_x_flag (1/1, 2/2, 2/3,
3/4) with spedis tiebreaker;
70        
71                 *0. determine if last name matches exact or at least fuzzy (equivalent to
mkey1-4 assuming address must have matched);
72        
73                 bridge_name_last=upcase(strip(bridge_name_last));
74                 bridge_name_first=upcase(strip(bridge_name_first));
75                 cac_indiv_last_exact=compress(cac_name_last,'!');
76                 cac_indiv_last_fuzzy1=soundex(compress(cac_name_last,'!'));
77                 bridge_name_last_exact=compress(bridge_name_last,'!');
78                 bridge_name_last_fuzzy1=soundex(compress(bridge_name_last,'!'));
79                 if bridge_name_last_exact = cac_indiv_last_exact or cac_indiv_last_fuzzy1 =
bridge_name_last_fuzzy1
80                 then do i = 1 to count;
81                    last_name_match=1;
82                    if missing(genders(i)) then genders(i) = cac_ind1_gender;
83                    %if &gender = M %then %do; *process next person if gender mismatch;
84                       if genders(i) ne 1 then continue;
85                    %end;
86                    %else %if &gender = F %then %do; *process next person if gender mismatch;
87                       if genders(i) = 1 or missing(genders(i)) then continue;
88                    %end;
89                    min_length = min(length(names(i)),length(bridge_name_first));
90                    if min_length = 1 then first_x_of_x_flag = (substr(names(i),1,1) =
substr(bridge_name_first,1,1));
91                    else if min_length = 2 then first_x_of_x_flag =  (substr(names(i),1,2) =
substr(bridge_name_first,1,2));
92                    else if min_length = 3 then first_x_of_x_flag = ((substr(names(i),1,1) =
substr(bridge_name_first,1,1)) + (substr(names(i),2,1) = substr(bridge_name_first,2,1)) +
(substr(names(i
92      ! ),3,1) = substr(bridge_name_first,3,1)) ) > 1;
93                    else first_x_of_x_flag = (   (substr(names(i),1,1) =
substr(bridge_name_first,1,1)) + (substr(names(i),2,1) = substr(bridge_name_first,2,1))
94                                               + (substr(names(i),3,1) =
substr(bridge_name_first,3,1)) + (substr(names(i),4,1) = substr(bridge_name_first,4,1)) ) > 2;
95        
96                    *1. first_name exact match;
97                    if names(i) = bridge_name_first and (missing(chosen_match_level) or
chosen_match_level > 1) then do;
98                       temp_match_level = 1;
99                       chosen_cac_ind_number = i;
100                      spedis_score=spedis(names(i),bridge_name_first);
101                   end;
102       
103          /*
104          *originalish approach;
105                   *2. first_name first character match;
106                   else if substr(names(i),1,1) = substr(bridge_name_first,1,1)  and
(missing(chosen_match_level) or chosen_match_level > 2) then do;
107                      temp_match_level = 2;
108                      chosen_cac_ind_number = i;
109                      spedis_score=spedis(names(i),bridge_name_first);
110                   end;
111                   *3. spedis partial match score sufficient;
112                   else if (missing(chosen_match_level) or chosen_match_level > 2) then do;
113                      spedis_score=spedis(names(i),bridge_name_first);
114                      if      spedis_score < &spedis_thresh
115                         and (spedis_score < chosen_spedis_score or
missing(chosen_spedis_score))
116                      then do;
117                         temp_match_level = 3;
118                         chosen_cac_ind_number = i;
119                      end;
120                   end; */
121          *alternative approach;
122                   *2. spedis partial match score sufficient;
123                   else if (missing(chosen_match_level) or chosen_match_level > 1) then do;
124                      spedis_score=spedis(names(i),bridge_name_first);
125                      if      spedis_score < &spedis_thresh
126                         and (spedis_score < chosen_spedis_score or
missing(chosen_spedis_score))
127                      then do;
128                         temp_match_level = 2;
129                         chosen_cac_ind_number = i;
130                      end;
131                      *3. first_name first character match and first_x_of_x_flag (1/1, 2/2,
2/3, 3/4) with spedis tiebreaker;
132                      else if      substr(names(i),1,1) = substr(bridge_name_first,1,1)
133                              /*and (spedis_score < chosen_spedis_score or
missing(chosen_spedis_score))
134                              and (missing(chosen_match_level) or chosen_match_level > 2) */
135                              and missing(chosen_match_level)
136                              and first_x_of_x_flag
137                      then do;
138                         temp_match_level = 3;
139                         chosen_cac_ind_number = i;
140                      end;
141                   end;
142                   if not(missing(temp_match_level)) then do;
143                      chosen_match_level = temp_match_level;
144                      call missing(temp_match_level);
145                      chosen_spedis_score = spedis_score;
146                      chosen_cac_ind_gender = genders(chosen_cac_ind_number);
147                      chosen_cac_ind_name = names(chosen_cac_ind_number);
148                      chosen_cac_ind_mi = mis(chosen_cac_ind_number);
149                      chosen_cac_ind_last = cac_name_last;
150                      chosen_first_x_of_x_flag=first_x_of_x_flag;
151                   end;
152                end;
153                else last_name_match=0;
154             run;
155       
156             proc freq data = scored_&gender._&cstate;
157                table last_name_match*chosen_cac_ind_number / missing;
158                table chosen_cac_ind_number*chosen_match_level / missing;
159             run;
160       
161             title "match_level 2";
162             proc freq data = scored_&gender._&cstate (where=(chosen_match_level=2));
163                table chosen_spedis_score / missing;
164             run;
165       
166             title "match_level 3";
167             proc freq data = scored_&gender._&cstate (where=(chosen_match_level=3));
168                table chosen_spedis_score / missing;
169             run;
170             title "";
171          /*
172             title 'last_name_match=1 and chosen_match_level=3 and chosen_spedis_score <=
60';
173             proc print data = scored_&gender._&cstate (obs=100 keep = chosen_cac_ind_name
bridge_name_first chosen_match_level chosen_spedis_score last_name_match
chosen_first_x_of_x_flag
174                                                       where=(last_name_match=1 and
chosen_match_level=3 and chosen_spedis_score <= 60)); run;
175       
176             title 'last_name_match=1 and chosen_match_level=2 and chosen_spedis_score <= 60
and chosen_spedis_score >=40 and chosen_first_x_of_x_flag = 0';
177             proc print data = scored_&gender._&cstate (obs=100 keep = chosen_cac_ind_name
bridge_name_first chosen_match_level chosen_spedis_score last_name_match
chosen_first_x_of_x_flag
178                                                       where=(last_name_match=1 and
chosen_match_level=2 and chosen_spedis_score <= 60 and chosen_spedis_score >=40 and
chosen_first_x_of_x_flag = 0)
178     ! ); run;
179       
180             title 'last_name_match=1 and chosen_match_level=2 and chosen_spedis_score <=
50';
181             proc print data = scored_&gender._&cstate (obs=100 keep = chosen_cac_ind_name
bridge_name_first chosen_match_level chosen_spedis_score last_name_match
chosen_first_x_of_x_flag
182                                                       where=(last_name_match=1 and
chosen_match_level=2 and chosen_spedis_score <= 50)); run;
183       
184             title 'last_name_match=1 and chosen_match_level=2 and chosen_spedis_score <= 40
and chosen_first_x_of_x_flag=0';
185             proc print data = scored_&gender._&cstate (obs=100 keep = chosen_cac_ind_name
bridge_name_first chosen_match_level chosen_spedis_score last_name_match
chosen_first_x_of_x_flag
186                                                       where=(last_name_match=1 and
chosen_match_level=2 and chosen_spedis_score <= 40 and chosen_first_x_of_x_flag=0)); run;
187       
188             title 'last_name_match=1 and chosen_match_level=2 and chosen_spedis_score >=
50';
189             proc print data = scored_&gender._&cstate (obs=100 keep = chosen_cac_ind_name
bridge_name_first chosen_match_level chosen_spedis_score last_name_match
chosen_first_x_of_x_flag
190                                                       where=(last_name_match=1 and
chosen_match_level=2 and chosen_spedis_score >= 50)); run;
191       
192             title 'last_name_match=0';
193             proc print data = scored_&gender._&cstate (obs=100 keep = cac_name_last
bridge_name_last last_name_match where=(last_name_match=0)); run;
194          */
195       
196          %mend gender;
197       
198          %if &genders=Y %then %do;
199       
200             %gender(gender=M);
201             %gender(gender=F);
202       
203             data scored__&cstate.;
204                set scored_M_&cstate (where=(not(missing(chosen_cac_ind_number))))
205                    scored_F_&cstate (where=(not(missing(chosen_cac_ind_number))));
206             run;
207       
208       /*    *Bryan will do this part in postgres;
209       
210             proc sort data = scored__&cstate.;
211                by cac_bridge_md5email_id chosen_cac_ind_number;
212             run;
213       
214             data scored__&cstate.;
215                set scored__&cstate.;
216                by cac_bridge_md5email_id;
217                if first.cac_bridge_md5email_id;
218             run;
219       
220       */
221          %end;
222          %else %do;
223       
224             %gender(gender=);
225       
226             data scored__&cstate;
227                set scored__&cstate (where=(not(missing(chosen_cac_ind_number))));
228             run;
229       
230          %end;
231       
232          %qc(data=scored__&cstate);
233       
234          data _null_;
235             file outfile dlm=',' dsd lrecl=1000;
236             set scored__&cstate (obs=&outobs where=(not(missing(chosen_cac_ind_number))));
237             if _n_=1 then put 'cac_hh_pid,cac_bridge_md5email_id,chosen_cac_ind_number,
chosen_cac_ind_gender,chosen_cac_ind_name,chosen_cac_ind_mi,chosen_cac_ind_last,' @;
238             if _n_=1 then put 'chosen_spedis_score,chosen_match_level,
chosen_first_x_of_x_flag';
239             put cac_hh_pid cac_bridge_md5email_id chosen_cac_ind_number
chosen_cac_ind_gender chosen_cac_ind_name chosen_cac_ind_mi chosen_cac_ind_last
240                 chosen_spedis_score chosen_match_level chosen_first_x_of_x_flag
241                 ;
242          run;
243       
244       %mend coverage;
245       %coverage(cac_read_dir_loc=B, cstate=ND, codepath=DEVELOPMENT/1240_Z2_HH,
spedis_thresh=35,genders=Y);
MPRINT(COVERAGE):  *****************************************************************************
                   *;
MPRINT(COVERAGE):  * MASTER CONTROLLER FOR ENABLING CACDIRECT PROCESSING/MATCHING;
MPRINT(COVERAGE):  * Updated: 4/19/2012 - JS  * Updated: 5/1/2012 - MM ADDED JOB_HISTORY LIB  *
                   Updated: 5/4/2012 - MM ADDED CEN2010  * Updated: 5/7/2012 - MM ADDED BUYCNC *
                   Updated: 5/7/2012 - MM Changed DEV to point to project17 from project17 *
                   Updated: 7/9/2012 - MM Removed BAK since it no longer required * Updated:
                   7/11/2012 - MM Added NCOA_KILL * Updated: 7/12/2012 - MM Added FORET
                   *****************************************************************************
                   *;
MPRINT(COVERAGE):  *------------------LIBRARIES------------------;
MPRINT(COVERAGE):  **** MACRO DIRECT_LIBS DEFINES LIBRARIES FOR PRODUCTION CACDIRECT DATA;
MPRINT(COVERAGE):  **** MM 1/2013;
MPRINT(COVERAGE):  **** MACRO TAKES 3 PARAMETERS: 1) CAC_DIRECT_PROD_DIR: (A|B) USED TO
                   DETERMINE WHERE DATA IS READ FROM;
MPRINT(COVERAGE):  **** A = PROJECT17/A/..;
MPRINT(COVERAGE):  **** B = PROJECT17/B/..;
MPRINT(COVERAGE):  **** 2) YEAR: YEAR OF PRODUCTION DATA;
MPRINT(COVERAGE):  **** 3) QTR: QTR OF PRODUCTION DATA;
MPRINT(COVERAGE):  **** NEW MACRO CALL CREATED UPDATED UPON THE COMPLETION OF CACDIRECT UPDATE;
MPRINT(COVERAGE):  **** HISTORICAL MACROS CALLS LEFT FOR HISTORICAL REFERENCE;
MPRINT(DIRECT_LIBS):  libname base
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BASE_DEMO/B";
NOTE: Library base assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BASE_DEMO/B

MPRINT(DIRECT_LIBS):  libname indiv
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/INDIV_DEMO/B";
NOTE: Library indiv does not exist
MPRINT(DIRECT_LIBS):  libname scf "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/SCF_MKEY/B";
NOTE: Library scf does not exist
MPRINT(DIRECT_LIBS):  libname process
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/PROCESS";
NOTE: Library process does not exist
MPRINT(DIRECT_LIBS):  libname geo "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/GEO/B";
NOTE: Library geo does not exist
MPRINT(DIRECT_LIBS):  libname easi "/project17/CENSUS/DATA/2010/EASI";
NOTE: Library easi assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/2010/EASI

MPRINT(DIRECT_LIBS):  libname cen2010 "/project17/CENSUS/DATA/2010/FINAL";
NOTE: Library cen2010 assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/2010/FINAL

MPRINT(DIRECT_LIBS):  libname cen2000 "/project17/CENSUS/DATA/FINAL";
NOTE: Library cen2000 assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project17/CENSUS/DATA/FINAL

MPRINT(DIRECT_LIBS):  libname samp "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/SAMPLES/B";
NOTE: Library samp does not exist
MPRINT(DIRECT_LIBS):  libname dev
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/DEVELOPMENT";
NOTE: Library dev does not exist
MPRINT(DIRECT_LIBS):  libname et "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/ETECH/B";
NOTE: Library et does not exist
MPRINT(DIRECT_LIBS):  libname jhis
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/JOB_HISTORY";
NOTE: Library jhis does not exist
MPRINT(DIRECT_LIBS):  libname buycnc
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BUYER_CONNECT/B";
NOTE: Library buycnc does not exist
MPRINT(DIRECT_LIBS):  libname foret
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/ETECH/FORETECH";
NOTE: Library foret does not exist
MPRINT(DIRECT_LIBS):  libname newsilh
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/SILH3D/B";
NOTE: Library newsilh does not exist
MPRINT(DIRECT_LIBS):  libname ddnc "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/DDNC";
NOTE: Library ddnc does not exist
MPRINT(DIRECT_LIBS):  libname domsilh
                      "/project17/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/DOM_SILH/B";
NOTE: Library domsilh does not exist
MPRINT(DIRECT_LIBS):  libname intmdl "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/INTMDL/B";
NOTE: Library intmdl does not exist
MPRINT(DIRECT_LIBS):  libname for_rts
                      "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/REAL_TIME/B";
NOTE: Library for_rts assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/REAL_TIME/B

MPRINT(DIRECT_LIBS):  libname v12 "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/V12/B";
NOTE: Library v12 does not exist
MPRINT(DIRECT_LIBS):  libname bridge "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BRIDGE/B";
NOTE: Library bridge assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BRIDGE/B

MPRINT(DIRECT_LIBS):  libname geoagg "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/GEOAGG/B";
NOTE: Library geoagg does not exist
MPRINT(COVERAGE):  ;
MPRINT(COVERAGE):  * LIBNAME FOR RAW DMA DATA;
MPRINT(COVERAGE):  libname dma "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/DMA/A";
NOTE: Library dma does not exist
MPRINT(COVERAGE):  *------CLIENT MATCHMAKER----*  %let sts = AK AL AR AZ CA CO CT DC DE FL   GA
                   HI IA ID IL IN KS KY LA MA  MD ME MI MN MO MS MT NC ND NE   NH NJ NM NV NY OH
                   OK OR PA RI  SC SD TN TX UT VA VT WA WI WV  WY;
MPRINT(COVERAGE):  ********************;
MPRINT(COVERAGE):  *INFILE STATEMENTS *;
MPRINT(COVERAGE):  ********************;
MPRINT(COVERAGE):  *--- for input of TSP install;
MPRINT(COVERAGE):  ************;
MPRINT(COVERAGE):  * FORMATS;
MPRINT(COVERAGE):  ************;
MPRINT(COVERAGE):  proc format;
MPRINT(COVERAGE):  value cdif 1001 ='D' 1003 ='B' 1005 ='D' 1007 ='D' 1009 ='B' 1011 ='D' 1013
                   ='D' 1015 ='C' 1017 ='D' 1019 ='D' 1021 ='D' 1023 ='D' 1025 ='D' 1027 ='D'
                   1029 ='D' 1031 ='D' 1033 ='D' 1035 ='D' 1037 ='D' 1039 ='D' 1041 ='D' 1043
                   ='C' 1045 ='D' 1047 ='D' 1049 ='D' 1051 ='D' 1053 ='D' 1055 ='C' 1057 ='D'
                   1059 ='D' 1061 ='D' 1063 ='D' 1065 ='D' 1067 ='D' 1069 ='C' 1071 ='D' 1073
                   ='B' 1075 ='D' 1077 ='C' 1079 ='D' 1081 ='C' 1083 ='C' 1085 ='D' 1087 ='D'
                   1089 ='C' 1091 ='D' 1093 ='D' 1095 ='C' 1097 ='B' 1099 ='D' 1101 ='C' 1103
                   ='C' 1105 ='D' 1107 ='D' 1109 ='D' 1111 ='D' 1113 ='D' 1115 ='B' 1117 ='B'
                   1119 ='D' 1121 ='D' 1123 ='D' 1125 ='C' 1127 ='D' 1129 ='D' 1131 ='D' 1133
                   ='D' 2013 ='D' 2016 ='D' 2020 ='C' 2050 ='D' 2060 ='D' 2068 ='D' 2070 ='D'
                   2090 ='D' 2100 ='D' 2105 ='D' 2110 ='D' 2122 ='D' 2130 ='D' 2150 ='D' 2164
                   ='D' 2170 ='D' 2180 ='D' 2185 ='D' 2188 ='D' 2195 ='D' 2198 ='D' 2220 ='D'
                   2230 ='D' 2240 ='D' 2261 ='D' 2270 ='D' 2275 ='D' 2282 ='D' 2290 ='D' 4001
                   ='D' 4003 ='D' 4005 ='D' 4007 ='D' 4009 ='D' 4011 ='D' 4012 ='D' 4013 ='A'
                   4015 ='B' 4017 ='D' 4019 ='B' 4021 ='A' 4023 ='D' 4025 ='D' 4027 ='D' 5001
                   ='D' 5003 ='D' 5005 ='D' 5007 ='C' 5009 ='D' 5011 ='D' 5013 ='D' 5015 ='D'
                   5017 ='D' 5019 ='D' 5021 ='D' 5023 ='D' 5025 ='D' 5027 ='D' 5029 ='D' 5031
                   ='C' 5033 ='D' 5035 ='B' 5037 ='D' 5039 ='D' 5041 ='D' 5043 ='D' 5045 ='B'
                   5047 ='D' 5049 ='D' 5051 ='C' 5053 ='D' 5055 ='D' 5057 ='D' 5059 ='D' 5061
                   ='D' 5063 ='D' 5065 ='D' 5067 ='D' 5069 ='D' 5071 ='D' 5073 ='D' 5075 ='D'
                   5077 ='D' 5079 ='D' 5081 ='D' 5083 ='D' 5085 ='B' 5087 ='D' 5089 ='D' 5091
                   ='D' 5093 ='D' 5095 ='D' 5097 ='D' 5099 ='D' 5101 ='D' 5103 ='D' 5105 ='D'
                   5107 ='D' 5109 ='D' 5111 ='D' 5113 ='D' 5115 ='D' 5117 ='D' 5119 ='B' 5121
                   ='D' 5123 ='D' 5125 ='B' 5127 ='D' 5129 ='D' 5131 ='C' 5133 ='D' 5135 ='D'
                   5137 ='D' 5139 ='D' 5141 ='D' 5143 ='C' 5145 ='D' 5147 ='D' 5149 ='D' 6001
                   ='A' 6003 ='D' 6005 ='D' 6007 ='C' 6009 ='D' 6011 ='D' 6013 ='A' 6015 ='D'
                   6017 ='B' 6019 ='B' 6021 ='D' 6023 ='D' 6025 ='D' 6027 ='D' 6029 ='B' 6031
                   ='D' 6033 ='D' 6035 ='D' 6037 ='A' 6039 ='B' 6041 ='A' 6043 ='D' 6045 ='D'
                   6047 ='D' 6049 ='D' 6051 ='D' 6053 ='C' 6055 ='A' 6057 ='C' 6059 ='A' 6061
                   ='B' 6063 ='D' 6065 ='A' 6067 ='B' 6069 ='D' 6071 ='A' 6073 ='A' 6075 ='A'
                   6077 ='C' 6079 ='D' 6081 ='A' 6083 ='C' 6085 ='A' 6087 ='A' 6089 ='D' 6091
                   ='D' 6093 ='D' 6095 ='A' 6097 ='A' 6099 ='C' 6101 ='C' 6103 ='D' 6105 ='D'
                   6107 ='D' 6109 ='D' 6111 ='A' 6113 ='B' 6115 ='D' 8001 ='A' 8003 ='D' 8005
                   ='A' 8007 ='D' 8009 ='D' 8011 ='D' 8013 ='A' 8014 ='C' 8015 ='D' 8017 ='D'
                   8019 ='D' 8021 ='D' 8023 ='D' 8025 ='D' 8027 ='D' 8029 ='D' 8031 ='A' 8033
                   ='D' 8035 ='A' 8037 ='D' 8039 ='D' 8041 ='C' 8043 ='D' 8045 ='D' 8047 ='D'
                   8049 ='D' 8051 ='D' 8053 ='D' 8055 ='D' 8057 ='D' 8059 ='A' 8061 ='D' 8063
                   ='D' 8065 ='D' 8067 ='D' 8069 ='D' 8071 ='D' 8073 ='D' 8075 ='D' 8077 ='D'
                   8079 ='D' 8081 ='D' 8083 ='D' 8085 ='D' 8087 ='D' 8089 ='D' 8091 ='D' 8093
                   ='D' 8095 ='D' 8097 ='D' 8099 ='D' 8101 ='D' 8103 ='D' 8105 ='D' 8107 ='D'
                   8109 ='D' 8111 ='D' 8113 ='D' 8115 ='D' 8117 ='D' 8119 ='D' 8121 ='D' 8123
                   ='A' 8125 ='D' 9001 ='A' 9003 ='C' 9005 ='A' 9007 ='A' 9009 ='A' 9011 ='C'
                   9013 ='C' 9015 ='C' 10001 ='C' 10003 ='A' 10005 ='C' 11001 ='A' 12001 ='C'
                   12003 ='D' 12005 ='C' 12007 ='D' 12009 ='B' 12011 ='A' 12013 ='D' 12015 ='C'
                   12017 ='C' 12019 ='B' 12021 ='C' 12023 ='D' 12027 ='D' 12029 ='D' 12031 ='B'
                   12033 ='C' 12035 ='B' 12037 ='D' 12039 ='D' 12041 ='D' 12043 ='D' 12045 ='D'
                   12047 ='D' 12049 ='D' 12051 ='D' 12053 ='A' 12055 ='C' 12057 ='A' 12059 ='D'
                   12061 ='C' 12063 ='D' 12065 ='D' 12067 ='D' 12069 ='B' 12071 ='B' 12073 ='C'
                   12075 ='D' 12077 ='D' 12079 ='D' 12081 ='B' 12083 ='C' 12085 ='C' 12086 ='A'
                   12087 ='C' 12089 ='B' 12091 ='C' 12093 ='D' 12095 ='B' 12097 ='B' 12099 ='B'
                   12101 ='A' 12103 ='A' 12105 ='B' 12107 ='C' 12109 ='B' 12111 ='C' 12113 ='C'
                   12115 ='B' 12117 ='B' 12119 ='D' 12121 ='D' 12123 ='D' 12125 ='D' 12127 ='B'
                   12129 ='D' 12131 ='D' 12133 ='D' 13001 ='D' 13003 ='D' 13005 ='D' 13007 ='D'
                   13009 ='C' 13011 ='D' 13013 ='A' 13015 ='A' 13017 ='D' 13019 ='D' 13021 ='C'
                   13023 ='D' 13025 ='D' 13027 ='D' 13029 ='D' 13031 ='D' 13033 ='D' 13035 ='D'
                   13037 ='D' 13039 ='D' 13043 ='D' 13045 ='A' 13047 ='C' 13049 ='D' 13051 ='C'
                   13053 ='D' 13055 ='D' 13057 ='A' 13059 ='C' 13061 ='D' 13063 ='A' 13065 ='D'
                   13067 ='A' 13069 ='D' 13071 ='D' 13073 ='C' 13075 ='D' 13077 ='A' 13079 ='D'
                   13081 ='D' 13083 ='D' 13085 ='D' 13087 ='D' 13089 ='A' 13091 ='D' 13093 ='D'
                   13095 ='C' 13097 ='A' 13099 ='D' 13101 ='D' 13103 ='D' 13105 ='D' 13107 ='D'
                   13109 ='D' 13111 ='D' 13113 ='A' 13115 ='C' 13117 ='A' 13119 ='D' 13121 ='A'
                   13123 ='D' 13125 ='D' 13127 ='C' 13129 ='C' 13131 ='D' 13133 ='D' 13135 ='A'
                   13137 ='C' 13139 ='C' 13141 ='D' 13143 ='D' 13145 ='D' 13147 ='C' 13149 ='D'
                   13151 ='A' 13153 ='C' 13155 ='D' 13157 ='C' 13159 ='D' 13161 ='D' 13163 ='D'
                   13165 ='D' 13167 ='D' 13169 ='D' 13171 ='D' 13173 ='D' 13175 ='D' 13177 ='D'
                   13179 ='C' 13181 ='D' 13183 ='D' 13185 ='C' 13187 ='D' 13189 ='D' 13191 ='D'
                   13193 ='D' 13195 ='D' 13197 ='D' 13199 ='D' 13201 ='D' 13205 ='D' 13207 ='D'
                   13209 ='D' 13211 ='D' 13213 ='D' 13215 ='C' 13217 ='A' 13219 ='C' 13221 ='D'
                   13223 ='A' 13225 ='C' 13227 ='A' 13229 ='D' 13231 ='D' 13233 ='C' 13235 ='D'
                   13237 ='D' 13239 ='D' 13241 ='D' 13243 ='D' 13245 ='C' 13247 ='A' 13249 ='D'
                   13251 ='D' 13253 ='D' 13255 ='A' 13257 ='C' 13259 ='D' 13261 ='D' 13263 ='D'
                   13265 ='D' 13267 ='D' 13269 ='D' 13271 ='D' 13273 ='D' 13275 ='D' 13277 ='C'
                   13279 ='D' 13281 ='D' 13283 ='D' 13285 ='C' 13287 ='D' 13289 ='D' 13291 ='D'
                   13293 ='D' 13295 ='C' 13297 ='A' 13299 ='D' 13301 ='D' 13303 ='D' 13305 ='D'
                   13307 ='D' 13309 ='D' 13311 ='D' 13313 ='C' 13315 ='D' 13317 ='D' 13319 ='D'
                   13321 ='D' 15001 ='D' 15003 ='C' 15007 ='D' 15009 ='C' 16001 ='C' 16003 ='D'
                   16005 ='D' 16007 ='D' 16009 ='D' 16011 ='D' 16013 ='D' 16015 ='D' 16017 ='D'
                   16019 ='D' 16021 ='D' 16023 ='D' 16025 ='D' 16027 ='C' 16029 ='D' 16031 ='D'
                   16033 ='D' 16035 ='D' 16037 ='D' 16039 ='D' 16041 ='D' 16043 ='D' 16045 ='D'
                   16047 ='D' 16049 ='D' 16051 ='D' 16053 ='D' 16055 ='C' 16057 ='D' 16059 ='D'
                   16061 ='D' 16063 ='D' 16065 ='D' 16067 ='D' 16069 ='D' 16071 ='D' 16073 ='D'
                   16075 ='D' 16077 ='D' 16079 ='D' 16081 ='D' 16083 ='D' 16085 ='D' 16087 ='D'
                   17001 ='D' 17003 ='D' 17005 ='D' 17007 ='C' 17009 ='D' 17011 ='D' 17013 ='D'
                   17015 ='D' 17017 ='D' 17019 ='C' 17021 ='D' 17023 ='D' 17025 ='D' 17027 ='A'
                   17029 ='C' 17031 ='A' 17033 ='D' 17035 ='D' 17037 ='A' 17039 ='D' 17041 ='D'
                   17043 ='A' 17045 ='D' 17047 ='D' 17049 ='D' 17051 ='D' 17053 ='D' 17055 ='D'
                   17057 ='D' 17059 ='D' 17061 ='D' 17063 ='A' 17065 ='D' 17067 ='D' 17069 ='D'
                   17071 ='D' 17073 ='D' 17075 ='D' 17077 ='D' 17079 ='D' 17081 ='D' 17083 ='A'
                   17085 ='D' 17087 ='D' 17089 ='A' 17091 ='A' 17093 ='A' 17095 ='D' 17097 ='A'
                   17099 ='D' 17101 ='D' 17103 ='D' 17105 ='D' 17107 ='D' 17109 ='D' 17111 ='A'
                   17113 ='C' 17115 ='C' 17117 ='D' 17119 ='A' 17121 ='D' 17123 ='D' 17125 ='D'
                   17127 ='D' 17129 ='D' 17131 ='D' 17133 ='A' 17135 ='D' 17137 ='D' 17139 ='D'
                   17141 ='D' 17143 ='C' 17145 ='D' 17147 ='D' 17149 ='D' 17151 ='D' 17153 ='D'
                   17155 ='D' 17157 ='D' 17159 ='D' 17161 ='C' 17163 ='A' 17165 ='D' 17167 ='C'
                   17169 ='D' 17171 ='D' 17173 ='D' 17175 ='D' 17177 ='D' 17179 ='C' 17181 ='D'
                   17183 ='D' 17185 ='D' 17187 ='D' 17189 ='D' 17191 ='D' 17193 ='D' 17195 ='D'
                   17197 ='A' 17199 ='C' 17201 ='C' 17203 ='D' 18001 ='D' 18003 ='C' 18005 ='C'
                   18007 ='D' 18009 ='D' 18011 ='B' 18013 ='D' 18015 ='D' 18017 ='D' 18019 ='B'
                   18021 ='D' 18023 ='D' 18025 ='D' 18027 ='D' 18029 ='B' 18031 ='D' 18033 ='C'
                   18035 ='C' 18037 ='D' 18039 ='C' 18041 ='C' 18043 ='B' 18045 ='D' 18047 ='D'
                   18049 ='D' 18051 ='D' 18053 ='C' 18055 ='D' 18057 ='B' 18059 ='B' 18061 ='B'
                   18063 ='B' 18065 ='C' 18067 ='C' 18069 ='D' 18071 ='D' 18073 ='D' 18075 ='D'
                   18077 ='D' 18079 ='D' 18081 ='B' 18083 ='D' 18085 ='C' 18087 ='D' 18089 ='A'
                   18091 ='C' 18093 ='D' 18095 ='B' 18097 ='B' 18099 ='D' 18101 ='D' 18103 ='D'
                   18105 ='C' 18107 ='D' 18109 ='B' 18111 ='D' 18113 ='D' 18115 ='B' 18117 ='D'
                   18119 ='D' 18121 ='D' 18123 ='D' 18125 ='D' 18127 ='A' 18129 ='D' 18131 ='D'
                   18133 ='D' 18135 ='D' 18137 ='D' 18139 ='D' 18141 ='C' 18143 ='B' 18145 ='B'
                   18147 ='D' 18149 ='D' 18151 ='C' 18153 ='D' 18155 ='D' 18157 ='C' 18159 ='D'
                   18161 ='D' 18163 ='C' 18165 ='D' 18167 ='C' 18169 ='D' 18171 ='D' 18173 ='C'
                   18175 ='D' 18177 ='C' 18179 ='D' 18181 ='D' 18183 ='D' 19001 ='D' 19003 ='D'
                   19005 ='D' 19007 ='D' 19009 ='D' 19011 ='D' 19013 ='C' 19015 ='D' 19017 ='D'
                   19019 ='D' 19021 ='D' 19023 ='D' 19025 ='D' 19027 ='D' 19029 ='D' 19031 ='D'
                   19033 ='D' 19035 ='D' 19037 ='D' 19039 ='D' 19041 ='D' 19043 ='D' 19045 ='D'
                   19047 ='D' 19049 ='D' 19051 ='D' 19053 ='D' 19055 ='D' 19057 ='C' 19059 ='D'
                   19061 ='C' 19063 ='D' 19065 ='D' 19067 ='D' 19069 ='D' 19071 ='D' 19073 ='D'
                   19075 ='D' 19077 ='D' 19079 ='D' 19081 ='D' 19083 ='D' 19085 ='D' 19087 ='D'
                   19089 ='D' 19091 ='D' 19093 ='D' 19095 ='D' 19097 ='D' 19099 ='D' 19101 ='D'
                   19103 ='C' 19105 ='D' 19107 ='D' 19109 ='D' 19111 ='D' 19113 ='C' 19115 ='D'
                   19117 ='D' 19119 ='D' 19121 ='D' 19123 ='D' 19125 ='D' 19127 ='D' 19129 ='D'
                   19131 ='D' 19133 ='D' 19135 ='D' 19137 ='D' 19139 ='D' 19141 ='D' 19143 ='D'
                   19145 ='D' 19147 ='D' 19149 ='D' 19151 ='D' 19153 ='C' 19155 ='B' 19157 ='D'
                   19159 ='D' 19161 ='D' 19163 ='C' 19165 ='D' 19167 ='D' 19169 ='D' 19171 ='D'
                   19173 ='D' 19175 ='D' 19177 ='D' 19179 ='D' 19181 ='D' 19183 ='D' 19185 ='D'
                   19187 ='D' 19189 ='D' 19191 ='D' 19193 ='D' 19195 ='D' 19197 ='D' 20001 ='D'
                   20003 ='D' 20005 ='D' 20007 ='D' 20009 ='D' 20011 ='D' 20013 ='D' 20015 ='D'
                   20017 ='D' 20019 ='D' 20021 ='D' 20023 ='D' 20025 ='D' 20027 ='D' 20029 ='D'
                   20031 ='D' 20033 ='D' 20035 ='D' 20037 ='D' 20039 ='D' 20041 ='D' 20043 ='D'
                   20045 ='C' 20047 ='D' 20049 ='D' 20051 ='D' 20053 ='D' 20055 ='D' 20057 ='D'
                   20059 ='D' 20061 ='D' 20063 ='D' 20065 ='D' 20067 ='D' 20069 ='D' 20071 ='D'
                   20073 ='D' 20075 ='D' 20077 ='D' 20079 ='D' 20081 ='D' 20083 ='D' 20085 ='D'
                   20087 ='D' 20089 ='D' 20091 ='B' 20093 ='D' 20095 ='D' 20097 ='D' 20099 ='D'
                   20101 ='D' 20103 ='B' 20105 ='D' 20107 ='D' 20109 ='D' 20111 ='D' 20113 ='D'
                   20115 ='D' 20117 ='D' 20119 ='D' 20121 ='B' 20123 ='D' 20125 ='D' 20127 ='D'
                   20129 ='D' 20131 ='D' 20133 ='D' 20135 ='D' 20137 ='D' 20139 ='D' 20141 ='D'
                   20143 ='D' 20145 ='D' 20147 ='D' 20149 ='D' 20151 ='D' 20153 ='D' 20155 ='D'
                   20157 ='D' 20159 ='D' 20161 ='D' 20163 ='D' 20165 ='D' 20167 ='D' 20169 ='D'
                   20171 ='D' 20173 ='C' 20175 ='D' 20177 ='C' 20179 ='D' 20181 ='D' 20183 ='D'
                   20185 ='D' 20187 ='D' 20189 ='D' 20191 ='D' 20193 ='D' 20195 ='D' 20197 ='D'
                   20199 ='D' 20201 ='D' 20203 ='D' 20205 ='D' 20207 ='D' 20209 ='B' 21001 ='D'
                   21003 ='D' 21005 ='D' 21007 ='D' 21009 ='D' 21011 ='D' 21013 ='D' 21015 ='B'
                   21017 ='D' 21019 ='C' 21021 ='C' 21023 ='D' 21025 ='D' 21027 ='D' 21029 ='B'
                   21031 ='D' 21033 ='D' 21035 ='D' 21037 ='B' 21039 ='D' 21041 ='D' 21043 ='D'
                   21045 ='D' 21047 ='D' 21049 ='C' 21051 ='D' 21053 ='D' 21055 ='D' 21057 ='D'
                   21059 ='C' 21061 ='D' 21063 ='D' 21065 ='D' 21067 ='C' 21069 ='D' 21071 ='D'
                   21073 ='C' 21075 ='D' 21077 ='B' 21079 ='D' 21081 ='B' 21083 ='D' 21085 ='D'
                   21087 ='D' 21089 ='C' 21091 ='D' 21093 ='C' 21095 ='D' 21097 ='D' 21099 ='D'
                   21101 ='C' 21103 ='D' 21105 ='D' 21107 ='D' 21109 ='D' 21111 ='B' 21113 ='C'
                   21115 ='D' 21117 ='B' 21119 ='D' 21121 ='D' 21123 ='D' 21125 ='C' 21127 ='D'
                   21129 ='D' 21131 ='D' 21133 ='D' 21135 ='D' 21137 ='D' 21139 ='D' 21141 ='D'
                   21143 ='D' 21145 ='C' 21147 ='D' 21149 ='D' 21151 ='C' 21153 ='D' 21155 ='D'
                   21157 ='C' 21159 ='D' 21161 ='D' 21163 ='D' 21165 ='D' 21167 ='D' 21169 ='D'
                   21171 ='D' 21173 ='C' 21175 ='D' 21177 ='D' 21179 ='D' 21181 ='D' 21183 ='D'
                   21185 ='B' 21187 ='D' 21189 ='D' 21191 ='B' 21193 ='D' 21195 ='D' 21197 ='D'
                   21199 ='D' 21201 ='D' 21203 ='D' 21205 ='D' 21207 ='D' 21209 ='D' 21211 ='D'
                   21213 ='D' 21215 ='D' 21217 ='D' 21219 ='D' 21221 ='D' 21223 ='D' 21225 ='D'
                   21227 ='C' 21229 ='D' 21231 ='D' 21233 ='D' 21235 ='D' 21237 ='D' 21239 ='C'
                   22001 ='D' 22003 ='D' 22005 ='B' 22007 ='D' 22009 ='D' 22011 ='D' 22013 ='D'
                   22015 ='C' 22017 ='C' 22019 ='C' 22021 ='D' 22023 ='D' 22025 ='D' 22027 ='D'
                   22029 ='D' 22031 ='D' 22033 ='B' 22035 ='D' 22037 ='D' 22039 ='D' 22041 ='D'
                   22043 ='D' 22045 ='C' 22047 ='D' 22049 ='D' 22051 ='B' 22053 ='D' 22055 ='C'
                   22057 ='C' 22059 ='D' 22061 ='D' 22063 ='B' 22065 ='D' 22067 ='D' 22069 ='D'
                   22071 ='B' 22073 ='C' 22075 ='B' 22077 ='D' 22079 ='D' 22081 ='D' 22083 ='D'
                   22085 ='D' 22087 ='B' 22089 ='B' 22091 ='D' 22093 ='B' 22095 ='B' 22097 ='D'
                   22099 ='D' 22101 ='C' 22103 ='B' 22105 ='C' 22107 ='D' 22109 ='C' 22111 ='D'
                   22113 ='D' 22115 ='D' 22117 ='D' 22119 ='D' 22121 ='B' 22123 ='D' 22125 ='D'
                   22127 ='D' 23001 ='C' 23003 ='D' 23005 ='C' 23007 ='D' 23009 ='D' 23011 ='C'
                   23013 ='C' 23015 ='C' 23017 ='D' 23019 ='D' 23021 ='D' 23023 ='C' 23025 ='D'
                   23027 ='D' 23029 ='D' 23031 ='C' 24001 ='C' 24003 ='A' 24005 ='A' 24009 ='A'
                   24011 ='D' 24013 ='A' 24015 ='A' 24017 ='A' 24019 ='D' 24021 ='A' 24023 ='D'
                   24025 ='A' 24027 ='A' 24029 ='D' 24031 ='A' 24033 ='A' 24035 ='A' 24037 ='C'
                   24039 ='D' 24041 ='C' 24043 ='A' 24045 ='C' 24047 ='C' 24510 ='A' 25001 ='C'
                   25003 ='C' 25005 ='C' 25007 ='C' 25009 ='C' 25011 ='C' 25013 ='C' 25015 ='C'
                   25017 ='C' 25019 ='C' 25021 ='C' 25023 ='C' 25025 ='C' 25027 ='C' 26001 ='D'
                   26003 ='D' 26005 ='B' 26007 ='D' 26009 ='D' 26011 ='D' 26013 ='D' 26015 ='D'
                   26017 ='C' 26019 ='D' 26021 ='C' 26023 ='D' 26025 ='C' 26027 ='C' 26029 ='D'
                   26031 ='D' 26033 ='D' 26035 ='D' 26037 ='C' 26039 ='D' 26041 ='D' 26043 ='D'
                   26045 ='C' 26047 ='D' 26049 ='A' 26051 ='D' 26053 ='D' 26055 ='C' 26057 ='D'
                   26059 ='D' 26061 ='D' 26063 ='D' 26065 ='C' 26067 ='D' 26069 ='D' 26071 ='D'
                   26073 ='C' 26075 ='C' 26077 ='C' 26079 ='D' 26081 ='B' 26083 ='D' 26085 ='D'
                   26087 ='A' 26089 ='D' 26091 ='A' 26093 ='A' 26095 ='D' 26097 ='D' 26099 ='A'
                   26101 ='D' 26103 ='D' 26105 ='D' 26107 ='D' 26109 ='D' 26111 ='C' 26113 ='D'
                   26115 ='A' 26117 ='D' 26119 ='D' 26121 ='B' 26123 ='D' 26125 ='A' 26127 ='D'
                   26129 ='D' 26131 ='D' 26133 ='D' 26135 ='D' 26137 ='D' 26139 ='B' 26141 ='D'
                   26143 ='D' 26145 ='C' 26147 ='A' 26149 ='C' 26151 ='D' 26153 ='D' 26155 ='C'
                   26157 ='D' 26159 ='C' 26161 ='A' 26163 ='A' 26165 ='D' 27001 ='D' 27003 ='A'
                   27005 ='D' 27007 ='D' 27009 ='D' 27011 ='D' 27013 ='D' 27015 ='D' 27017 ='D'
                   27019 ='A' 27021 ='D' 27023 ='D' 27025 ='A' 27027 ='D' 27029 ='D' 27031 ='D'
                   27033 ='D' 27035 ='D' 27037 ='A' 27039 ='D' 27041 ='D' 27043 ='D' 27045 ='D'
                   27047 ='D' 27049 ='D' 27051 ='D' 27053 ='A' 27055 ='D' 27057 ='D' 27059 ='A'
                   27061 ='D' 27063 ='D' 27065 ='D' 27067 ='D' 27069 ='D' 27071 ='D' 27073 ='D'
                   27075 ='D' 27077 ='D' 27079 ='D' 27081 ='D' 27083 ='D' 27085 ='D' 27087 ='D'
                   27089 ='D' 27091 ='D' 27093 ='D' 27095 ='D' 27097 ='D' 27099 ='D' 27101 ='D'
                   27103 ='D' 27105 ='D' 27107 ='D' 27109 ='C' 27111 ='D' 27113 ='D' 27115 ='D'
                   27117 ='D' 27119 ='D' 27121 ='D' 27123 ='A' 27125 ='D' 27127 ='D' 27129 ='D'
                   27131 ='D' 27133 ='D' 27135 ='D' 27137 ='D' 27139 ='A' 27141 ='A' 27143 ='D'
                   27145 ='D' 27147 ='D' 27149 ='D' 27151 ='D' 27153 ='D' 27155 ='D' 27157 ='D'
                   27159 ='D' 27161 ='D' 27163 ='A' 27165 ='D' 27167 ='D' 27169 ='D' 27171 ='A'
                   27173 ='D' 28001 ='D' 28003 ='D' 28005 ='D' 28007 ='D' 28009 ='D' 28011 ='D'
                   28013 ='D' 28015 ='D' 28017 ='D' 28019 ='D' 28021 ='D' 28023 ='D' 28025 ='D'
                   28027 ='D' 28029 ='D' 28031 ='D' 28033 ='B' 28035 ='C' 28037 ='D' 28039 ='D'
                   28041 ='D' 28043 ='D' 28045 ='C' 28047 ='C' 28049 ='C' 28051 ='D' 28053 ='D'
                   28055 ='D' 28057 ='D' 28059 ='C' 28061 ='D' 28063 ='D' 28065 ='D' 28067 ='D'
                   28069 ='D' 28071 ='D' 28073 ='D' 28075 ='D' 28077 ='D' 28079 ='D' 28081 ='C'
                   28083 ='D' 28085 ='D' 28087 ='C' 28089 ='D' 28091 ='D' 28093 ='D' 28095 ='D'
                   28097 ='D' 28099 ='D' 28101 ='D' 28103 ='D' 28105 ='D' 28107 ='D' 28109 ='D'
                   28111 ='D' 28113 ='D' 28115 ='D' 28117 ='D' 28119 ='D' 28121 ='C' 28123 ='D'
                   28125 ='D' 28127 ='D' 28129 ='D' 28131 ='D' 28133 ='D' 28135 ='D' 28137 ='D'
                   28139 ='D' 28141 ='D' 28143 ='D' 28145 ='D' 28147 ='D' 28149 ='D' 28151 ='D'
                   28153 ='D' 28155 ='D' 28157 ='D' 28159 ='D' 28161 ='D' 28163 ='D' 29001 ='D'
                   29003 ='D' 29005 ='D' 29007 ='D' 29009 ='D' 29011 ='D' 29013 ='D' 29015 ='D'
                   29017 ='D' 29019 ='C' 29021 ='C' 29023 ='D' 29025 ='D' 29027 ='D' 29029 ='C'
                   29031 ='C' 29033 ='D' 29035 ='D' 29037 ='B' 29039 ='D' 29041 ='D' 29043 ='D'
                   29045 ='D' 29047 ='B' 29049 ='B' 29051 ='C' 29053 ='D' 29055 ='A' 29057 ='D'
                   29059 ='D' 29061 ='D' 29063 ='D' 29065 ='D' 29067 ='D' 29069 ='D' 29071 ='A'
                   29073 ='D' 29075 ='D' 29077 ='C' 29079 ='D' 29081 ='D' 29083 ='D' 29085 ='D'
                   29087 ='D' 29089 ='D' 29091 ='D' 29093 ='D' 29095 ='B' 29097 ='C' 29099 ='A'
                   29101 ='D' 29103 ='D' 29105 ='D' 29107 ='B' 29109 ='D' 29111 ='D' 29113 ='A'
                   29115 ='D' 29117 ='D' 29119 ='D' 29121 ='D' 29123 ='D' 29125 ='D' 29127 ='D'
                   29129 ='D' 29131 ='D' 29133 ='D' 29135 ='D' 29137 ='D' 29139 ='D' 29141 ='D'
                   29143 ='D' 29145 ='D' 29147 ='D' 29149 ='D' 29151 ='D' 29153 ='D' 29155 ='D'
                   29157 ='D' 29159 ='D' 29161 ='D' 29163 ='D' 29165 ='B' 29167 ='D' 29169 ='D'
                   29171 ='D' 29173 ='D' 29175 ='D' 29177 ='B' 29179 ='D' 29181 ='D' 29183 ='A'
                   29185 ='D' 29186 ='D' 29187 ='C' 29189 ='A' 29195 ='D' 29197 ='D' 29199 ='D'
                   29201 ='D' 29203 ='D' 29205 ='D' 29207 ='D' 29209 ='D' 29211 ='D' 29213 ='D'
                   29215 ='D' 29217 ='D' 29219 ='A' 29221 ='D' 29223 ='D' 29225 ='D' 29227 ='D'
                   29229 ='D' 29510 ='A' 30001 ='D' 30003 ='D' 30005 ='D' 30007 ='D' 30009 ='D'
                   30011 ='D' 30013 ='D' 30015 ='D' 30017 ='D' 30019 ='D' 30021 ='D' 30023 ='D'
                   30025 ='D' 30027 ='D' 30029 ='D' 30031 ='D' 30033 ='D' 30035 ='D' 30037 ='D'
                   30039 ='D' 30041 ='D' 30043 ='D' 30045 ='D' 30047 ='D' 30049 ='D' 30051 ='D'
                   30053 ='D' 30055 ='D' 30057 ='D' 30059 ='D' 30061 ='D' 30063 ='D' 30065 ='D'
                   30067 ='D' 30069 ='D' 30071 ='D' 30073 ='D' 30075 ='D' 30077 ='D' 30079 ='D'
                   30081 ='D' 30083 ='D' 30085 ='D' 30087 ='D' 30089 ='D' 30091 ='D' 30093 ='D'
                   30095 ='D' 30097 ='D' 30099 ='D' 30101 ='D' 30103 ='D' 30105 ='D' 30107 ='D'
                   30109 ='D' 30111 ='D' 31001 ='D' 31003 ='D' 31005 ='D' 31007 ='D' 31009 ='D'
                   31011 ='D' 31013 ='D' 31015 ='D' 31017 ='D' 31019 ='D' 31021 ='D' 31023 ='D'
                   31025 ='B' 31027 ='D' 31029 ='D' 31031 ='D' 31033 ='D' 31035 ='D' 31037 ='D'
                   31039 ='D' 31041 ='D' 31043 ='D' 31045 ='D' 31047 ='D' 31049 ='D' 31051 ='D'
                   31053 ='D' 31055 ='B' 31057 ='D' 31059 ='D' 31061 ='D' 31063 ='D' 31065 ='D'
                   31067 ='D' 31069 ='D' 31071 ='D' 31073 ='D' 31075 ='D' 31077 ='D' 31079 ='D'
                   31081 ='D' 31083 ='D' 31085 ='D' 31087 ='D' 31089 ='D' 31091 ='D' 31093 ='D'
                   31095 ='D' 31097 ='D' 31099 ='D' 31101 ='D' 31103 ='D' 31105 ='D' 31107 ='D'
                   31109 ='C' 31111 ='D' 31113 ='D' 31115 ='D' 31117 ='D' 31119 ='D' 31121 ='D'
                   31123 ='D' 31125 ='D' 31127 ='D' 31129 ='D' 31131 ='D' 31133 ='D' 31135 ='D'
                   31137 ='D' 31139 ='D' 31141 ='D' 31143 ='D' 31145 ='D' 31147 ='D' 31149 ='D'
                   31151 ='D' 31153 ='B' 31155 ='D' 31157 ='D' 31159 ='D' 31161 ='D' 31163 ='D'
                   31165 ='D' 31167 ='D' 31169 ='D' 31171 ='D' 31173 ='D' 31175 ='D' 31177 ='B'
                   31179 ='D' 31181 ='D' 31183 ='D' 31185 ='D' 32001 ='D' 32003 ='B' 32005 ='D'
                   32007 ='D' 32009 ='D' 32011 ='D' 32013 ='D' 32015 ='D' 32017 ='D' 32019 ='D'
                   32021 ='D' 32023 ='B' 32027 ='D' 32029 ='D' 32031 ='C' 32033 ='D' 32510 ='C'
                   33001 ='C' 33003 ='D' 33005 ='C' 33007 ='D' 33009 ='D' 33011 ='C' 33013 ='C'
                   33015 ='C' 33017 ='C' 33019 ='D' 34001 ='A' 34003 ='A' 34005 ='A' 34007 ='A'
                   34009 ='A' 34011 ='A' 34013 ='A' 34015 ='A' 34017 ='A' 34019 ='A' 34021 ='A'
                   34023 ='A' 34025 ='A' 34027 ='A' 34029 ='A' 34031 ='A' 34033 ='A' 34035 ='A'
                   34037 ='A' 34039 ='A' 34041 ='A' 35001 ='B' 35003 ='D' 35005 ='D' 35006 ='D'
                   35007 ='D' 35009 ='D' 35011 ='D' 35013 ='D' 35015 ='D' 35017 ='D' 35019 ='D'
                   35021 ='D' 35023 ='D' 35025 ='D' 35027 ='D' 35028 ='D' 35029 ='D' 35031 ='D'
                   35033 ='D' 35035 ='D' 35037 ='D' 35039 ='D' 35041 ='D' 35043 ='B' 35045 ='D'
                   35047 ='D' 35049 ='D' 35051 ='D' 35053 ='D' 35055 ='D' 35057 ='D' 35059 ='D'
                   35061 ='B' 36001 ='B' 36003 ='D' 36005 ='A' 36007 ='C' 36009 ='D' 36011 ='B'
                   36013 ='C' 36015 ='C' 36017 ='D' 36019 ='D' 36021 ='C' 36023 ='D' 36025 ='D'
                   36027 ='A' 36029 ='B' 36031 ='D' 36033 ='D' 36035 ='C' 36037 ='B' 36039 ='D'
                   36041 ='D' 36043 ='D' 36045 ='D' 36047 ='A' 36049 ='D' 36051 ='B' 36053 ='B'
                   36055 ='B' 36057 ='B' 36059 ='A' 36061 ='A' 36063 ='B' 36065 ='C' 36067 ='B'
                   36069 ='B' 36071 ='A' 36073 ='B' 36075 ='B' 36077 ='D' 36079 ='A' 36081 ='A'
                   36083 ='B' 36085 ='A' 36087 ='A' 36089 ='D' 36091 ='B' 36093 ='B' 36095 ='B'
                   36097 ='D' 36099 ='C' 36101 ='D' 36103 ='A' 36105 ='D' 36107 ='D' 36109 ='C'
                   36111 ='C' 36113 ='D' 36115 ='D' 36117 ='B' 36119 ='A' 36121 ='D' 36123 ='D'
                   37001 ='B' 37003 ='C' 37005 ='D' 37007 ='D' 37009 ='D' 37011 ='C' 37013 ='D'
                   37015 ='D' 37017 ='D' 37019 ='C' 37021 ='C' 37023 ='C' 37025 ='B' 37027 ='C'
                   37029 ='D' 37031 ='C' 37033 ='D' 37035 ='C' 37037 ='B' 37039 ='D' 37041 ='D'
                   37043 ='D' 37045 ='C' 37047 ='D' 37049 ='C' 37051 ='C' 37053 ='B' 37055 ='C'
                   37057 ='B' 37059 ='B' 37061 ='D' 37063 ='B' 37065 ='C' 37067 ='B' 37069 ='B'
                   37071 ='B' 37073 ='D' 37075 ='D' 37077 ='D' 37079 ='D' 37081 ='B' 37083 ='D'
                   37085 ='C' 37087 ='C' 37089 ='C' 37091 ='D' 37093 ='C' 37095 ='D' 37097 ='C'
                   37099 ='D' 37101 ='B' 37103 ='D' 37105 ='C' 37107 ='C' 37109 ='B' 37111 ='D'
                   37113 ='D' 37115 ='D' 37117 ='D' 37119 ='B' 37121 ='D' 37123 ='D' 37125 ='C'
                   37127 ='C' 37129 ='C' 37131 ='D' 37133 ='C' 37135 ='B' 37137 ='D' 37139 ='C'
                   37141 ='D' 37143 ='D' 37145 ='D' 37147 ='C' 37149 ='D' 37151 ='B' 37153 ='D'
                   37155 ='C' 37157 ='C' 37159 ='B' 37161 ='C' 37163 ='D' 37165 ='C' 37167 ='C'
                   37169 ='B' 37171 ='C' 37173 ='D' 37175 ='D' 37177 ='D' 37179 ='B' 37181 ='C'
                   37183 ='B' 37185 ='D' 37187 ='D' 37189 ='C' 37191 ='C' 37193 ='D' 37195 ='C'
                   37197 ='B' 37199 ='D' 38001 ='D' 38003 ='D' 38005 ='D' 38007 ='D' 38009 ='D'
                   38011 ='D' 38013 ='D' 38015 ='D' 38017 ='D' 38019 ='D' 38021 ='D' 38023 ='D'
                   38025 ='D' 38027 ='D' 38029 ='D' 38031 ='D' 38033 ='D' 38035 ='D' 38037 ='D'
                   38039 ='D' 38041 ='D' 38043 ='D' 38045 ='D' 38047 ='D' 38049 ='D' 38051 ='D'
                   38053 ='D' 38055 ='D' 38057 ='D' 38059 ='D' 38061 ='D' 38063 ='D' 38065 ='D'
                   38067 ='D' 38069 ='D' 38071 ='D' 38073 ='D' 38075 ='D' 38077 ='D' 38079 ='D'
                   38081 ='D' 38083 ='D' 38085 ='D' 38087 ='D' 38089 ='D' 38091 ='D' 38093 ='D'
                   38095 ='D' 38097 ='D' 38099 ='D' 38101 ='D' 38103 ='D' 38105 ='D' 39001 ='D'
                   39003 ='C' 39005 ='C' 39007 ='A' 39009 ='D' 39011 ='C' 39013 ='C' 39015 ='B'
                   39017 ='B' 39019 ='D' 39021 ='D' 39023 ='B' 39025 ='B' 39027 ='D' 39029 ='B'
                   39031 ='D' 39033 ='C' 39035 ='A' 39037 ='D' 39039 ='D' 39041 ='B' 39043 ='C'
                   39045 ='B' 39047 ='D' 39049 ='B' 39051 ='B' 39053 ='D' 39055 ='A' 39057 ='B'
                   39059 ='D' 39061 ='B' 39063 ='C' 39065 ='D' 39067 ='D' 39069 ='D' 39071 ='D'
                   39073 ='D' 39075 ='D' 39077 ='D' 39079 ='D' 39081 ='C' 39083 ='D' 39085 ='A'
                   39087 ='C' 39089 ='B' 39091 ='D' 39093 ='A' 39095 ='B' 39097 ='B' 39099 ='B'
                   39101 ='C' 39103 ='A' 39105 ='D' 39107 ='D' 39109 ='B' 39111 ='D' 39113 ='B'
                   39115 ='D' 39117 ='D' 39119 ='C' 39121 ='D' 39123 ='C' 39125 ='D' 39127 ='D'
                   39129 ='B' 39131 ='D' 39133 ='A' 39135 ='D' 39137 ='D' 39139 ='C' 39141 ='D'
                   39143 ='C' 39145 ='C' 39147 ='D' 39149 ='C' 39151 ='C' 39153 ='A' 39155 ='B'
                   39157 ='C' 39159 ='D' 39161 ='D' 39163 ='D' 39165 ='B' 39167 ='D' 39169 ='C'
                   39171 ='D' 39173 ='B' 39175 ='D' 40001 ='D' 40003 ='D' 40005 ='D' 40007 ='D'
                   40009 ='D' 40011 ='D' 40013 ='D' 40015 ='D' 40017 ='B' 40019 ='D' 40021 ='D'
                   40023 ='D' 40025 ='D' 40027 ='B' 40029 ='D' 40031 ='D' 40033 ='D' 40035 ='D'
                   40037 ='B' 40039 ='D' 40041 ='D' 40043 ='D' 40045 ='D' 40047 ='D' 40049 ='D'
                   40051 ='D' 40053 ='D' 40055 ='D' 40057 ='D' 40059 ='D' 40061 ='D' 40063 ='D'
                   40065 ='D' 40067 ='D' 40069 ='D' 40071 ='D' 40073 ='D' 40075 ='D' 40077 ='D'
                   40079 ='D' 40081 ='D' 40083 ='B' 40085 ='D' 40087 ='B' 40089 ='D' 40091 ='D'
                   40093 ='D' 40095 ='D' 40097 ='D' 40099 ='D' 40101 ='D' 40103 ='D' 40105 ='D'
                   40107 ='D' 40109 ='B' 40111 ='D' 40113 ='B' 40115 ='D' 40117 ='D' 40119 ='D'
                   40121 ='D' 40123 ='D' 40125 ='B' 40127 ='D' 40129 ='D' 40131 ='B' 40133 ='D'
                   40135 ='D' 40137 ='D' 40139 ='D' 40141 ='D' 40143 ='B' 40145 ='B' 40147 ='D'
                   40149 ='D' 40151 ='D' 40153 ='D' 41001 ='D' 41003 ='D' 41005 ='B' 41007 ='D'
                   41009 ='B' 41011 ='D' 41013 ='D' 41015 ='D' 41017 ='C' 41019 ='D' 41021 ='D'
                   41023 ='D' 41025 ='D' 41027 ='D' 41029 ='D' 41031 ='D' 41033 ='D' 41035 ='D'
                   41037 ='D' 41039 ='C' 41041 ='D' 41043 ='D' 41045 ='D' 41047 ='B' 41049 ='D'
                   41051 ='B' 41053 ='B' 41055 ='D' 41057 ='D' 41059 ='D' 41061 ='D' 41063 ='D'
                   41065 ='D' 41067 ='B' 41069 ='D' 41071 ='B' 42001 ='C' 42003 ='A' 42005 ='C'
                   42007 ='A' 42009 ='D' 42011 ='C' 42013 ='C' 42015 ='D' 42017 ='A' 42019 ='A'
                   42021 ='C' 42023 ='D' 42025 ='B' 42027 ='C' 42029 ='A' 42031 ='D' 42033 ='D'
                   42035 ='D' 42037 ='B' 42039 ='D' 42041 ='B' 42043 ='B' 42045 ='A' 42047 ='D'
                   42049 ='C' 42051 ='A' 42053 ='D' 42055 ='C' 42057 ='D' 42059 ='D' 42061 ='D'
                   42063 ='C' 42065 ='D' 42067 ='D' 42069 ='B' 42071 ='C' 42073 ='C' 42075 ='B'
                   42077 ='B' 42079 ='B' 42081 ='C' 42083 ='D' 42085 ='C' 42087 ='C' 42089 ='C'
                   42091 ='A' 42093 ='C' 42095 ='B' 42097 ='C' 42099 ='B' 42101 ='A' 42103 ='A'
                   42105 ='D' 42107 ='C' 42109 ='C' 42111 ='D' 42113 ='D' 42115 ='D' 42117 ='D'
                   42119 ='C' 42121 ='D' 42123 ='D' 42125 ='A' 42127 ='D' 42129 ='A' 42131 ='B'
                   42133 ='C' 44001 ='C' 44003 ='C' 44005 ='C' 44007 ='C' 44009 ='C' 45001 ='D'
                   45003 ='C' 45005 ='D' 45007 ='B' 45009 ='D' 45011 ='D' 45013 ='C' 45015 ='B'
                   45017 ='D' 45019 ='B' 45021 ='B' 45023 ='D' 45025 ='D' 45027 ='D' 45029 ='D'
                   45031 ='C' 45033 ='D' 45035 ='B' 45037 ='D' 45039 ='D' 45041 ='C' 45043 ='D'
                   45045 ='B' 45047 ='C' 45049 ='D' 45051 ='C' 45053 ='D' 45055 ='D' 45057 ='D'
                   45059 ='C' 45061 ='D' 45063 ='B' 45065 ='D' 45067 ='D' 45069 ='D' 45071 ='D'
                   45073 ='C' 45075 ='D' 45077 ='B' 45079 ='B' 45081 ='D' 45083 ='B' 45085 ='C'
                   45087 ='D' 45089 ='D' 45091 ='B' 46003 ='D' 46005 ='D' 46007 ='D' 46009 ='D'
                   46011 ='D' 46013 ='D' 46015 ='D' 46017 ='D' 46019 ='D' 46021 ='D' 46023 ='D'
                   46025 ='D' 46027 ='D' 46029 ='D' 46031 ='D' 46033 ='D' 46035 ='D' 46037 ='D'
                   46039 ='D' 46041 ='D' 46043 ='D' 46045 ='D' 46047 ='D' 46049 ='D' 46051 ='D'
                   46053 ='D' 46055 ='D' 46057 ='D' 46059 ='D' 46061 ='D' 46063 ='D' 46065 ='D'
                   46067 ='D' 46069 ='D' 46071 ='D' 46073 ='D' 46075 ='D' 46077 ='D' 46079 ='D'
                   46081 ='D' 46083 ='D' 46085 ='D' 46087 ='D' 46089 ='D' 46091 ='D' 46093 ='D'
                   46095 ='D' 46097 ='D' 46099 ='C' 46101 ='D' 46103 ='D' 46105 ='D' 46107 ='D'
                   46109 ='D' 46111 ='D' 46113 ='D' 46115 ='D' 46117 ='D' 46119 ='D' 46121 ='D'
2                                        The WPS System      11:42 Wednesday, July 29, 2015     

                   46123 ='D' 46125 ='D' 46127 ='D' 46129 ='D' 46135 ='D' 46137 ='D' 47001 ='B'
                   47003 ='D' 47005 ='D' 47007 ='D' 47009 ='B' 47011 ='C' 47013 ='D' 47015 ='D'
                   47017 ='D' 47019 ='C' 47021 ='B' 47023 ='D' 47025 ='D' 47027 ='D' 47029 ='D'
                   47031 ='C' 47033 ='D' 47035 ='D' 47037 ='B' 47039 ='D' 47041 ='D' 47043 ='B'
                   47045 ='D' 47047 ='B' 47049 ='D' 47051 ='D' 47053 ='D' 47055 ='D' 47057 ='D'
                   47059 ='C' 47061 ='D' 47063 ='C' 47065 ='C' 47067 ='D' 47069 ='D' 47071 ='D'
                   47073 ='C' 47075 ='D' 47077 ='D' 47079 ='D' 47081 ='D' 47083 ='D' 47085 ='D'
                   47087 ='D' 47089 ='C' 47091 ='D' 47093 ='B' 47095 ='D' 47097 ='D' 47099 ='D'
                   47101 ='D' 47103 ='D' 47105 ='B' 47107 ='C' 47109 ='D' 47111 ='D' 47113 ='C'
                   47115 ='D' 47117 ='D' 47119 ='D' 47121 ='D' 47123 ='D' 47125 ='C' 47127 ='D'
                   47129 ='D' 47131 ='D' 47133 ='D' 47135 ='D' 47137 ='D' 47139 ='D' 47141 ='C'
                   47143 ='D' 47145 ='C' 47147 ='B' 47149 ='B' 47151 ='D' 47153 ='D' 47155 ='B'
                   47157 ='B' 47159 ='D' 47161 ='D' 47163 ='C' 47165 ='B' 47167 ='B' 47169 ='D'
                   47171 ='D' 47173 ='B' 47175 ='D' 47177 ='D' 47179 ='C' 47181 ='D' 47183 ='D'
                   47185 ='D' 47187 ='B' 47189 ='B' 48001 ='D' 48003 ='D' 48005 ='D' 48007 ='C'
                   48009 ='D' 48011 ='D' 48013 ='D' 48015 ='D' 48017 ='D' 48019 ='D' 48021 ='B'
                   48023 ='D' 48025 ='D' 48027 ='C' 48029 ='B' 48031 ='D' 48033 ='D' 48035 ='D'
                   48037 ='D' 48039 ='A' 48041 ='C' 48043 ='D' 48045 ='D' 48047 ='D' 48049 ='D'
                   48051 ='D' 48053 ='D' 48055 ='B' 48057 ='D' 48059 ='D' 48061 ='C' 48063 ='D'
                   48065 ='D' 48067 ='D' 48069 ='D' 48071 ='A' 48073 ='D' 48075 ='D' 48077 ='D'
                   48079 ='D' 48081 ='D' 48083 ='D' 48085 ='A' 48087 ='D' 48089 ='D' 48091 ='B'
                   48093 ='D' 48095 ='D' 48097 ='D' 48099 ='D' 48101 ='D' 48103 ='D' 48105 ='D'
                   48107 ='D' 48109 ='D' 48111 ='D' 48113 ='A' 48115 ='D' 48117 ='D' 48119 ='D'
                   48121 ='A' 48123 ='D' 48125 ='D' 48127 ='D' 48129 ='D' 48131 ='D' 48133 ='D'
                   48135 ='C' 48137 ='D' 48139 ='A' 48141 ='B' 48143 ='D' 48145 ='D' 48147 ='D'
                   48149 ='D' 48151 ='D' 48153 ='D' 48155 ='D' 48157 ='A' 48159 ='D' 48161 ='D'
                   48163 ='D' 48165 ='D' 48167 ='A' 48169 ='D' 48171 ='D' 48173 ='D' 48175 ='D'
                   48177 ='D' 48179 ='D' 48181 ='C' 48183 ='C' 48185 ='D' 48187 ='B' 48189 ='D'
                   48191 ='D' 48193 ='D' 48195 ='D' 48197 ='D' 48199 ='D' 48201 ='A' 48203 ='D'
                   48205 ='D' 48207 ='D' 48209 ='B' 48211 ='D' 48213 ='A' 48215 ='C' 48217 ='D'
                   48219 ='D' 48221 ='A' 48223 ='D' 48225 ='D' 48227 ='D' 48229 ='D' 48231 ='A'
                   48233 ='D' 48235 ='D' 48237 ='D' 48239 ='D' 48241 ='D' 48243 ='D' 48245 ='C'
                   48247 ='D' 48249 ='D' 48251 ='A' 48253 ='D' 48255 ='D' 48257 ='A' 48259 ='D'
                   48261 ='D' 48263 ='D' 48265 ='D' 48267 ='D' 48269 ='D' 48271 ='D' 48273 ='C'
                   48275 ='D' 48277 ='D' 48279 ='D' 48281 ='D' 48283 ='D' 48285 ='D' 48287 ='D'
                   48289 ='D' 48291 ='A' 48293 ='D' 48295 ='D' 48297 ='D' 48299 ='D' 48301 ='D'
                   48303 ='C' 48305 ='D' 48307 ='D' 48309 ='C' 48311 ='D' 48313 ='D' 48315 ='D'
                   48317 ='D' 48319 ='D' 48321 ='D' 48323 ='C' 48325 ='D' 48327 ='D' 48329 ='C'
                   48331 ='D' 48333 ='D' 48335 ='D' 48337 ='D' 48339 ='A' 48341 ='D' 48343 ='D'
                   48345 ='D' 48347 ='D' 48349 ='D' 48351 ='D' 48353 ='D' 48355 ='C' 48357 ='D'
                   48359 ='D' 48361 ='C' 48363 ='D' 48365 ='D' 48367 ='A' 48369 ='D' 48371 ='D'
                   48373 ='D' 48375 ='C' 48377 ='D' 48379 ='D' 48381 ='C' 48383 ='D' 48385 ='D'
                   48387 ='D' 48389 ='D' 48391 ='D' 48393 ='D' 48395 ='D' 48397 ='A' 48399 ='D'
                   48401 ='D' 48403 ='D' 48405 ='D' 48407 ='D' 48409 ='D' 48411 ='D' 48413 ='D'
                   48415 ='D' 48417 ='D' 48419 ='D' 48421 ='D' 48423 ='C' 48425 ='D' 48427 ='D'
                   48429 ='D' 48431 ='D' 48433 ='D' 48435 ='D' 48437 ='D' 48439 ='A' 48441 ='D'
                   48443 ='D' 48445 ='D' 48447 ='D' 48449 ='D' 48451 ='D' 48453 ='B' 48455 ='D'
                   48457 ='D' 48459 ='D' 48461 ='D' 48463 ='D' 48465 ='D' 48467 ='D' 48469 ='D'
                   48471 ='D' 48473 ='A' 48475 ='D' 48477 ='D' 48479 ='C' 48481 ='D' 48483 ='D'
                   48485 ='C' 48487 ='D' 48489 ='D' 48491 ='B' 48493 ='B' 48495 ='D' 48497 ='D'
                   48499 ='D' 48501 ='D' 48503 ='D' 48505 ='D' 48507 ='D' 49001 ='D' 49003 ='D'
                   49005 ='D' 49007 ='D' 49009 ='D' 49011 ='B' 49013 ='D' 49015 ='D' 49017 ='D'
                   49019 ='D' 49021 ='D' 49023 ='D' 49025 ='D' 49027 ='D' 49029 ='D' 49031 ='D'
                   49033 ='D' 49035 ='B' 49037 ='D' 49039 ='D' 49041 ='D' 49043 ='D' 49045 ='D'
                   49047 ='D' 49049 ='C' 49051 ='D' 49053 ='D' 49055 ='D' 49057 ='B' 50001 ='D'
                   50003 ='D' 50005 ='D' 50007 ='C' 50009 ='D' 50011 ='D' 50013 ='C' 50015 ='D'
                   50017 ='D' 50019 ='D' 50021 ='D' 50023 ='D' 50025 ='D' 50027 ='D' 51001 ='D'
                   51003 ='C' 51005 ='C' 51007 ='D' 51009 ='D' 51011 ='D' 51013 ='A' 51015 ='D'
                   51017 ='D' 51019 ='D' 51021 ='D' 51023 ='D' 51025 ='D' 51027 ='D' 51029 ='D'
                   51031 ='D' 51033 ='D' 51035 ='D' 51036 ='B' 51037 ='D' 51041 ='B' 51043 ='A'
                   51045 ='D' 51047 ='A' 51049 ='D' 51051 ='D' 51053 ='B' 51057 ='D' 51059 ='A'
                   51061 ='A' 51063 ='D' 51065 ='D' 51067 ='D' 51069 ='C' 51071 ='D' 51073 ='B'
                   51075 ='B' 51077 ='D' 51079 ='D' 51081 ='D' 51083 ='D' 51085 ='B' 51087 ='B'
                   51089 ='C' 51091 ='D' 51093 ='B' 51095 ='B' 51097 ='D' 51099 ='A' 51101 ='D'
                   51103 ='C' 51105 ='D' 51107 ='A' 51109 ='D' 51111 ='D' 51113 ='D' 51115 ='B'
                   51117 ='D' 51119 ='D' 51121 ='C' 51125 ='D' 51127 ='B' 51131 ='D' 51133 ='D'
                   51135 ='D' 51137 ='D' 51139 ='D' 51141 ='D' 51143 ='D' 51145 ='B' 51147 ='D'
                   51149 ='B' 51153 ='A' 51155 ='C' 51157 ='D' 51159 ='D' 51161 ='C' 51163 ='D'
                   51165 ='D' 51167 ='D' 51169 ='D' 51171 ='D' 51173 ='D' 51175 ='D' 51177 ='A'
                   51179 ='A' 51181 ='D' 51183 ='D' 51185 ='D' 51187 ='A' 51191 ='D' 51193 ='D'
                   51195 ='D' 51197 ='D' 51199 ='B' 51510 ='A' 51520 ='C' 51530 ='C' 51540 ='C'
                   51550 ='B' 51570 ='B' 51580 ='D' 51590 ='C' 51600 ='A' 51610 ='A' 51620 ='C'
                   51630 ='A' 51640 ='C' 51650 ='B' 51660 ='C' 51670 ='B' 51678 ='D' 51680 ='C'
                   51683 ='A' 51685 ='A' 51690 ='C' 51700 ='B' 51710 ='B' 51720 ='C' 51730 ='B'
                   51735 ='B' 51740 ='B' 51750 ='C' 51760 ='B' 51770 ='C' 51775 ='C' 51790 ='C'
                   51800 ='B' 51810 ='B' 51820 ='C' 51830 ='B' 51840 ='C' 53001 ='D' 53003 ='D'
                   53005 ='C' 53007 ='D' 53009 ='D' 53011 ='B' 53013 ='D' 53015 ='C' 53017 ='D'
                   53019 ='D' 53021 ='D' 53023 ='D' 53025 ='D' 53027 ='D' 53029 ='A' 53031 ='D'
                   53033 ='A' 53035 ='A' 53037 ='D' 53039 ='D' 53041 ='D' 53043 ='D' 53045 ='D'
                   53047 ='D' 53049 ='D' 53051 ='D' 53053 ='A' 53055 ='C' 53057 ='D' 53059 ='D'
                   53061 ='A' 53063 ='C' 53065 ='D' 53067 ='A' 53069 ='D' 53071 ='D' 53073 ='C'
                   53075 ='D' 53077 ='D' 54001 ='D' 54003 ='A' 54005 ='D' 54007 ='D' 54009 ='C'
                   54011 ='C' 54013 ='D' 54015 ='D' 54017 ='D' 54019 ='D' 54021 ='D' 54023 ='D'
                   54025 ='D' 54027 ='D' 54029 ='C' 54031 ='D' 54033 ='C' 54035 ='D' 54037 ='A'
                   54039 ='C' 54041 ='D' 54043 ='D' 54045 ='D' 54047 ='D' 54049 ='C' 54051 ='C'
                   54053 ='D' 54055 ='C' 54057 ='D' 54059 ='D' 54061 ='C' 54063 ='D' 54065 ='D'
                   54067 ='D' 54069 ='C' 54071 ='D' 54073 ='D' 54075 ='D' 54077 ='D' 54079 ='C'
                   54081 ='C' 54083 ='D' 54085 ='D' 54087 ='D' 54089 ='D' 54091 ='D' 54093 ='D'
                   54095 ='D' 54097 ='D' 54099 ='C' 54101 ='D' 54103 ='D' 54105 ='D' 54107 ='C'
                   54109 ='D' 55001 ='D' 55003 ='D' 55005 ='D' 55007 ='D' 55009 ='C' 55011 ='D'
                   55013 ='D' 55015 ='D' 55017 ='D' 55019 ='D' 55021 ='D' 55023 ='D' 55025 ='C'
                   55027 ='D' 55029 ='D' 55031 ='D' 55033 ='D' 55035 ='C' 55037 ='D' 55039 ='C'
                   55041 ='D' 55043 ='D' 55045 ='D' 55047 ='D' 55049 ='D' 55051 ='D' 55053 ='D'
                   55055 ='C' 55057 ='D' 55059 ='A' 55061 ='D' 55063 ='C' 55065 ='D' 55067 ='D'
                   55069 ='D' 55071 ='C' 55073 ='D' 55075 ='D' 55077 ='D' 55078 ='D' 55079 ='B'
                   55081 ='D' 55083 ='D' 55085 ='D' 55087 ='C' 55089 ='B' 55091 ='D' 55093 ='A'
                   55095 ='D' 55097 ='D' 55099 ='D' 55101 ='B' 55103 ='D' 55105 ='C' 55107 ='D'
                   55109 ='A' 55111 ='D' 55113 ='D' 55115 ='D' 55117 ='C' 55119 ='D' 55121 ='D'
                   55123 ='D' 55125 ='D' 55127 ='C' 55129 ='D' 55131 ='B' 55133 ='B' 55135 ='D'
                   55137 ='D' 55139 ='C' 55141 ='D' 56001 ='D' 56003 ='D' 56005 ='D' 56007 ='D'
                   56009 ='D' 56011 ='D' 56013 ='D' 56015 ='D' 56017 ='D' 56019 ='D' 56021 ='D'
                   56023 ='D' 56025 ='D' 56027 ='D' 56029 ='D' 56031 ='D' 56033 ='D' 56035 ='D'
                   56037 ='D' 56039 ='D' 56041 ='D' 56043 ='D' 56045 ='D' 60050 ='D' 64003 ='D'
                   66010 ='D' 68020 ='D' 69010 ='D' 70030 ='D' 78010 ='D' 78020 ='D' 78030 ='D'
                   other='Z';
NOTE: Format cdif is already in the catalog and will be overwritten
MPRINT(COVERAGE):  ***********************************;
MPRINT(COVERAGE):  * THE PROC FORMAT FOR CACdirect 3.0;
MPRINT(COVERAGE):  ***********************************;
MPRINT(COVERAGE):  ***********************************;
MPRINT(COVERAGE):  * STATUS;
MPRINT(COVERAGE):  * ETECH ADDED MWM 4/13/2012;
MPRINT(COVERAGE):  * MACTCHMAKER QC VARAIBLES ADDED JDS 4/23/2012
                   ***********************************;
NOTE: Procedure format step took :
      real time : 0.027
      cpu time  : 0.027


MPRINT(COVERAGE):  proc format;
MPRINT(COVERAGE):  value cac_le_a  .='Unknown - New to File'  0='No'  1='Yes' ;
NOTE: Format cac_le_a is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_le_b  .='Unknown - New to File'  0='No'  1='Decrease'  2='Increase'
                   ;
NOTE: Format cac_le_b is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $cac_le_c  ''='Unknown - New to File'  'newer home' = 'Newer Home' 
                   'older home' = 'Older Home' ;
NOTE: Format $cac_le_c is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value match  0='No'  1='Yes';
NOTE: Format match is already in the catalog and will be overwritten
MPRINT(COVERAGE):  ;
MPRINT(COVERAGE):  value geo_match  1='Match @ Zip+2'  2='Match @ Zip'  3='Match @ State' ;
NOTE: Format geo_match is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $cac_cdi  'A' = 'Top 20 MSAs, approx. 35% of US households'  'B' =
                   'Next 55 MSAs, approx. 21% of US households'  'C' = 'Counties with density
                   greater than 44 hh/mile'  'D' = 'Counties with density less than 44 hh/mile' 
                   other='Unknown' ;
NOTE: Format $cac_cdi is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value prod_act  1='Production Active'  2='Supplemental Active'  3='Inactive'
                   ;
NOTE: Format prod_act is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_act  0='Inactive'  1='Active' ;
NOTE: Format cac_act is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_prod  0='Supplemental'  1='Production' ;
NOTE: Format cac_prod is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_kids  0='No Children'  1='Children Present'   other='Unknown' ;
NOTE: Format cac_kids is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_mar  1 = 'At Least 1 Married'  2 = 'At Least 1 Single'  3 = 'Both
                   Married and single'  other='Unknown' ;
NOTE: Format cac_mar is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_age  1 = '18-24 Years Old'  2 = '25-34 Years Old'  3 = '35-44 Years
                   Old'  4 = '45-54 Years Old'  5 = '55-64 Years Old'  6 = '65-74 Years Old'  7
                   = '75+ Years Old'  other = 'Unknown' ;
NOTE: Format cac_age is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $cac_inc  '1'='$0 - $14,999'  '2'='$15,000 - $19,999'  '3'='$20,000 -
                   $29,999'  '4'='$30,000 - $39,999'  '5'='$40,000 - $49,999'  '6'='$50,000 -
                   $74,999'  '7'='$75,000 - $99,999'  '8'='$100,000 - $124,999'  '9'='$125,000 -
                   $149,999'  'A'='$150,000 - $174,999'  'B'='$175,000 - $199,999'  'C'='$200,
                   000 - $249,999'  'D'='$250,000 or More'  other='Unknown' ;
NOTE: Format $cac_inc is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $cac_ninc '0'= '$0 - $14,999' '1'= '$15,000 - $19,999' '2'= '$20,000 -
                   $24,999' '3'= '$25,000 - $29,999' '4'= '$30,000 - $34,999' '5'= '$35,000 -
                   $39,999' '6'= '$40,000 - $44,999' '7'= '$45,000 - $49,999' '8'= '$50,000 -
                   $54,999' '9'= '$55,000 - $59,999' 'A'= '$60,000 - $64,999' 'B'= '$65,000 -
                   $69,999' 'C'= '$70,000 - $74,999' 'D'= '$75,000 - $79,999' 'E'= '$80,000 -
                   $84,999' 'F'= '$85,000 - $89,999' 'G'= '$90,000 - $94,999' 'H'= '$95,000 -
                   $99,999' 'I'= '$100,000 - $104,999' 'J'= '$105,000 - $109,999' 'K'= '$110,000
                   - $114,999' 'L'= '$115,000 - $119,999' 'M'= '$120,000 - $124,999' 'N'= '$125,
                   000 - $129,999' 'O'= '$130,000 - $134,999' 'P'= '$135,000 - $139,999' 'Q'=
                   '$140,000 - $144,999' 'R'= '$145,000 - $149,999' 'S'= '$150,000 - $159,999'
                   'T'= '$160,000 - $169,999' 'U'= '$170,000 - $174,999' 'V'= '$175,000 - $189,
                   999' 'W'= '$190,000 - $199,999' 'X'= '$200,000 - $224,999' 'Y'= '$225,000 -
                   $249,999' 'Z'= '$250,000 or More' other = 'Unknown' ;
NOTE: Format $cac_ninc is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $silh_ld  'A' = 'Rough Beginnings'  'B' = 'Rustic Life'  'C' = 'Wheels
                   of the City'  'D' = 'On Their Way'  'E' = 'All About Town'  'F' = 'Business
                   Life'  'G' = 'Flying Solo'  'H' = 'White Picket Fence'  'I' = 'Down Home' 
                   'J' = 'Good Times'  'K' = 'Privileged Providers'  'L' = 'County Seat'  'M' =
                   'Make it Somehow'  'N' = 'Power Players'  'O' = 'Securing the Nest'  'P' =
                   'Rocky Retirement'  'Q' = 'Golden Sunset'  other = 'Unscored' ;
NOTE: Format $silh_ld is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $silh_super  'A' = 'Rough Beginnings'  'B' = 'White Picket Fence'  'C'
                   = 'On Their Way'  'D' = 'Rustic Life'  'E' = 'Privileged Providers'  'F' =
                   'Good Times'  'G' = 'Power Players'  'H' = 'Down Home'  'I' = 'Securing the
                   Nest'  'J' = 'Make it Somehow'  'K' = 'Rocky Retirement'  'L' = 'Golden
                   Sunset'  other = 'Unscored' ;
NOTE: Format $silh_super is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $silh 'A1'='Shes in the Now' 'A2'='Hes Starting Out' 'A3'='Shes Still
                   Here' 'A4'='Hes Still Here' 'A5'='Shes Left Behind' 'A6'='Hes Settling In'
                   'B1'='Starting Out Families' 'B2'='Americana Families' 'B3'='Emerging
                   Wealthy' 'B4'='Young Neighbors' 'C1'='Wall Street Dreaming' 'C2'='Execs on
                   the Move' 'C3'='Successful Social Techies' 'C4'='The Culturally Connected '
                   'C5'='New Luxury' 'D1'='Outskirts ' 'D2'='Shes a Little Bit Country'
                   'D3'='Country Gals' 'D4'='Growin up Country' 'D5'='NASCAR Country'
                   'E1'='Suburban Family' 'E2'='Suburban Bourgeoisie' 'E3'='Executive Families'
                   'E4'='Successful Providers' 'F1'='Midlife Survivor' 'F2'='Alone in the City'
                   'F3'='Solo in Style' 'F4'='Emerging Urban Executives' 'F5'='Cultural Singles'
                   'F6'='Comfortable Singles' 'F7'='The Intellectual' 'G1'='Downtown Success'
                   'G2'='Power Elite' 'G3'='Arrived' 'H1'='Rustic Families' 'H2'='Small Town
                   Providers' 'H3'='Neighborly Families' 'H4'='Established Families'
                   'H5'='Cultured Elite' 'I1'='Metro Couples' 'I2'='In The Now' 'I3'='Settling
                   by the Fire' 'I4'='Metro Nesters' 'I5'='Rural Empty Nesters' 'J1'='Retiring
                   Needy' 'J2'='Her Hometown' 'J3'='The Retiring' 'J4'='Simple Life Retirees'
                   'K1'='Hanging On' 'K2'='Rustic Retired' 'K3'='Settled In Seniors'
                   'K4'='Living Off the Land' 'L1'='The Cultural Estate' 'L2'='Settled in the
                   Suburbs' 'L3'='Settled in the Country' 'L4'='Social Seniors' 'L5'='Single
                   Seniors' 'L6'='Cultured Alone' 'XX'='Unscored' other='Unscored' ;
NOTE: Format $silh is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value pofaage  .,0='None Present or Not Available'  1='Male present' 
                   2='Female present'  3='Male and Female present'  4='Unknown Gender present' 
                   5='Male and Unknown Gender present'  6='Female and Unknown Gender present' 
                   7='Male, Female and Unknown Gender present' ;
NOTE: Format pofaage is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value pofaagi  0='Not Available'  1='Adult Present' ;
NOTE: Format pofaagi is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_edu 0='Unknown' 1='Some high school or less' 2='High school'
                   3='Some college' 4='College' 5='Graduate school' ;
NOTE: Format cac_edu is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value cac_occ 0="Unknown/No Data" 1="Physician/Dentist" 2="Health Care"
                   3="Lawyers/Judges" 5="Professional/Technical" 6="Management" 7="Teacher
                   Educator" 8="Sales/Marketing" 9="Clerical/Service Worker"
                   10="Tradesman/Machine Oper / Laborer" 11="Farmer" 12="Student" 13="Homemaker"
                   14="Retired" 15="Federal Employee" 16="Federal Employee Retired"
                   17="Military" 18="Military Retired" 19="Other" 20="Business Owner" ;
NOTE: Format cac_occ is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $etethnic "00" = "UNCODED" "01" = "ENGLISH" "02" = "SCOTTISH" "03" =
                   "DANISH" "04" = "SWEDISH" "05" = "NORWEGIAN" "06" = "FINNISH" "07" =
                   "ICELANDIC" "08" = "DUTCH" "09" = "BELGIAN" "10" = "GERMAN" "11" = "AUSTRIAN"
                   "12" = "HUNGARIAN" "13" = "CZECH" "14" = "SLOVAK" "15" = "IRISH" "16" =
                   "WELSH" "17" = "FRENCH" "18" = "SWISS" "19" = "ITALIAN" "20" = "HISPANIC"
                   "21" = "PORTUGUESE" "22" = "POLISH" "23" = "ESTONIAN" "24" = "LATVIAN" "25" =
                   "LITHUANIAN" "26" = "UKRAINIAN" "27" = "GEORGIAN" "28" = "BYELORUSSIAN" "29"
                   = "ARMENIAN" "30" = "RUSSIAN" "31" = "TURKISH" "32" = "KURDISH" "33" =
                   "GREEK" "34" = "PERSIAN" "35" = "MOLDOVAN" "36" = "BULGARIAN" "37" =
                   "ROMANIAN" "38" = "ALBANIAN" "39" = "NATIVE AMERICAN" "40" = "SLOVENIAN" "41"
                   = "CROATIAN" "42" = "SERBIAN" "43" = "BOSNIAK" "44" = "AZERBAIJANI" "45" =
                   "KAZAKH" "46" = "AFGHAN" "47" = "PAKISTANI" "48" = "BANGLADESHI" "49" =
                   "INDONESIAN" "50" = "INDIAN" "51" = "BURMESE (MYANMAR)" "52" = "MONGOLIAN"
                   "53" = "CHINESE" "56" = "KOREAN" "57" = "JAPANESE" "58" = "THAI" "59" =
                   "MALAY" "60" = "LAOTIAN" "61" = "KHMER" "62" = "VIETNAMESE" "63" = "SRI
                   LANKAN" "64" = "UZBEK" "65" = "OTHER ASIAN" "66" = "JEWISH" "67" = "ALEUT"
                   "68" = "HEBREW" "70" = "ARAB" "72" = "TURKMEN" "73" = "TAJIK" "74" =
                   "KIRGHIZ" "75" = "SAUDI" "76" = "IRAQI" "77" = "LIBYAN" "78" = "EGYPTIAN"
                   "79" = "RWANDAN" "7A" = "HINDU" "7B" = "DJIBOUTIAN" "7C" = "MANX" "7D" =
                   "TELUGU" "7E" = "NEPALESE" "7F" = "SAMOAN" "7G" = "MAURITANIAN" "7H" =
                   "INUIT" "80" = "TONGAN" "81" = "SENEGALESE" "82" = "MALAWIAN" "83" =
                   "SUDANESE" "84" = "MOROCCAN" "85" = "AFRICAN AMERICAN" "86" = "KENYAN" "87" =
                   "NIGERIAN (NIGERIA)" "88" = "GHANAIAN" "89" = "ZAMBIAN" "8A" = "CONGOLESE"
                   "8B" = "CENTRAL AFRICAN (CENTRAL AFRICAN REPUBLIC)" "8C" = "TOGOLESE" "8D" =
                   "BAHRAINI" "8E" = "QATARI" "8F" = "GUYANESE" "8G" = "TIBETAN" "8H" = "FIJIAN"
                   "8I" = "SWAZI" "8J" = "ZULU" "8K" = "XHOSA" "8L" = "BASOTHO" "8M" = "SOUTH
                   AFRICAN" "8N" = "LIBERIAN" "8O" = "COMORAN" "8P" = "BENINESE" "8Q" =
                   "BURKINABE (BURKINA FASO)" "8R" = "NIGERIEN (NIGER)" "8S" = "ASHANTI" "8T" =
                   "SWAHILI" "8U" = "HAITIAN" "8V" = "MALIAN" "8W" = "JAMAICAN" "8X" = "HAUSA"
                   "8Y" = "PILI" "90" = "CONGOLESE (DRG)" "91" = "SURINAMESE" "92" = "MOZAMBICAN
                   (MOZAMBIQUE)" "93" = "IVORIAN (IVORY COAST)" "94" = "BHUTANESE" "95" =
                   "ETHIOPIAN" "96" = "UGANDAN" "97" = "BATSWANA (BOTSWANA)" "98" =
                   "CAMEROONIAN" "99" = "ZIMBABWEAN" "9A" = "NAMIBIAN" "9B" = "BURUNDI" "9C" =
                   "TANZANIAN" "9D" = "GAMBIAN" "9E" = "SOMALI" "9F" = "MACEDONIAN" "9G" =
                   "CHADIAN" "9H" = "GABONESE" "9I" = "ANGOLAN" "9J" = "CHECHEN" "9K" = "IGBO"
                   "9L" = "YORUBA" "9M" = "ALGERIAN" "9N" = "FILIPINO" "9O" = "SOTHO (LESOTHO)"
                   "9P" = "TUNISIAN" "9Q" = "HAWAIIAN" "9R" = "MALAGASY (MADAGASCAR)" "9S" =
                   "BASQUE" "9T" = "SIERRA LEONEAN" "9U" = "KUWAITI" "9V" = "YEMENI" "9W" =
                   "GUINEAN (GUINEA-BISSAU)" "9X" = "PAPUA NEW GUINEAN" "9Y" = "EQUATORIAL
                   GUINEAN" "9Z" = "SYRIAN" "A1" = "AFRICAN AMERICAN" "A2" = "AFRICAN AMERICAN"
                   "A3" = "AFRICAN AMERICAN" "A4" = "AFRICAN AMERICAN" "A5" = "AFRICAN AMERICAN"
                   "D1" = "AFRICAN AMERICAN" "D2" = "AFRICAN AMERICAN" "D3" = "AFRICAN AMERICAN"
                   "D4" = "AFRICAN AMERICAN" "D5" = "AFRICAN AMERICAN" "E1" = "AFRICAN AMERICAN"
                   "E2" = "AFRICAN AMERICAN" "E3" = "AFRICAN AMERICAN" "E4" = "AFRICAN AMERICAN"
                   "E5" = "AFRICAN AMERICAN" "F1" = "AFRICAN AMERICAN" "F2" = "AFRICAN AMERICAN"
                   "F3" = "AFRICAN AMERICAN" "F4" = "AFRICAN AMERICAN" "F5" = "AFRICAN AMERICAN"
                   "I1" = "AFRICAN AMERICAN" "I2" = "AFRICAN AMERICAN" "I3" = "AFRICAN AMERICAN"
                   "I4" = "AFRICAN AMERICAN" "I5" = "AFRICAN AMERICAN" "S1" = "AFRICAN AMERICAN"
                   "S2" = "AFRICAN AMERICAN" "S3" = "AFRICAN AMERICAN" "S4" = "AFRICAN AMERICAN"
                   "S5" = "AFRICAN AMERICAN" "U1" = "AFRICAN AMERICAN" "U2" = "AFRICAN AMERICAN"
                   "U3" = "AFRICAN AMERICAN" "U4" = "AFRICAN AMERICAN" "U5" = "AFRICAN AMERICAN"
                   "UC" = "UNCODABLE RECORDS" "W1" = "AFRICAN AMERICAN" "W2" = "AFRICAN
                   AMERICAN" "W3" = "AFRICAN AMERICAN" "W4" = "AFRICAN AMERICAN" "W5" = "AFRICAN
                   AMERICAN" "ZZ" = "MULTI ETHNIC";
NOTE: Format $etethnic is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $etrelig "B" = "BUDDHIST" "C" = "CATHOLIC" "E" = "ETHIOPIAN ORTHODOX"
                   "G" = "GREEK ORTHODOX" "H" = "HINDU" "I" = "MUSLIM" "J" = "JEWISH" "K" =
                   "SIKH" "L" = "LUTHERAN" "M" = "MORMON" "O" = "EASTERN ORTHODOX" "P" =
                   "PROTESTANT" "S" = "SHINTO" "X" = "UNCODED";
NOTE: Format $etrelig is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $etlang "00" = "UNKNOWN" "01" = "ENGLISH" "03" = "DANISH" "04" =
                   "SWEDISH" "05" = "NORWEGIAN" "06" = "FINNISH" "07" = "ICELANDIC" "08" =
                   "DUTCH" "09" = "FLEMISH/WALLOON" "10" = "GERMAN" "12" = "HUNGARIAN" "13" =
                   "CZECH" "14" = "SLOVAK" "17" = "FRENCH" "19" = "ITALIAN" "20" = "SPANISH"
                   "21" = "PORTUGUESE" "22" = "POLISH" "23" = "ESTONIAN" "24" = "LATVIAN" "25" =
                   "LITHUANIAN" "27" = "GEORGIAN" "29" = "ARMENIAN" "30" = "RUSSIAN" "31" =
                   "TURKISH" "32" = "KURDISH" "33" = "GREEK" "34" = "FARSI" "35" = "MOLDOVAN"
                   "36" = "BULGARIAN" "37" = "ROMANIAN" "38" = "ALBANIAN" "40" = "SLOVENIAN"
                   "41" = "SERBO-CROATIAN" "44" = "AZERI" "45" = "KAZAKH" "46" = "PASHTU/PASHTO"
                   "47" = "URDU" "48" = "BENGALI/BANGLA" "49" = "BAHASA INDONESIA" "51" =
                   "BURMESE" "52" = "MONGOLIAN" "53" = "CHINESE" "56" = "KOREAN" "57" =
                   "JAPANESE" "58" = "THAI" "59" = "BAHASA MELAYU" "60" = "LAO" "61" = "KHMER"
                   "62" = "VIETNAMESE" "63" = "SINHALA" "64" = "UZBEK" "68" = "HEBREW" "70" =
                   "ARABIC" "72" = "TURKMEN" "73" = "TAJIK" "74" = "KIRGHIZ" "7A" = "HINDI" "7E"
                   = "NEPALI" "7F" = "SAMOAN" "80" = "TONGAN" "86" = "OROMO" "88" = "GA" "8G" =
                   "TIBETAN" "8I" = "SISWATI" "8J" = "ZULU" "8K" = "XHOSA" "8M" = "AFRIKAANS"
                   "8O" = "COMORIAN/SHIKOMORO" "8S" = "TWI (OF ASHANTI ETHNICITY)" "8T" =
                   "SWAHILI" "8X" = "HAUSA" "92" = "BANTU" "94" = "DZONGKHA" "95" = "AMHARIC"
                   "97" = "TSWANA" "9E" = "SOMALI" "9F" = "MACEDONIAN" "9K" = "IGBO" "9L" =
                   "YORUBA" "9N" = "TAGALOG" "9O" = "SOTHO" "9R" = "MALAGASY" "9S" = "BASQUE";
NOTE: Format $etlang is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $ethisporg "00" = "UNKNOWN" "01" = "MEXICO" "02" = "CUBA" "03" =
                   "PUERTO RICO" "04" = "NICARAGUA" "05" = "DOMINICAN REPUBLIC" "06" =
                   "COLOMBIA" "07" = "HONDURAS" "08" = "GUATEMALA" "09" = "EL SALVADOR" "10" =
                   "COSTA RICA" "11" = "PANAMA" "12" = "ECUADOR" "13" = "VENEZUELA" "14" =
                   "ARGENTINA" "15" = "CHILE" "16" = "PERU" "17" = "BOLIVIA" "18" = "URUGUAY"
                   "19" = "PARAGUAY" "20" = "SPAIN" "22" = "BRAZIL";
NOTE: Format $ethisporg is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $ethispasm "1" = "ASSIMILATED" "2" = "BILINGUAL ENGLISH" "3" =
                   "BILINGUAL SPANISH" "4" = "UNASSIMILATED" "0" = "UNKNOWN";
NOTE: Format $ethispasm is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $etasiaasm "1" = "ASSIMILATED" "2" = "BILINGUAL ENGLISH" "3" =
                   "BILINGUAL NATIVE" "4" = "UNASSIMILATED" "0" = "UNKNOWN";
NOTE: Format $etasiaasm is already in the catalog and will be overwritten
MPRINT(COVERAGE):  value $etgender "1" = "MALE" "2" = "FEMALE" "3" = "EITHER" "0" = "UNKNOWN";
NOTE: Format $etgender is already in the catalog and will be overwritten
MPRINT(COVERAGE):  run;
NOTE: Procedure format step took :
      real time : 0.008
      cpu time  : 0.008


MPRINT(COVERAGE):  proc format;
MPRINT(COVERAGE):  value $val_st_scf 'AK_995' ='V' 'AK_996' ='V' 'AK_997' ='V' 'AK_998' ='V'
                   'AK_999' ='V' 'AL_350' ='V' 'AL_351' ='V' 'AL_352' ='V' 'AL_354' ='V'
                   'AL_355' ='V' 'AL_356' ='V' 'AL_357' ='V' 'AL_358' ='V' 'AL_359' ='V'
                   'AL_360' ='V' 'AL_361' ='V' 'AL_362' ='V' 'AL_363' ='V' 'AL_364' ='V'
                   'AL_365' ='V' 'AL_366' ='V' 'AL_367' ='V' 'AL_368' ='V' 'AL_369' ='V'
                   'AR_716' ='V' 'AR_717' ='V' 'AR_718' ='V' 'AR_719' ='V' 'AR_720' ='V'
                   'AR_721' ='V' 'AR_722' ='V' 'AR_723' ='V' 'AR_724' ='V' 'AR_725' ='V'
                   'AR_726' ='V' 'AR_727' ='V' 'AR_728' ='V' 'AR_729' ='V' 'AZ_850' ='V'
                   'AZ_851' ='V' 'AZ_852' ='V' 'AZ_853' ='V' 'AZ_855' ='V' 'AZ_856' ='V'
                   'AZ_857' ='V' 'AZ_859' ='V' 'AZ_860' ='V' 'AZ_863' ='V' 'AZ_864' ='V'
                   'AZ_865' ='V' 'CA_900' ='V' 'CA_902' ='V' 'CA_903' ='V' 'CA_904' ='V'
                   'CA_905' ='V' 'CA_906' ='V' 'CA_907' ='V' 'CA_908' ='V' 'CA_910' ='V'
                   'CA_911' ='V' 'CA_912' ='V' 'CA_913' ='V' 'CA_914' ='V' 'CA_915' ='V'
                   'CA_916' ='V' 'CA_917' ='V' 'CA_918' ='V' 'CA_919' ='V' 'CA_920' ='V'
                   'CA_921' ='V' 'CA_922' ='V' 'CA_923' ='V' 'CA_924' ='V' 'CA_925' ='V'
                   'CA_926' ='V' 'CA_927' ='V' 'CA_928' ='V' 'CA_930' ='V' 'CA_931' ='V'
                   'CA_932' ='V' 'CA_933' ='V' 'CA_934' ='V' 'CA_935' ='V' 'CA_936' ='V'
                   'CA_937' ='V' 'CA_939' ='V' 'CA_940' ='V' 'CA_941' ='V' 'CA_943' ='V'
                   'CA_944' ='V' 'CA_945' ='V' 'CA_946' ='V' 'CA_947' ='V' 'CA_948' ='V'
                   'CA_949' ='V' 'CA_950' ='V' 'CA_951' ='V' 'CA_952' ='V' 'CA_953' ='V'
                   'CA_954' ='V' 'CA_955' ='V' 'CA_956' ='V' 'CA_957' ='V' 'CA_958' ='V'
                   'CA_959' ='V' 'CA_960' ='V' 'CA_961' ='V' 'CO_800' ='V' 'CO_801' ='V'
                   'CO_802' ='V' 'CO_803' ='V' 'CO_804' ='V' 'CO_805' ='V' 'CO_806' ='V'
                   'CO_807' ='V' 'CO_808' ='V' 'CO_809' ='V' 'CO_810' ='V' 'CO_811' ='V'
                   'CO_812' ='V' 'CO_813' ='V' 'CO_814' ='V' 'CO_815' ='V' 'CO_816' ='V'
                   'CT_060' ='V' 'CT_061' ='V' 'CT_062' ='V' 'CT_063' ='V' 'CT_064' ='V'
                   'CT_065' ='V' 'CT_066' ='V' 'CT_067' ='V' 'CT_068' ='V' 'CT_069' ='V'
                   'DC_200' ='V' 'DC_202' ='V' 'DC_203' ='V' 'DC_205' ='V' 'DE_197' ='V'
                   'DE_198' ='V' 'DE_199' ='V' 'FL_320' ='V' 'FL_321' ='V' 'FL_322' ='V'
                   'FL_323' ='V' 'FL_324' ='V' 'FL_325' ='V' 'FL_326' ='V' 'FL_327' ='V'
                   'FL_328' ='V' 'FL_329' ='V' 'FL_330' ='V' 'FL_331' ='V' 'FL_332' ='V'
                   'FL_333' ='V' 'FL_334' ='V' 'FL_335' ='V' 'FL_336' ='V' 'FL_337' ='V'
                   'FL_338' ='V' 'FL_339' ='V' 'FL_341' ='V' 'FL_342' ='V' 'FL_344' ='V'
                   'FL_346' ='V' 'FL_347' ='V' 'FL_349' ='V' 'GA_300' ='V' 'GA_301' ='V'
                   'GA_302' ='V' 'GA_303' ='V' 'GA_304' ='V' 'GA_305' ='V' 'GA_306' ='V'
                   'GA_307' ='V' 'GA_308' ='V' 'GA_309' ='V' 'GA_310' ='V' 'GA_311' ='V'
                   'GA_312' ='V' 'GA_313' ='V' 'GA_314' ='V' 'GA_315' ='V' 'GA_316' ='V'
                   'GA_317' ='V' 'GA_318' ='V' 'GA_319' ='V' 'GA_398' ='V' 'HI_967' ='V'
                   'HI_968' ='V' 'IA_500' ='V' 'IA_501' ='V' 'IA_502' ='V' 'IA_503' ='V'
                   'IA_504' ='V' 'IA_505' ='V' 'IA_506' ='V' 'IA_507' ='V' 'IA_508' ='V'
                   'IA_510' ='V' 'IA_511' ='V' 'IA_512' ='V' 'IA_513' ='V' 'IA_514' ='V'
                   'IA_515' ='V' 'IA_516' ='V' 'IA_520' ='V' 'IA_521' ='V' 'IA_522' ='V'
                   'IA_523' ='V' 'IA_524' ='V' 'IA_525' ='V' 'IA_526' ='V' 'IA_527' ='V'
                   'IA_528' ='V' 'ID_832' ='V' 'ID_833' ='V' 'ID_834' ='V' 'ID_835' ='V'
                   'ID_836' ='V' 'ID_837' ='V' 'ID_838' ='V' 'IL_600' ='V' 'IL_601' ='V'
                   'IL_602' ='V' 'IL_603' ='V' 'IL_604' ='V' 'IL_605' ='V' 'IL_606' ='V'
                   'IL_607' ='V' 'IL_608' ='V' 'IL_609' ='V' 'IL_610' ='V' 'IL_611' ='V'
                   'IL_612' ='V' 'IL_613' ='V' 'IL_614' ='V' 'IL_615' ='V' 'IL_616' ='V'
                   'IL_617' ='V' 'IL_618' ='V' 'IL_619' ='V' 'IL_620' ='V' 'IL_622' ='V'
                   'IL_623' ='V' 'IL_624' ='V' 'IL_625' ='V' 'IL_626' ='V' 'IL_627' ='V'
                   'IL_628' ='V' 'IL_629' ='V' 'IN_460' ='V' 'IN_461' ='V' 'IN_462' ='V'
                   'IN_463' ='V' 'IN_464' ='V' 'IN_465' ='V' 'IN_466' ='V' 'IN_467' ='V'
                   'IN_468' ='V' 'IN_469' ='V' 'IN_470' ='V' 'IN_471' ='V' 'IN_472' ='V'
                   'IN_473' ='V' 'IN_474' ='V' 'IN_475' ='V' 'IN_476' ='V' 'IN_477' ='V'
                   'IN_478' ='V' 'IN_479' ='V' 'KS_660' ='V' 'KS_661' ='V' 'KS_662' ='V'
                   'KS_664' ='V' 'KS_665' ='V' 'KS_666' ='V' 'KS_667' ='V' 'KS_668' ='V'
                   'KS_669' ='V' 'KS_670' ='V' 'KS_671' ='V' 'KS_672' ='V' 'KS_673' ='V'
                   'KS_674' ='V' 'KS_675' ='V' 'KS_676' ='V' 'KS_677' ='V' 'KS_678' ='V'
                   'KS_679' ='V' 'KY_400' ='V' 'KY_401' ='V' 'KY_402' ='V' 'KY_403' ='V'
                   'KY_404' ='V' 'KY_405' ='V' 'KY_406' ='V' 'KY_407' ='V' 'KY_408' ='V'
                   'KY_409' ='V' 'KY_410' ='V' 'KY_411' ='V' 'KY_412' ='V' 'KY_413' ='V'
                   'KY_414' ='V' 'KY_415' ='V' 'KY_416' ='V' 'KY_417' ='V' 'KY_418' ='V'
                   'KY_420' ='V' 'KY_421' ='V' 'KY_422' ='V' 'KY_423' ='V' 'KY_424' ='V'
                   'KY_425' ='V' 'KY_426' ='V' 'KY_427' ='V' 'LA_700' ='V' 'LA_701' ='V'
                   'LA_703' ='V' 'LA_704' ='V' 'LA_705' ='V' 'LA_706' ='V' 'LA_707' ='V'
                   'LA_708' ='V' 'LA_710' ='V' 'LA_711' ='V' 'LA_712' ='V' 'LA_713' ='V'
                   'LA_714' ='V' 'MA_010' ='V' 'MA_011' ='V' 'MA_012' ='V' 'MA_013' ='V'
                   'MA_014' ='V' 'MA_015' ='V' 'MA_016' ='V' 'MA_017' ='V' 'MA_018' ='V'
                   'MA_019' ='V' 'MA_020' ='V' 'MA_021' ='V' 'MA_022' ='V' 'MA_023' ='V'
                   'MA_024' ='V' 'MA_025' ='V' 'MA_026' ='V' 'MA_027' ='V' 'MD_206' ='V'
                   'MD_207' ='V' 'MD_208' ='V' 'MD_209' ='V' 'MD_210' ='V' 'MD_211' ='V'
                   'MD_212' ='V' 'MD_214' ='V' 'MD_215' ='V' 'MD_216' ='V' 'MD_217' ='V'
                   'MD_218' ='V' 'MD_219' ='V' 'ME_039' ='V' 'ME_040' ='V' 'ME_041' ='V'
                   'ME_042' ='V' 'ME_043' ='V' 'ME_044' ='V' 'ME_045' ='V' 'ME_046' ='V'
                   'ME_047' ='V' 'ME_048' ='V' 'ME_049' ='V' 'MI_480' ='V' 'MI_481' ='V'
                   'MI_482' ='V' 'MI_483' ='V' 'MI_484' ='V' 'MI_485' ='V' 'MI_486' ='V'
                   'MI_487' ='V' 'MI_488' ='V' 'MI_489' ='V' 'MI_490' ='V' 'MI_491' ='V'
                   'MI_492' ='V' 'MI_493' ='V' 'MI_494' ='V' 'MI_495' ='V' 'MI_496' ='V'
                   'MI_497' ='V' 'MI_498' ='V' 'MI_499' ='V' 'MN_550' ='V' 'MN_551' ='V'
                   'MN_553' ='V' 'MN_554' ='V' 'MN_555' ='V' 'MN_556' ='V' 'MN_557' ='V'
                   'MN_558' ='V' 'MN_559' ='V' 'MN_560' ='V' 'MN_561' ='V' 'MN_562' ='V'
                   'MN_563' ='V' 'MN_564' ='V' 'MN_565' ='V' 'MN_566' ='V' 'MN_567' ='V'
                   'MO_630' ='V' 'MO_631' ='V' 'MO_633' ='V' 'MO_634' ='V' 'MO_635' ='V'
                   'MO_636' ='V' 'MO_637' ='V' 'MO_638' ='V' 'MO_639' ='V' 'MO_640' ='V'
                   'MO_641' ='V' 'MO_644' ='V' 'MO_645' ='V' 'MO_646' ='V' 'MO_647' ='V'
                   'MO_648' ='V' 'MO_650' ='V' 'MO_651' ='V' 'MO_652' ='V' 'MO_653' ='V'
                   'MO_654' ='V' 'MO_655' ='V' 'MO_656' ='V' 'MO_657' ='V' 'MO_658' ='V'
                   'MS_386' ='V' 'MS_387' ='V' 'MS_388' ='V' 'MS_389' ='V' 'MS_390' ='V'
                   'MS_391' ='V' 'MS_392' ='V' 'MS_393' ='V' 'MS_394' ='V' 'MS_395' ='V'
                   'MS_396' ='V' 'MS_397' ='V' 'MT_590' ='V' 'MT_591' ='V' 'MT_592' ='V'
                   'MT_593' ='V' 'MT_594' ='V' 'MT_595' ='V' 'MT_596' ='V' 'MT_597' ='V'
                   'MT_598' ='V' 'MT_599' ='V' 'NC_270' ='V' 'NC_271' ='V' 'NC_272' ='V'
                   'NC_273' ='V' 'NC_274' ='V' 'NC_275' ='V' 'NC_276' ='V' 'NC_277' ='V'
                   'NC_278' ='V' 'NC_279' ='V' 'NC_280' ='V' 'NC_281' ='V' 'NC_282' ='V'
                   'NC_283' ='V' 'NC_284' ='V' 'NC_285' ='V' 'NC_286' ='V' 'NC_287' ='V'
                   'NC_288' ='V' 'NC_289' ='V' 'ND_580' ='V' 'ND_581' ='V' 'ND_582' ='V'
                   'ND_583' ='V' 'ND_584' ='V' 'ND_585' ='V' 'ND_586' ='V' 'ND_587' ='V'
                   'ND_588' ='V' 'NE_680' ='V' 'NE_681' ='V' 'NE_683' ='V' 'NE_684' ='V'
                   'NE_685' ='V' 'NE_686' ='V' 'NE_687' ='V' 'NE_688' ='V' 'NE_689' ='V'
                   'NE_690' ='V' 'NE_691' ='V' 'NE_692' ='V' 'NE_693' ='V' 'NH_030' ='V'
                   'NH_031' ='V' 'NH_032' ='V' 'NH_033' ='V' 'NH_034' ='V' 'NH_035' ='V'
                   'NH_036' ='V' 'NH_037' ='V' 'NH_038' ='V' 'NJ_070' ='V' 'NJ_071' ='V'
                   'NJ_072' ='V' 'NJ_073' ='V' 'NJ_074' ='V' 'NJ_075' ='V' 'NJ_076' ='V'
                   'NJ_077' ='V' 'NJ_078' ='V' 'NJ_079' ='V' 'NJ_080' ='V' 'NJ_081' ='V'
                   'NJ_082' ='V' 'NJ_083' ='V' 'NJ_084' ='V' 'NJ_085' ='V' 'NJ_086' ='V'
                   'NJ_087' ='V' 'NJ_088' ='V' 'NJ_089' ='V' 'NM_870' ='V' 'NM_871' ='V'
                   'NM_873' ='V' 'NM_874' ='V' 'NM_875' ='V' 'NM_877' ='V' 'NM_878' ='V'
                   'NM_879' ='V' 'NM_880' ='V' 'NM_881' ='V' 'NM_882' ='V' 'NM_883' ='V'
                   'NM_884' ='V' 'NV_890' ='V' 'NV_891' ='V' 'NV_893' ='V' 'NV_894' ='V'
                   'NV_895' ='V' 'NV_897' ='V' 'NV_898' ='V' 'NY_063' ='V' 'NY_100' ='V'
                   'NY_101' ='V' 'NY_102' ='V' 'NY_103' ='V' 'NY_104' ='V' 'NY_105' ='V'
                   'NY_106' ='V' 'NY_107' ='V' 'NY_108' ='V' 'NY_109' ='V' 'NY_110' ='V'
                   'NY_111' ='V' 'NY_112' ='V' 'NY_113' ='V' 'NY_114' ='V' 'NY_115' ='V'
                   'NY_116' ='V' 'NY_117' ='V' 'NY_118' ='V' 'NY_119' ='V' 'NY_120' ='V'
                   'NY_121' ='V' 'NY_122' ='V' 'NY_123' ='V' 'NY_124' ='V' 'NY_125' ='V'
                   'NY_126' ='V' 'NY_127' ='V' 'NY_128' ='V' 'NY_129' ='V' 'NY_130' ='V'
                   'NY_131' ='V' 'NY_132' ='V' 'NY_133' ='V' 'NY_134' ='V' 'NY_135' ='V'
                   'NY_136' ='V' 'NY_137' ='V' 'NY_138' ='V' 'NY_139' ='V' 'NY_140' ='V'
                   'NY_141' ='V' 'NY_142' ='V' 'NY_143' ='V' 'NY_144' ='V' 'NY_145' ='V'
                   'NY_146' ='V' 'NY_147' ='V' 'NY_148' ='V' 'NY_149' ='V' 'OH_430' ='V'
                   'OH_431' ='V' 'OH_432' ='V' 'OH_433' ='V' 'OH_434' ='V' 'OH_435' ='V'
                   'OH_436' ='V' 'OH_437' ='V' 'OH_438' ='V' 'OH_439' ='V' 'OH_440' ='V'
                   'OH_441' ='V' 'OH_442' ='V' 'OH_443' ='V' 'OH_444' ='V' 'OH_445' ='V'
                   'OH_446' ='V' 'OH_447' ='V' 'OH_448' ='V' 'OH_449' ='V' 'OH_450' ='V'
                   'OH_451' ='V' 'OH_452' ='V' 'OH_453' ='V' 'OH_454' ='V' 'OH_455' ='V'
                   'OH_456' ='V' 'OH_457' ='V' 'OH_458' ='V' 'OK_730' ='V' 'OK_731' ='V'
                   'OK_734' ='V' 'OK_735' ='V' 'OK_736' ='V' 'OK_737' ='V' 'OK_738' ='V'
                   'OK_739' ='V' 'OK_740' ='V' 'OK_741' ='V' 'OK_743' ='V' 'OK_744' ='V'
                   'OK_745' ='V' 'OK_746' ='V' 'OK_747' ='V' 'OK_748' ='V' 'OK_749' ='V'
                   'OR_970' ='V' 'OR_971' ='V' 'OR_972' ='V' 'OR_973' ='V' 'OR_974' ='V'
                   'OR_975' ='V' 'OR_976' ='V' 'OR_977' ='V' 'OR_978' ='V' 'OR_979' ='V'
                   'PA_150' ='V' 'PA_151' ='V' 'PA_152' ='V' 'PA_153' ='V' 'PA_154' ='V'
                   'PA_155' ='V' 'PA_156' ='V' 'PA_157' ='V' 'PA_158' ='V' 'PA_159' ='V'
                   'PA_160' ='V' 'PA_161' ='V' 'PA_162' ='V' 'PA_163' ='V' 'PA_164' ='V'
                   'PA_165' ='V' 'PA_166' ='V' 'PA_167' ='V' 'PA_168' ='V' 'PA_169' ='V'
                   'PA_170' ='V' 'PA_171' ='V' 'PA_172' ='V' 'PA_173' ='V' 'PA_174' ='V'
                   'PA_175' ='V' 'PA_176' ='V' 'PA_177' ='V' 'PA_178' ='V' 'PA_179' ='V'
                   'PA_180' ='V' 'PA_181' ='V' 'PA_182' ='V' 'PA_183' ='V' 'PA_184' ='V'
                   'PA_185' ='V' 'PA_186' ='V' 'PA_187' ='V' 'PA_188' ='V' 'PA_189' ='V'
                   'PA_190' ='V' 'PA_191' ='V' 'PA_193' ='V' 'PA_194' ='V' 'PA_195' ='V'
                   'PA_196' ='V' 'RI_028' ='V' 'RI_029' ='V' 'SC_290' ='V' 'SC_291' ='V'
                   'SC_292' ='V' 'SC_293' ='V' 'SC_294' ='V' 'SC_295' ='V' 'SC_296' ='V'
                   'SC_297' ='V' 'SC_298' ='V' 'SC_299' ='V' 'SD_570' ='V' 'SD_571' ='V'
                   'SD_572' ='V' 'SD_573' ='V' 'SD_574' ='V' 'SD_575' ='V' 'SD_576' ='V'
                   'SD_577' ='V' 'TN_370' ='V' 'TN_371' ='V' 'TN_372' ='V' 'TN_373' ='V'
                   'TN_374' ='V' 'TN_376' ='V' 'TN_377' ='V' 'TN_378' ='V' 'TN_379' ='V'
                   'TN_380' ='V' 'TN_381' ='V' 'TN_382' ='V' 'TN_383' ='V' 'TN_384' ='V'
                   'TN_385' ='V' 'TX_750' ='V' 'TX_751' ='V' 'TX_752' ='V' 'TX_753' ='V'
                   'TX_754' ='V' 'TX_755' ='V' 'TX_756' ='V' 'TX_757' ='V' 'TX_758' ='V'
                   'TX_759' ='V' 'TX_760' ='V' 'TX_761' ='V' 'TX_762' ='V' 'TX_763' ='V'
                   'TX_764' ='V' 'TX_765' ='V' 'TX_766' ='V' 'TX_767' ='V' 'TX_768' ='V'
                   'TX_769' ='V' 'TX_770' ='V' 'TX_772' ='V' 'TX_773' ='V' 'TX_774' ='V'
                   'TX_775' ='V' 'TX_776' ='V' 'TX_777' ='V' 'TX_778' ='V' 'TX_779' ='V'
                   'TX_780' ='V' 'TX_781' ='V' 'TX_782' ='V' 'TX_783' ='V' 'TX_784' ='V'
                   'TX_785' ='V' 'TX_786' ='V' 'TX_787' ='V' 'TX_788' ='V' 'TX_789' ='V'
                   'TX_790' ='V' 'TX_791' ='V' 'TX_792' ='V' 'TX_793' ='V' 'TX_794' ='V'
                   'TX_795' ='V' 'TX_796' ='V' 'TX_797' ='V' 'TX_798' ='V' 'TX_799' ='V'
                   'TX_885' ='V' 'UT_840' ='V' 'UT_841' ='V' 'UT_843' ='V' 'UT_844' ='V'
                   'UT_845' ='V' 'UT_846' ='V' 'UT_847' ='V' 'VA_201' ='V' 'VA_220' ='V'
                   'VA_221' ='V' 'VA_222' ='V' 'VA_223' ='V' 'VA_224' ='V' 'VA_225' ='V'
                   'VA_226' ='V' 'VA_227' ='V' 'VA_228' ='V' 'VA_229' ='V' 'VA_230' ='V'
                   'VA_231' ='V' 'VA_232' ='V' 'VA_233' ='V' 'VA_234' ='V' 'VA_235' ='V'
                   'VA_236' ='V' 'VA_237' ='V' 'VA_238' ='V' 'VA_239' ='V' 'VA_240' ='V'
                   'VA_241' ='V' 'VA_242' ='V' 'VA_243' ='V' 'VA_244' ='V' 'VA_245' ='V'
                   'VA_246' ='V' 'VT_050' ='V' 'VT_051' ='V' 'VT_052' ='V' 'VT_053' ='V'
                   'VT_054' ='V' 'VT_056' ='V' 'VT_057' ='V' 'VT_058' ='V' 'VT_059' ='V'
                   'WA_980' ='V' 'WA_981' ='V' 'WA_982' ='V' 'WA_983' ='V' 'WA_984' ='V'
                   'WA_985' ='V' 'WA_986' ='V' 'WA_988' ='V' 'WA_989' ='V' 'WA_990' ='V'
                   'WA_991' ='V' 'WA_992' ='V' 'WA_993' ='V' 'WA_994' ='V' 'WI_530' ='V'
                   'WI_531' ='V' 'WI_532' ='V' 'WI_534' ='V' 'WI_535' ='V' 'WI_537' ='V'
                   'WI_538' ='V' 'WI_539' ='V' 'WI_540' ='V' 'WI_541' ='V' 'WI_542' ='V'
                   'WI_543' ='V' 'WI_544' ='V' 'WI_545' ='V' 'WI_546' ='V' 'WI_547' ='V'
                   'WI_548' ='V' 'WI_549' ='V' 'WV_247' ='V' 'WV_248' ='V' 'WV_249' ='V'
                   'WV_250' ='V' 'WV_251' ='V' 'WV_252' ='V' 'WV_253' ='V' 'WV_254' ='V'
                   'WV_255' ='V' 'WV_256' ='V' 'WV_257' ='V' 'WV_258' ='V' 'WV_259' ='V'
                   'WV_260' ='V' 'WV_261' ='V' 'WV_262' ='V' 'WV_263' ='V' 'WV_264' ='V'
                   'WV_265' ='V' 'WV_266' ='V' 'WV_267' ='V' 'WV_268' ='V' 'WY_820' ='V'
                   'WY_821' ='V' 'WY_822' ='V' 'WY_823' ='V' 'WY_824' ='V' 'WY_825' ='V'
                   'WY_826' ='V' 'WY_827' ='V' 'WY_828' ='V' 'WY_829' ='V' 'WY_830' ='V'
                   'WY_831' ='V' 'WY_834' ='V' other='I';
NOTE: Format $val_st_scf is already in the catalog and will be overwritten
MPRINT(COVERAGE):  run;
NOTE: Procedure format step took :
      real time : 0.009
      cpu time  : 0.009


MPRINT(COVERAGE):  *--- for matching*;
MPRINT(COVERAGE):  ************;
MPRINT(COVERAGE):  * DATA PREP FOR MODELING;
MPRINT(COVERAGE):  ************;
MPRINT(COVERAGE):  ***;
MPRINT(COVERAGE):  * CACDIRECT MODELING RECODES;
MPRINT(COVERAGE):  * LAST UPDATED MM 4/22/2014;
MPRINT(COVERAGE):  * ADDED NON_ENHANCED PARAMTER WHICH CONTROLS WHETHER OR NOT TO CREATE LEGACY
                   RECODES USING NON ENHANCED VERSIONS OF VARIABLES;
MPRINT(COVERAGE):  ***;
MPRINT(COVERAGE):  *** IF CURRENT PRODUCTION DATA IS IN B THEN WRITE DATA FOR NEW QUARTER TO A;
MPRINT(COVERAGE):  libname _ALL_;
MPRINT(COVERAGE):  libname base "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BASE_DEMO/A";
NOTE: Library base assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BASE_DEMO/A

MPRINT(COVERAGE):  libname bridge "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BRIDGE/A";
NOTE: Library bridge assigned as follows:
      Engine:        SAS7BDAT
      Physical Name: /project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/BRIDGE/A

MPRINT(COVERAGE):  filename outfile
                   "/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/EXPORT/BRIDGE/bridge_pid_tabl
                   e_ND.csv";
MPRINT(COVERAGE):  *not sure if the bridge sort should nodup or not, need to talk to bryan/mike;
MPRINT(COVERAGE):  proc sort data=bridge.bridge_pid_ND (obs=max) out=bridge_pid_ND;
MPRINT(COVERAGE):  by cac_hh_pid;
MPRINT(COVERAGE):  run;
NOTE: 124690 observations were read from "BRIDGE.bridge_pid_ND"
NOTE: Data set "WORK.bridge_pid_ND" has 124690 observation(s) and 9 variable(s)
NOTE: Specifying compression for data set "WORK.bridge_pid_ND" has decreased its size from 8314
      to 3791 pages (a 55% reduction)
NOTE: Procedure sort step took :
      real time : 0.355
      cpu time  : 0.412


MPRINT(GENDER):  data scored_M_ND (keep=cac_name_last cac_hh_pid cac_bridge_md5email_id chosen:
                 bridge: last_name_match);
MPRINT(GENDER):  merge bridge_pid_ND (in=a) base.base_demo_ND (in=b obs=max keep=cac_name_last
                 cac_ind: cac_hh_pid cac_em_flag where=(substr(cac_em_flag,1,1)='1'));
MPRINT(GENDER):  by cac_hh_pid;
MPRINT(GENDER):  if a and b;
MPRINT(GENDER):  format chosen_cac_ind_gender chosen_cac_ind_number chosen_spedis_score 8.
                 chosen_match_level chosen_first_x_of_x_flag 8. chosen_cac_ind_name $14.
                 chosen_cac_ind_mi $1. chosen_cac_ind_last $20.;
MPRINT(GENDER):  array genders cac_ind1_gender cac_ind2_gender cac_ind3_gender cac_ind4_gender
                 cac_ind5_gender;
MPRINT(GENDER):  array names cac_ind1_name cac_ind2_name cac_ind3_name cac_ind4_name
                 cac_ind5_name;
MPRINT(GENDER):  array mis cac_ind1_mi cac_ind2_mi cac_ind3_mi cac_ind4_mi cac_ind5_mi;
MPRINT(GENDER):  if not(missing(cac_ind5_name)) then count=5;
MPRINT(GENDER):  else if not(missing(cac_ind4_name)) then count=4;
MPRINT(GENDER):  else if not(missing(cac_ind3_name)) then count=3;
MPRINT(GENDER):  else if not(missing(cac_ind2_name)) then count=2;
MPRINT(GENDER):  else if not(missing(cac_ind1_name)) then count=1;
MPRINT(GENDER):  else delete;
MPRINT(GENDER):  *No indiv_demo names have spaces in them, despite some of them being made of
                 multiple words (maryjo);
MPRINT(GENDER):  *I recommend trying to match a single word of the bridge name to the indiv name
                 first followed by the full name with spaces removed;
MPRINT(GENDER):  *This is not implemented yet;
MPRINT(GENDER):  *Since we do not have mkey on the bridge_pid_xx datasets, we need to figure out
                 if the last name even matched on the first individual at all.;
MPRINT(GENDER):  *Last name is the same for all individuals, so we will approximate mkey1-4
                 matching by using exact/fuzzy last name matching;
MPRINT(GENDER):  *No individuals in IL were under 18, so we are safe contacting any individual;
MPRINT(GENDER):  *individual number gets priority;
MPRINT(GENDER):  *taking the first person for a given gender, even if the gender is inferred
                 from the first individual;
MPRINT(GENDER):  *Matching order;
MPRINT(GENDER):  *0. determine if last name matches exact or at least fuzzy (equivalent to
                 mkey1-4 assuming address must have matched);
MPRINT(GENDER):  *0.5 process separately by gender to determine male match and female match for
                 each bridge ID (deduped at individual level so no one is both genders);
MPRINT(GENDER):  *1. first_name exact match;
MPRINT(GENDER):  *2. spedis partial match score sufficient;
MPRINT(GENDER):  *3. first_name first character match and first_x_of_x_flag (1/1, 2/2, 2/3, 3/4)
                 with spedis tiebreaker;
MPRINT(GENDER):  *0. determine if last name matches exact or at least fuzzy (equivalent to
                 mkey1-4 assuming address must have matched);
MPRINT(GENDER):  bridge_name_last=upcase(strip(bridge_name_last));
MPRINT(GENDER):  bridge_name_first=upcase(strip(bridge_name_first));
MPRINT(GENDER):  cac_indiv_last_exact=compress(cac_name_last,'!');
MPRINT(GENDER):  cac_indiv_last_fuzzy1=soundex(compress(cac_name_last,'!'));
MPRINT(GENDER):  bridge_name_last_exact=compress(bridge_name_last,'!');
MPRINT(GENDER):  bridge_name_last_fuzzy1=soundex(compress(bridge_name_last,'!'));
MPRINT(GENDER):  if bridge_name_last_exact = cac_indiv_last_exact or cac_indiv_last_fuzzy1 =
                 bridge_name_last_fuzzy1 then do i = 1 to count;
MPRINT(GENDER):  last_name_match=1;
MPRINT(GENDER):  if missing(genders(i)) then genders(i) = cac_ind1_gender;
MPRINT(GENDER):  *process next person if gender mismatch;
MPRINT(GENDER):  if genders(i) ne 1 then continue;
MPRINT(GENDER):  min_length = min(length(names(i)),length(bridge_name_first));
MPRINT(GENDER):  if min_length = 1 then first_x_of_x_flag = (substr(names(i),1,1) =
                 substr(bridge_name_first,1,1));
MPRINT(GENDER):  else if min_length = 2 then first_x_of_x_flag = (substr(names(i),1,2) =
                 substr(bridge_name_first,1,2));
MPRINT(GENDER):  else if min_length = 3 then first_x_of_x_flag = ((substr(names(i),1,1) =
                 substr(bridge_name_first,1,1)) + (substr(names(i),2,1) =
                 substr(bridge_name_first,2,1)) + (substr(names(i),3,1) =
                 substr(bridge_name_first,3,1)) ) > 1;
MPRINT(GENDER):  else first_x_of_x_flag = ( (substr(names(i),1,1) = substr(bridge_name_first,1,
                 1)) + (substr(names(i),2,1) = substr(bridge_name_first,2,1)) +
                 (substr(names(i),3,1) = substr(bridge_name_first,3,1)) + (substr(names(i),4,1)
                 = substr(bridge_name_first,4,1)) ) > 2;
MPRINT(GENDER):  *1. first_name exact match;
MPRINT(GENDER):  if names(i) = bridge_name_first and (missing(chosen_match_level) or
                 chosen_match_level > 1) then do;
MPRINT(GENDER):  temp_match_level = 1;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  spedis_score=spedis(names(i),bridge_name_first);
MPRINT(GENDER):  end;
MPRINT(GENDER):  *alternative approach;
MPRINT(GENDER):  *2. spedis partial match score sufficient;
MPRINT(GENDER):  else if (missing(chosen_match_level) or chosen_match_level > 1) then do;
MPRINT(GENDER):  spedis_score=spedis(names(i),bridge_name_first);
MPRINT(GENDER):  if spedis_score < 35 and (spedis_score < chosen_spedis_score or
                 missing(chosen_spedis_score)) then do;
MPRINT(GENDER):  temp_match_level = 2;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  end;
MPRINT(GENDER):  *3. first_name first character match and first_x_of_x_flag (1/1, 2/2, 2/3, 3/4)
                 with spedis tiebreaker;
MPRINT(GENDER):  else if substr(names(i),1,1) = substr(bridge_name_first,1,1) and
                 missing(chosen_match_level) and first_x_of_x_flag then do;
MPRINT(GENDER):  temp_match_level = 3;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  end;
MPRINT(GENDER):  end;
MPRINT(GENDER):  if not(missing(temp_match_level)) then do;
MPRINT(GENDER):  chosen_match_level = temp_match_level;
MPRINT(GENDER):  call missing(temp_match_level);
MPRINT(GENDER):  chosen_spedis_score = spedis_score;
MPRINT(GENDER):  chosen_cac_ind_gender = genders(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_name = names(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_mi = mis(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_last = cac_name_last;
MPRINT(GENDER):  chosen_first_x_of_x_flag=first_x_of_x_flag;
MPRINT(GENDER):  end;
MPRINT(GENDER):  end;
MPRINT(GENDER):  else last_name_match=0;
MPRINT(GENDER):  run;

NOTE: 124690 observations were read from "WORK.bridge_pid_ND"
NOTE: 86586 observations were read from "BASE.base_demo_ND"
NOTE: Data set "WORK.scored_M_ND" has 124666 observation(s) and 21 variable(s)
NOTE: Specifying compression for data set "WORK.scored_M_ND" has decreased its size from 13853
      to 5710 pages (a 59% reduction)
NOTE: The data step took :
      real time : 3.741
      cpu time  : 3.741


MPRINT(GENDER):  proc freq data = scored_M_ND;
MPRINT(GENDER):  table last_name_match*chosen_cac_ind_number / missing;
MPRINT(GENDER):  table chosen_cac_ind_number*chosen_match_level / missing;
MPRINT(GENDER):  run;
NOTE: 124666 observations were read from "WORK.scored_M_ND"
NOTE: Procedure freq step took :
      real time : 0.235
      cpu time  : 0.234


MPRINT(GENDER):  title "match_level 2";
MPRINT(GENDER):  proc freq data = scored_M_ND (where=(chosen_match_level=2));
MPRINT(GENDER):  table chosen_spedis_score / missing;
MPRINT(GENDER):  run;
NOTE: 3955 observations were read from "WORK.scored_M_ND"
NOTE: Procedure freq step took :
      real time : 0.092
      cpu time  : 0.092


MPRINT(GENDER):  title "match_level 3";
MPRINT(GENDER):  proc freq data = scored_M_ND (where=(chosen_match_level=3));
MPRINT(GENDER):  table chosen_spedis_score / missing;
MPRINT(GENDER):  run;
NOTE: 463 observations were read from "WORK.scored_M_ND"
NOTE: Procedure freq step took :
      real time : 0.088
      cpu time  : 0.088


MPRINT(GENDER):  title "";
MPRINT(COVERAGE):  ;
MPRINT(GENDER):  data scored_F_ND (keep=cac_name_last cac_hh_pid cac_bridge_md5email_id chosen:
                 bridge: last_name_match);
MPRINT(GENDER):  merge bridge_pid_ND (in=a) base.base_demo_ND (in=b obs=max keep=cac_name_last
                 cac_ind: cac_hh_pid cac_em_flag where=(substr(cac_em_flag,1,1)='1'));
MPRINT(GENDER):  by cac_hh_pid;
MPRINT(GENDER):  if a and b;
MPRINT(GENDER):  format chosen_cac_ind_gender chosen_cac_ind_number chosen_spedis_score 8.
                 chosen_match_level chosen_first_x_of_x_flag 8. chosen_cac_ind_name $14.
                 chosen_cac_ind_mi $1. chosen_cac_ind_last $20.;
MPRINT(GENDER):  array genders cac_ind1_gender cac_ind2_gender cac_ind3_gender cac_ind4_gender
                 cac_ind5_gender;
MPRINT(GENDER):  array names cac_ind1_name cac_ind2_name cac_ind3_name cac_ind4_name
                 cac_ind5_name;
MPRINT(GENDER):  array mis cac_ind1_mi cac_ind2_mi cac_ind3_mi cac_ind4_mi cac_ind5_mi;
MPRINT(GENDER):  if not(missing(cac_ind5_name)) then count=5;
MPRINT(GENDER):  else if not(missing(cac_ind4_name)) then count=4;
MPRINT(GENDER):  else if not(missing(cac_ind3_name)) then count=3;
MPRINT(GENDER):  else if not(missing(cac_ind2_name)) then count=2;
MPRINT(GENDER):  else if not(missing(cac_ind1_name)) then count=1;
MPRINT(GENDER):  else delete;
MPRINT(GENDER):  *No indiv_demo names have spaces in them, despite some of them being made of
                 multiple words (maryjo);
MPRINT(GENDER):  *I recommend trying to match a single word of the bridge name to the indiv name
                 first followed by the full name with spaces removed;
MPRINT(GENDER):  *This is not implemented yet;
MPRINT(GENDER):  *Since we do not have mkey on the bridge_pid_xx datasets, we need to figure out
                 if the last name even matched on the first individual at all.;
MPRINT(GENDER):  *Last name is the same for all individuals, so we will approximate mkey1-4
                 matching by using exact/fuzzy last name matching;
MPRINT(GENDER):  *No individuals in IL were under 18, so we are safe contacting any individual;
MPRINT(GENDER):  *individual number gets priority;
MPRINT(GENDER):  *taking the first person for a given gender, even if the gender is inferred
                 from the first individual;
MPRINT(GENDER):  *Matching order;
MPRINT(GENDER):  *0. determine if last name matches exact or at least fuzzy (equivalent to
                 mkey1-4 assuming address must have matched);
MPRINT(GENDER):  *0.5 process separately by gender to determine male match and female match for
                 each bridge ID (deduped at individual level so no one is both genders);
MPRINT(GENDER):  *1. first_name exact match;
MPRINT(GENDER):  *2. spedis partial match score sufficient;
MPRINT(GENDER):  *3. first_name first character match and first_x_of_x_flag (1/1, 2/2, 2/3, 3/4)
                 with spedis tiebreaker;
MPRINT(GENDER):  *0. determine if last name matches exact or at least fuzzy (equivalent to
                 mkey1-4 assuming address must have matched);
MPRINT(GENDER):  bridge_name_last=upcase(strip(bridge_name_last));
MPRINT(GENDER):  bridge_name_first=upcase(strip(bridge_name_first));
MPRINT(GENDER):  cac_indiv_last_exact=compress(cac_name_last,'!');
MPRINT(GENDER):  cac_indiv_last_fuzzy1=soundex(compress(cac_name_last,'!'));
MPRINT(GENDER):  bridge_name_last_exact=compress(bridge_name_last,'!');
MPRINT(GENDER):  bridge_name_last_fuzzy1=soundex(compress(bridge_name_last,'!'));
MPRINT(GENDER):  if bridge_name_last_exact = cac_indiv_last_exact or cac_indiv_last_fuzzy1 =
                 bridge_name_last_fuzzy1 then do i = 1 to count;
MPRINT(GENDER):  last_name_match=1;
MPRINT(GENDER):  if missing(genders(i)) then genders(i) = cac_ind1_gender;
MPRINT(GENDER):  *process next person if gender mismatch;
MPRINT(GENDER):  if genders(i) = 1 or missing(genders(i)) then continue;
MPRINT(GENDER):  min_length = min(length(names(i)),length(bridge_name_first));
MPRINT(GENDER):  if min_length = 1 then first_x_of_x_flag = (substr(names(i),1,1) =
                 substr(bridge_name_first,1,1));
MPRINT(GENDER):  else if min_length = 2 then first_x_of_x_flag = (substr(names(i),1,2) =
                 substr(bridge_name_first,1,2));
MPRINT(GENDER):  else if min_length = 3 then first_x_of_x_flag = ((substr(names(i),1,1) =
                 substr(bridge_name_first,1,1)) + (substr(names(i),2,1) =
                 substr(bridge_name_first,2,1)) + (substr(names(i),3,1) =
                 substr(bridge_name_first,3,1)) ) > 1;
MPRINT(GENDER):  else first_x_of_x_flag = ( (substr(names(i),1,1) = substr(bridge_name_first,1,
                 1)) + (substr(names(i),2,1) = substr(bridge_name_first,2,1)) +
                 (substr(names(i),3,1) = substr(bridge_name_first,3,1)) + (substr(names(i),4,1)
                 = substr(bridge_name_first,4,1)) ) > 2;
MPRINT(GENDER):  *1. first_name exact match;
MPRINT(GENDER):  if names(i) = bridge_name_first and (missing(chosen_match_level) or
                 chosen_match_level > 1) then do;
MPRINT(GENDER):  temp_match_level = 1;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  spedis_score=spedis(names(i),bridge_name_first);
MPRINT(GENDER):  end;
MPRINT(GENDER):  *alternative approach;
MPRINT(GENDER):  *2. spedis partial match score sufficient;
MPRINT(GENDER):  else if (missing(chosen_match_level) or chosen_match_level > 1) then do;
MPRINT(GENDER):  spedis_score=spedis(names(i),bridge_name_first);
MPRINT(GENDER):  if spedis_score < 35 and (spedis_score < chosen_spedis_score or
                 missing(chosen_spedis_score)) then do;
MPRINT(GENDER):  temp_match_level = 2;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  end;
MPRINT(GENDER):  *3. first_name first character match and first_x_of_x_flag (1/1, 2/2, 2/3, 3/4)
                 with spedis tiebreaker;
MPRINT(GENDER):  else if substr(names(i),1,1) = substr(bridge_name_first,1,1) and
                 missing(chosen_match_level) and first_x_of_x_flag then do;
MPRINT(GENDER):  temp_match_level = 3;
MPRINT(GENDER):  chosen_cac_ind_number = i;
MPRINT(GENDER):  end;
MPRINT(GENDER):  end;
MPRINT(GENDER):  if not(missing(temp_match_level)) then do;
MPRINT(GENDER):  chosen_match_level = temp_match_level;
MPRINT(GENDER):  call missing(temp_match_level);
MPRINT(GENDER):  chosen_spedis_score = spedis_score;
MPRINT(GENDER):  chosen_cac_ind_gender = genders(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_name = names(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_mi = mis(chosen_cac_ind_number);
MPRINT(GENDER):  chosen_cac_ind_last = cac_name_last;
MPRINT(GENDER):  chosen_first_x_of_x_flag=first_x_of_x_flag;
MPRINT(GENDER):  end;
MPRINT(GENDER):  end;
MPRINT(GENDER):  else last_name_match=0;
MPRINT(GENDER):  run;

NOTE: 124690 observations were read from "WORK.bridge_pid_ND"
NOTE: 86586 observations were read from "BASE.base_demo_ND"
NOTE: Data set "WORK.scored_F_ND" has 124666 observation(s) and 21 variable(s)
NOTE: Specifying compression for data set "WORK.scored_F_ND" has decreased its size from 13853
      to 5710 pages (a 59% reduction)
NOTE: The data step took :
      real time : 3.899
      cpu time  : 3.900


MPRINT(GENDER):  proc freq data = scored_F_ND;
MPRINT(GENDER):  table last_name_match*chosen_cac_ind_number / missing;
MPRINT(GENDER):  table chosen_cac_ind_number*chosen_match_level / missing;
MPRINT(GENDER):  run;
NOTE: 124666 observations were read from "WORK.scored_F_ND"
NOTE: Procedure freq step took :
      real time : 0.231
      cpu time  : 0.230


MPRINT(GENDER):  title "match_level 2";
MPRINT(GENDER):  proc freq data = scored_F_ND (where=(chosen_match_level=2));
MPRINT(GENDER):  table chosen_spedis_score / missing;
MPRINT(GENDER):  run;
NOTE: 3185 observations were read from "WORK.scored_F_ND"
NOTE: Procedure freq step took :
      real time : 0.090
      cpu time  : 0.089


MPRINT(GENDER):  title "match_level 3";
MPRINT(GENDER):  proc freq data = scored_F_ND (where=(chosen_match_level=3));
MPRINT(GENDER):  table chosen_spedis_score / missing;
MPRINT(GENDER):  run;
NOTE: 701 observations were read from "WORK.scored_F_ND"
NOTE: Procedure freq step took :
      real time : 0.088
      cpu time  : 0.088


MPRINT(GENDER):  title "";
MPRINT(COVERAGE):  ;
MPRINT(COVERAGE):  data scored__ND;
MPRINT(COVERAGE):  set scored_M_ND (where=(not(missing(chosen_cac_ind_number)))) scored_F_ND
                   (where=(not(missing(chosen_cac_ind_number))));
MPRINT(COVERAGE):  run;

NOTE: 26510 observations were read from "WORK.scored_M_ND"
NOTE: 29922 observations were read from "WORK.scored_F_ND"
NOTE: Data set "WORK.scored__ND" has 56432 observation(s) and 21 variable(s)
NOTE: Specifying compression for data set "WORK.scored__ND" has decreased its size from 6272 to
      2690 pages (a 58% reduction)
NOTE: The data step took :
      real time : 0.353
      cpu time  : 0.353


MPRINT(COVERAGE):  *^^^^^^^^^^^^^^^^^^^MACRO18^^^^^^^^^^^^^^^^^^^^*;
MPRINT(COVERAGE):  *****QC;
MPRINT(COVERAGE):  *^^^^^^^^^^^^^^^^^^^END MACRO18^^^^^^^^^^^^^^^^^^^^*;
MPRINT(QC):  options ps=55 ls=120;
NOTE: QUALITY CONTROL TABLE VERSION 4.10.
MPRINT(QC):  options nonotes missing=' ';
MPRINT(QC):  *^^^^^^^^^^^^^^^^^^^MACRO2.1^^^^^^^^^^^^^^^^^^^^*;
MPRINT(QC):  *****NOBS;
MPRINT(QC):  **********************************************************************;
MPRINT(QC):  ** Arguments are: ***;
MPRINT(QC):  ** DATA - Name of dataset ***;
MPRINT(QC):  **********************************************************************;
MPRINT(QC):  *^^^^^^^^^^^^^^^^^^^END MACRO2.1^^^^^^^^^^^^^^^^^^^^*;
MPRINT(NOBS):  data _null_;
MPRINT(NOBS):  ds = open("scored__ND");
MPRINT(NOBS):  name = dsname(ds);
MPRINT(NOBS):  library = scan(name, 1, '.');
MPRINT(NOBS):  member = scan(name, 2, '.');
MPRINT(NOBS):  type = scan(name, 3, '.');
MPRINT(NOBS):  nobs = attrn(ds,"nobs");
MPRINT(NOBS):  ds = close(ds);
MPRINT(NOBS):  call symput("LIBRARY", trim(library));
MPRINT(NOBS):  call symput("MEMBER", trim(member));
MPRINT(NOBS):  call symput("NOBS",trim(left(put(nobs,20.0))));
MPRINT(NOBS):  run;
MPRINT(QC):  ;
MPRINT(QC):  *^^^^^^^^^^^^^^^^^^^MACRO6^^^^^^^^^^^^^^^^^^^^*;
MPRINT(QC):  *****VLIST;
MPRINT(QC):  *^^^^^^^^^^^^^^^^^^^END MACRO6^^^^^^^^^^^^^^^^^^^^*;
MPRINT(VLIST):  run;
NOTE: VARIABLE LIST MACRO 1.01.
MPRINT(VLIST):  options nonotes;
MPRINT(VLIST):  proc contents data=scored__ND(keep=_all_) out=contents(keep=name type length
                label format formatl formatd) noprint;
MPRINT(VLIST):  run;
MPRINT(VLIST):  proc sort;
MPRINT(VLIST):  by name;
MPRINT(VLIST):  run;
MPRINT(VLIST):  filename vlist temp;
MPRINT(VLIST):  data _null_;
MPRINT(VLIST):  set contents;
MPRINT(VLIST):  file vlist;
MPRINT(VLIST):  put '%let v_list=&v_list ' name ';';
MPRINT(VLIST):  put '%let v_len=&v_len ' length ';';
MPRINT(VLIST):  put '%let v_cnt=%eval(&v_cnt + 1);';
MPRINT(VLIST):  if type EQ 1 then do;
MPRINT(VLIST):  put '%let v_type=&v_type N;';
MPRINT(VLIST):  put '%let n_list=&n_list ' name ';';
MPRINT(VLIST):  put '%let n_len=&n_len ' length ';';
MPRINT(VLIST):  put '%let n_cnt=%eval(&n_cnt + 1);';
MPRINT(VLIST):  end;
MPRINT(VLIST):  else if type EQ 2 then do;
MPRINT(VLIST):  put '%let v_type=&v_type C;';
MPRINT(VLIST):  put '%let c_list=&c_list ' name ';';
MPRINT(VLIST):  put '%let c_len=&c_len ' length ';';
MPRINT(VLIST):  put '%let c_cnt=%eval(&c_cnt + 1);';
MPRINT(VLIST):  end;
MPRINT(VLIST):  run;
MPRINT(VLIST):  filename vlist clear;
MPRINT(VLIST):  option NONOTES;
MPRINT(VLIST):  DATA _NULL_;
MPRINT(VLIST):  put "n_list=chosen_cac_ind_gender chosen_cac_ind_number chosen_first_x_of_x_flag
                chosen_match_level chosen_spedis_score last_name_match";
MPRINT(VLIST):  put "n_len=8 8 8 8 8 8";
MPRINT(VLIST):  put "n_cnt=6";
MPRINT(VLIST):  put;
MPRINT(VLIST):  put "c_lst=CAC_HH_PID CAC_NAME_LAST bridge_address1 bridge_address2 bridge_city
                bridge_name_first bridge_name_last bridge_name_last_exact
                bridge_name_last_fuzzy1 bridge_state bridge_zip5 cac_bridge_md5email_id
                chosen_cac_ind_last chosen_cac_ind_mi chosen_cac_ind_name";
MPRINT(VLIST):  put "c_len=27 20 50 50 30 25 25 25 25 2 5 50 20 1 14";
MPRINT(VLIST):  put "c_cnt=15";
MPRINT(VLIST):  run;
n_list=chosen_cac_ind_gender chosen_cac_ind_number chosen_first_x_of_x_flag chosen_match_level c
hosen_spedis_score last_name_match
n_len=8 8 8 8 8 8
n_cnt=6

c_lst=CAC_HH_PID CAC_NAME_LAST bridge_address1 bridge_address2 bridge_city bridge_name_first bri
dge_name_last bridge_name_last_exact bridge_name_last_fuzzy1 bridge_state bridge_zip5 cac_bridge
_md5email_id chosen_cac_ind_last chosen_cac_ind_mi chosen_cac_ind_name
c_len=27 20 50 50 30 25 25 25 25 2 5 50 20 1 14
c_cnt=15
MPRINT(QC):  ;
MPRINT(QC):  proc univariate noprint data=scored__ND;
MPRINT(QC):  var chosen_cac_ind_gender chosen_cac_ind_number chosen_first_x_of_x_flag
             chosen_match_level chosen_spedis_score last_name_match;
MPRINT(QC):  output out=out1 mean= mean1 - mean6 n= nobs1 - nobs6 nmiss= nmis1 - nmis6 std= std1
             - std16 median= med1 - med6 min= min1 - min6 max= max1 - max6 ;
MPRINT(QC):  run;
MPRINT(QC):  data out1;
MPRINT(QC):  set out1;
MPRINT(QC):  length name $50;
MPRINT(QC):  name = "chosen_cac_ind_gender";
MPRINT(QC):  nobs = nobs1;
MPRINT(QC):  nmiss = nmis1;
MPRINT(QC):  mean = mean1;
MPRINT(QC):  std = std1;
MPRINT(QC):  med = med1;
MPRINT(QC):  min = min1;
MPRINT(QC):  max = max1;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  name = "chosen_cac_ind_number";
MPRINT(QC):  nobs = nobs2;
MPRINT(QC):  nmiss = nmis2;
MPRINT(QC):  mean = mean2;
MPRINT(QC):  std = std2;
MPRINT(QC):  med = med2;
MPRINT(QC):  min = min2;
MPRINT(QC):  max = max2;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  name = "chosen_first_x_of_x_flag";
MPRINT(QC):  nobs = nobs3;
MPRINT(QC):  nmiss = nmis3;
MPRINT(QC):  mean = mean3;
MPRINT(QC):  std = std3;
MPRINT(QC):  med = med3;
MPRINT(QC):  min = min3;
MPRINT(QC):  max = max3;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  name = "chosen_match_level";
MPRINT(QC):  nobs = nobs4;
MPRINT(QC):  nmiss = nmis4;
MPRINT(QC):  mean = mean4;
MPRINT(QC):  std = std4;
MPRINT(QC):  med = med4;
MPRINT(QC):  min = min4;
MPRINT(QC):  max = max4;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  name = "chosen_spedis_score";
MPRINT(QC):  nobs = nobs5;
MPRINT(QC):  nmiss = nmis5;
MPRINT(QC):  mean = mean5;
MPRINT(QC):  std = std5;
MPRINT(QC):  med = med5;
MPRINT(QC):  min = min5;
MPRINT(QC):  max = max5;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  name = "last_name_match";
MPRINT(QC):  nobs = nobs6;
MPRINT(QC):  nmiss = nmis6;
MPRINT(QC):  mean = mean6;
MPRINT(QC):  std = std6;
MPRINT(QC):  med = med6;
MPRINT(QC):  min = min6;
MPRINT(QC):  max = max6;
MPRINT(QC):  output;
MPRINT(QC):  keep name nobs nmiss mean std med min max;
MPRINT(QC):  run;
MPRINT(QC):  data contents;
MPRINT(QC):  length format $50;
MPRINT(QC):  length name $50;
MPRINT(QC):  format name $50. ;
MPRINT(QC):  informat name $50. ;
MPRINT(QC):  merge contents out1;
MPRINT(QC):  by name;
WARNING: BY variable name has differing lengths in the input datasets. This may have unexpected
         effects on the results.
MPRINT(QC):  if formatl GT 0 then format = trim(format) || trim(left(put(formatl,3.0)));
MPRINT(QC):  if formatd GT 0 then format = trim(format) || '.' || trim(left(put(formatd,3.0)));
MPRINT(QC):  format = left(format);
MPRINT(QC):  drop formatl formatd;
MPRINT(QC):  run;
MPRINT(QC):  data out2(keep=name levels nzero nmiss nobs nneg num isint) out3(keep=name label
             nobs);
MPRINT(QC):  length name $50;
MPRINT(QC):  format name $50.;
MPRINT(QC):  informat name $50.;
MPRINT(QC):  length label $50;
MPRINT(QC):  length nzero nmiss nobs 8;
MPRINT(QC):  set scored__ND end=eof nobs=cnobs;
MPRINT(QC):  array ndata(6) chosen_cac_ind_gender chosen_cac_ind_number chosen_first_x_of_x_flag
             chosen_match_level chosen_spedis_score last_name_match;
MPRINT(QC):  array nlevels(6) _temporary_;
MPRINT(QC):  array nzeros(6) _temporary_;
MPRINT(QC):  array nnegs(6) _temporary_;
MPRINT(QC):  array nnonmiss(6) _temporary_;
MPRINT(QC):  array nvalues(6, 50) _temporary_;
MPRINT(QC):  array nfreq(6, 50) _temporary_;
MPRINT(QC):  array nisint(6) _temporary_;
MPRINT(QC):  if _n_ EQ 1 then do;
MPRINT(QC):  do _i = 1 to 6;
MPRINT(QC):  nlevels(_i) = 0;
MPRINT(QC):  nzeros(_i) = 0;
MPRINT(QC):  nnegs(_i) = 0;
MPRINT(QC):  nnonmiss(_i) = 0;
MPRINT(QC):  nisint(_i) = 1;
MPRINT(QC):  do _j = 1 to 50;
MPRINT(QC):  nfreq(_i, _j) = 0;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  do _i = 1 to 6;
MPRINT(QC):  if ndata(_i) NE . then do;
MPRINT(QC):  nnonmiss(_i) = nnonmiss(_i) + 1;
MPRINT(QC):  if ndata(_i) EQ 0 then nzeros(_i) = nzeros(_i) + 1;
MPRINT(QC):  if ndata(_i) LT 0 then nnegs(_i) = nnegs(_i) + 1;
MPRINT(QC):  if nlevels(_i) LT 50 then do;
MPRINT(QC):  do _j = 1 to nlevels(_i);
MPRINT(QC):  if ndata(_i) EQ nvalues(_i, _j) then do;
MPRINT(QC):  nfreq(_i, _j)= nfreq(_i, _j) + 1;
MPRINT(QC):  goto nmatch;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  nlevels(_i) = _j;
MPRINT(QC):  nvalues(_i, _j) = ndata(_i);
MPRINT(QC):  nfreq(_i, _j) = 1;
MPRINT(QC):  nmatch: end;
MPRINT(QC):  if int(ndata(_i)) NE ndata(_i) then nisint(_i) = 0;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  if eof EQ 1 then do;
MPRINT(QC):  length name $50;
MPRINT(QC):  format name $50.;
MPRINT(QC):  informat name $50.;
MPRINT(QC):  name = "chosen_cac_ind_gender";
MPRINT(QC):  levels = nlevels(1);
MPRINT(QC):  nzero = nzeros(1);
MPRINT(QC):  nneg = nnegs(1);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(1);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(1, 1) IN (0,1) and nvalues(1, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(1);
MPRINT(QC):  nobs = nfreq(1, _j);
MPRINT(QC):  label = "Value " || put(nvalues(1, _j), best8.) || "  " || put(nfreq(1, _j) /
             nnonmiss(1), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_cac_ind_number";
MPRINT(QC):  levels = nlevels(2);
MPRINT(QC):  nzero = nzeros(2);
MPRINT(QC):  nneg = nnegs(2);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(2);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(2, 1) IN (0,1) and nvalues(2, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(2);
MPRINT(QC):  nobs = nfreq(2, _j);
MPRINT(QC):  label = "Value " || put(nvalues(2, _j), best8.) || "  " || put(nfreq(2, _j) /
             nnonmiss(2), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_first_x_of_x_flag";
MPRINT(QC):  levels = nlevels(3);
MPRINT(QC):  nzero = nzeros(3);
MPRINT(QC):  nneg = nnegs(3);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(3);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(3, 1) IN (0,1) and nvalues(3, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(3);
MPRINT(QC):  nobs = nfreq(3, _j);
MPRINT(QC):  label = "Value " || put(nvalues(3, _j), best8.) || "  " || put(nfreq(3, _j) /
             nnonmiss(3), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_match_level";
MPRINT(QC):  levels = nlevels(4);
MPRINT(QC):  nzero = nzeros(4);
MPRINT(QC):  nneg = nnegs(4);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(4);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(4, 1) IN (0,1) and nvalues(4, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(4);
MPRINT(QC):  nobs = nfreq(4, _j);
MPRINT(QC):  label = "Value " || put(nvalues(4, _j), best8.) || "  " || put(nfreq(4, _j) /
             nnonmiss(4), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_spedis_score";
MPRINT(QC):  levels = nlevels(5);
MPRINT(QC):  nzero = nzeros(5);
MPRINT(QC):  nneg = nnegs(5);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(5);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(5, 1) IN (0,1) and nvalues(5, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(5);
MPRINT(QC):  nobs = nfreq(5, _j);
MPRINT(QC):  label = "Value " || put(nvalues(5, _j), best8.) || "  " || put(nfreq(5, _j) /
             nnonmiss(5), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "last_name_match";
MPRINT(QC):  levels = nlevels(6);
MPRINT(QC):  nzero = nzeros(6);
MPRINT(QC):  nneg = nnegs(6);
MPRINT(QC):  nmiss = .;
MPRINT(QC):  nobs = .;
MPRINT(QC):  num = 0;
MPRINT(QC):  isint = nisint(6);
MPRINT(QC):  output out2;
MPRINT(QC):  if levels EQ 2 and nvalues(6, 1) IN (0,1) and nvalues(6, 2) IN (0,1) then ;
MPRINT(QC):  else if levels LE 10 then do _j = 1 to nlevels(6);
MPRINT(QC):  nobs = nfreq(6, _j);
MPRINT(QC):  label = "Value " || put(nvalues(6, _j), best8.) || "  " || put(nfreq(6, _j) /
             nnonmiss(6), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  array cdata(15) CAC_HH_PID CAC_NAME_LAST bridge_address1 bridge_address2
             bridge_city bridge_name_first bridge_name_last bridge_name_last_exact
             bridge_name_last_fuzzy1 bridge_state bridge_zip5 cac_bridge_md5email_id
             chosen_cac_ind_last chosen_cac_ind_mi chosen_cac_ind_name;
MPRINT(QC):  array clevels(15) _temporary_;
WARNING: An array has been declared with the same name as a built-in or user-defined function.
         References to cmiss() will refer to the array definition, not the function call.
MPRINT(QC):  array cmiss(15) _temporary_;
MPRINT(QC):  array cnonmiss(15) _temporary_;
MPRINT(QC):  array cvalues(15, 50) $200 _temporary_;
MPRINT(QC):  array cfreq(15, 50) _temporary_;
MPRINT(QC):  array cnum(15) _temporary_;
MPRINT(QC):  if _n_ EQ 1 then do;
MPRINT(QC):  do _i = 1 to 15;
MPRINT(QC):  clevels(_i) = 0;
MPRINT(QC):  cmiss(_i) = 0;
MPRINT(QC):  cnonmiss(_i) = 0;
MPRINT(QC):  cnum(_i) = 1;
MPRINT(QC):  do _j = 1 to 50;
MPRINT(QC):  cfreq(_i, _j) = 0;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  do _i = 1 to 15;
MPRINT(QC):  if cdata(_i) EQ "" then cmiss(_i) = cmiss(_i) + 1;
MPRINT(QC):  else do;
MPRINT(QC):  cnonmiss(_i) = cnonmiss(_i) + 1;
MPRINT(QC):  if clevels(_i) LT 50 then do;
MPRINT(QC):  do _j = 1 to clevels(_i);
MPRINT(QC):  if cdata(_i) EQ cvalues(_i, _j) then do;
MPRINT(QC):  cfreq(_i, _j) = cfreq(_i, _j) + 1;
MPRINT(QC):  goto cmatch;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  clevels(_i) = _j;
MPRINT(QC):  cvalues(_i, _j) = cdata(_i);
MPRINT(QC):  cfreq(_i, _j) = 1;
MPRINT(QC):  cmatch: end;
MPRINT(QC):  if input(cdata(_i), ?? 20.0) EQ . then cnum(_i) = 0;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  if eof EQ 1 then do;
MPRINT(QC):  length name $50;
MPRINT(QC):  format name $50.;
MPRINT(QC):  informat name $50.;
MPRINT(QC):  name = "CAC_HH_PID";
MPRINT(QC):  levels = clevels(1);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(1);
MPRINT(QC):  nobs = cnonmiss(1);
MPRINT(QC):  num = cnum(1);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(1);
MPRINT(QC):  nobs = cfreq(1, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(1, _j)) || "  " || put(cfreq(1, _j) / cnonmiss(1),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "CAC_NAME_LAST";
MPRINT(QC):  levels = clevels(2);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(2);
MPRINT(QC):  nobs = cnonmiss(2);
MPRINT(QC):  num = cnum(2);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(2);
MPRINT(QC):  nobs = cfreq(2, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(2, _j)) || "  " || put(cfreq(2, _j) / cnonmiss(2),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_address1";
MPRINT(QC):  levels = clevels(3);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(3);
MPRINT(QC):  nobs = cnonmiss(3);
MPRINT(QC):  num = cnum(3);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(3);
MPRINT(QC):  nobs = cfreq(3, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(3, _j)) || "  " || put(cfreq(3, _j) / cnonmiss(3),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_address2";
MPRINT(QC):  levels = clevels(4);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(4);
MPRINT(QC):  nobs = cnonmiss(4);
MPRINT(QC):  num = cnum(4);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(4);
MPRINT(QC):  nobs = cfreq(4, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(4, _j)) || "  " || put(cfreq(4, _j) / cnonmiss(4),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_city";
MPRINT(QC):  levels = clevels(5);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(5);
MPRINT(QC):  nobs = cnonmiss(5);
MPRINT(QC):  num = cnum(5);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(5);
MPRINT(QC):  nobs = cfreq(5, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(5, _j)) || "  " || put(cfreq(5, _j) / cnonmiss(5),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_name_first";
MPRINT(QC):  levels = clevels(6);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(6);
MPRINT(QC):  nobs = cnonmiss(6);
MPRINT(QC):  num = cnum(6);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(6);
MPRINT(QC):  nobs = cfreq(6, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(6, _j)) || "  " || put(cfreq(6, _j) / cnonmiss(6),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_name_last";
MPRINT(QC):  levels = clevels(7);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(7);
MPRINT(QC):  nobs = cnonmiss(7);
MPRINT(QC):  num = cnum(7);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(7);
MPRINT(QC):  nobs = cfreq(7, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(7, _j)) || "  " || put(cfreq(7, _j) / cnonmiss(7),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_name_last_exact";
MPRINT(QC):  levels = clevels(8);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(8);
MPRINT(QC):  nobs = cnonmiss(8);
MPRINT(QC):  num = cnum(8);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(8);
MPRINT(QC):  nobs = cfreq(8, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(8, _j)) || "  " || put(cfreq(8, _j) / cnonmiss(8),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_name_last_fuzzy1";
MPRINT(QC):  levels = clevels(9);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(9);
MPRINT(QC):  nobs = cnonmiss(9);
MPRINT(QC):  num = cnum(9);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(9);
MPRINT(QC):  nobs = cfreq(9, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(9, _j)) || "  " || put(cfreq(9, _j) / cnonmiss(9),
             percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_state";
MPRINT(QC):  levels = clevels(10);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(10);
MPRINT(QC):  nobs = cnonmiss(10);
MPRINT(QC):  num = cnum(10);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(10);
MPRINT(QC):  nobs = cfreq(10, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(10, _j)) || "  " || put(cfreq(10, _j) /
             cnonmiss(10), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "bridge_zip5";
MPRINT(QC):  levels = clevels(11);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(11);
MPRINT(QC):  nobs = cnonmiss(11);
MPRINT(QC):  num = cnum(11);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(11);
MPRINT(QC):  nobs = cfreq(11, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(11, _j)) || "  " || put(cfreq(11, _j) /
             cnonmiss(11), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "cac_bridge_md5email_id";
MPRINT(QC):  levels = clevels(12);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(12);
MPRINT(QC):  nobs = cnonmiss(12);
MPRINT(QC):  num = cnum(12);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(12);
MPRINT(QC):  nobs = cfreq(12, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(12, _j)) || "  " || put(cfreq(12, _j) /
             cnonmiss(12), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_cac_ind_last";
MPRINT(QC):  levels = clevels(13);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(13);
MPRINT(QC):  nobs = cnonmiss(13);
MPRINT(QC):  num = cnum(13);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(13);
MPRINT(QC):  nobs = cfreq(13, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(13, _j)) || "  " || put(cfreq(13, _j) /
             cnonmiss(13), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_cac_ind_mi";
MPRINT(QC):  levels = clevels(14);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(14);
MPRINT(QC):  nobs = cnonmiss(14);
MPRINT(QC):  num = cnum(14);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(14);
MPRINT(QC):  nobs = cfreq(14, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(14, _j)) || "  " || put(cfreq(14, _j) /
             cnonmiss(14), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  name = "chosen_cac_ind_name";
MPRINT(QC):  levels = clevels(15);
MPRINT(QC):  nzero = .;
MPRINT(QC):  nneg = .;
MPRINT(QC):  nmiss = cmiss(15);
MPRINT(QC):  nobs = cnonmiss(15);
MPRINT(QC):  num = cnum(15);
MPRINT(QC):  isint = 0;
MPRINT(QC):  output out2;
MPRINT(QC):  if levels LE 10 then do _j = 1 to clevels(15);
MPRINT(QC):  nobs = cfreq(15, _j);
MPRINT(QC):  label = "Value " || trim(cvalues(15, _j)) || "  " || put(cfreq(15, _j) /
             cnonmiss(15), percent7.1);
MPRINT(QC):  output out3;
MPRINT(QC):  end;
MPRINT(QC):  end;
MPRINT(QC):  run;
MPRINT(QC):  proc sort data=out2;
MPRINT(QC):  by name;
MPRINT(QC):  run;
MPRINT(QC):  data contents;
MPRINT(QC):  length name $50 ;
MPRINT(QC):  format name $50.;
MPRINT(QC):  informat name $50.;
MPRINT(QC):  update contents out2;
MPRINT(QC):  by name;
MPRINT(QC):  attrib numchar length=$9 label="Numeric Character";
MPRINT(QC):  if type EQ 1 then numchar = "Numeric  ";
MPRINT(QC):  else if type EQ 2 then numchar = "Character";
MPRINT(QC):  length vartype $25;
MPRINT(QC):  if format IN ('DATE','YYMMDD','DDMMYY','MMDDYY','MONYY','YYQ') then vartype =
             "DATE";
MPRINT(QC):  else if format EQ "DOLLAR" then vartype = "DOLLAR";
MPRINT(QC):  else if type EQ 1 then vartype = "NUMERIC";
MPRINT(QC):  else if type EQ 2 then vartype = "CHARACTER";
MPRINT(QC):  else vartype = "?";
MPRINT(QC):  if levels LE 50 then vartype = trim(vartype) || " LEVELS LE 50";
MPRINT(QC):  else if levels GT 50 then vartype = trim(vartype) || " LEVELS GT 50";
MPRINT(QC):  attrib clevels length=$6 label="Levels" format=$6.;
MPRINT(QC):  if levels EQ . then levels = 0;
MPRINT(QC):  if levels LT 50 then clevels = put(levels, 5.0) || ' ';
MPRINT(QC):  else clevels = put(50, 5.0) || "+";
MPRINT(QC):  if sum(nobs,nmiss) GE 0 then do;
MPRINT(QC):  pctmiss = nmiss / sum(nobs,nmiss);
MPRINT(QC):  if nzero GE 0 then pctzero = nzero / sum(nobs, nmiss);
MPRINT(QC):  if nneg GE 0 then pctneg = nneg / sum(nobs, nmiss);
MPRINT(QC):  end;
MPRINT(QC):  attrib name label="Variable";
MPRINT(QC):  attrib label label="Label";
MPRINT(QC):  attrib nobs label="Number of Observations" format=comma10.;
MPRINT(QC):  attrib nmiss label="Number Missing" format=comma10.0;
MPRINT(QC):  attrib mean label="Mean Value" format=10.4;
MPRINT(QC):  attrib std label="Std Dev" format=10.4;
MPRINT(QC):  attrib med label="Median Value" format=10.4;
MPRINT(QC):  attrib min label="Minimum Value" format=10.4;
MPRINT(QC):  attrib max label="Maximum Value" format=10.4;
MPRINT(QC):  attrib levels label="Levels" format=5.0;
MPRINT(QC):  attrib nzero label="Zero Values" format=comma8.0;
MPRINT(QC):  attrib nneg label="Negative Values" format=comma8.0;
MPRINT(QC):  attrib vartype label="Variable Type";
MPRINT(QC):  attrib pctmiss label="Percent Missing" format=percent8.1;
MPRINT(QC):  attrib pctzero label="Percent Zero" format=percent8.1;
MPRINT(QC):  attrib pctneg label="Percent Negative" format=percent8.1;
MPRINT(QC):  run;
MPRINT(QC):  proc sort data=out3;
MPRINT(QC):  by name label;
MPRINT(QC):  run;
MPRINT(QC):  data contents;
MPRINT(QC):  length name $50 ;
MPRINT(QC):  format name $50.;
MPRINT(QC):  informat name $50.;
MPRINT(QC):  set contents out3;
MPRINT(QC):  by name;
MPRINT(QC):  name2=name;
MPRINT(QC):  output;
MPRINT(QC):  if last.name then do;
MPRINT(QC):  name = '';
MPRINT(QC):  label='';
MPRINT(QC):  numchar='';
MPRINT(QC):  nobs=.;
MPRINT(QC):  nmiss=.;
MPRINT(QC):  mean=.;
MPRINT(QC):  std=.;
MPRINT(QC):  med=.;
MPRINT(QC):  min=.;
MPRINT(QC):  max=.;
MPRINT(QC):  levels=.;
MPRINT(QC):  clevels='';
MPRINT(QC):  nzero=.;
MPRINT(QC):  nneg=.;
MPRINT(QC):  vartype="";
MPRINT(QC):  pctmiss=.;
MPRINT(QC):  pctzero=.;
MPRINT(QC):  pctneg=.;
MPRINT(QC):  format="";
MPRINT(QC):  num=.;
MPRINT(QC):  isint=.;
MPRINT(QC):  output;
MPRINT(QC):  end;
MPRINT(QC):  run;
MPRINT(QC):  data contents;
MPRINT(QC):  set contents;
MPRINT(QC):  by name2;
MPRINT(QC):  if first.name2=0 then name="";
MPRINT(QC):  run;
MPRINT(QC):  title "Prepared for ";
MPRINT(QC):  title2 "";
MPRINT(QC):  title3 "";
MPRINT(QC):  title4 "";
MPRINT(QC):  title2 "Data Quality Report";
MPRINT(QC):  title3 "Library:WORK  Member:scored__ND";
MPRINT(QC):  title4 "Total Observations: 56432";
MPRINT(QC):  options ls=150 ps=62 nodate;
MPRINT(QC):  ods html body = "./qc_report_scored__ND.htm" style=mike;
WARNING: Failed to find style 'mike'; using default style instead.
MPRINT(QC):  proc print data=contents heading=horizontal label split='/';
MPRINT(QC):  id name;
MPRINT(QC):  var label nobs numchar clevels nmiss nzero mean med min max format;
MPRINT(QC):  footnote1 j=c "Prepared by CAC Group, Inc.";
MPRINT(QC):  label nobs ="Number of/Observations" nmiss ="Number/Missing" numchar ="Numeric
             or/Character" mean ="Mean/Value" std ="Standard/Deviation" med ="Median/Value" min
             ="Minimum/Value" max ="Maximum/Value" nzero ="Zero/Values" nneg ="Negative/Values"
             vartype ="Variable/Type" pctmiss ="Percent/Missing" pctzero ="Percent/Zero" pctneg
             ="Percent/Negative" format ="Variable/Format";
MPRINT(QC):  run;
MPRINT(QC):  ods html close;
MPRINT(QC):  data _null_;
MPRINT(QC):  set contents(where=(levels EQ 1));
MPRINT(QC):  file log;
MPRINT(QC):  if _n_ EQ 1 then do;
MPRINT(QC):  put 'WARNING: THE FOLLOWING VARIABLE(S) HAVE ONLY A SINGLE VALUE AND';
MPRINT(QC):  put '         SHOULD BE CONSIDERED FOR DELETION FROM THE DATASET.';
MPRINT(QC):  end;
MPRINT(QC):  put '         drop ' name +(-1) ';' @;
MPRINT(QC):  if label ne '' then put ' /* ' label '*/' @;
MPRINT(QC):  put;
MPRINT(QC):  run;
WARNING: THE FOLLOWING VARIABLE(S) HAVE ONLY A SINGLE VALUE AND
         SHOULD BE CONSIDERED FOR DELETION FROM THE DATASET.
         drop bridge_state; /* Address State From Bridge */
         drop last_name_match;
MPRINT(QC):  data _null_;
MPRINT(QC):  set contents(where=(type EQ 2 and num EQ 1));
MPRINT(QC):  file log;
MPRINT(QC):  if _n_ EQ 1 then do;
MPRINT(QC):  put 'WARNING: THE FOLLOWING VARIABLE(S) ARE CHARACTER BUT CONTAIN';
MPRINT(QC):  put '         NUMERIC DATA AND SHOULD BE CONSIDERED FOR TRANSLATION.';
MPRINT(QC):  end;
MPRINT(QC):  put '         tmp' _n_ '= input(' name +(-1) ', 20.0); drop ' name +(-1) '; rename
             tmp' _n_ +(-1) '=' name +(-1) ';' @;
MPRINT(QC):  if label ne '' then put ' /* ' label '*/' @;
MPRINT(QC):  put;
MPRINT(QC):  run;
WARNING: THE FOLLOWING VARIABLE(S) ARE CHARACTER BUT CONTAIN
         NUMERIC DATA AND SHOULD BE CONSIDERED FOR TRANSLATION.
         tmp1 = input(bridge_address2, 20.0); drop bridge_address2; rename tmp1=bridge_address2;
 /* Address Line 2 From Bridge */
         tmp2 = input(bridge_zip5, 20.0); drop bridge_zip5; rename tmp2=bridge_zip5; /* 
Address Zip 5 From Bridge */
MPRINT(QC):  data _null_;
MPRINT(QC):  set contents(where=(type EQ 1 and isint EQ 1 and length EQ 8));
MPRINT(QC):  if min GE -8192 and max LE 8192 then len = 3;
MPRINT(QC):  else if min GE -2097152 and max LE 2097152 then len = 4;
MPRINT(QC):  else if min GE -536870912 and max LE 536870912 then len = 5;
MPRINT(QC):  else if min GE -137438953472 and max LE 137438953472 then len = 6;
MPRINT(QC):  else if min GE -35184372088832 and max LE 35184372088832 then len = 7;
MPRINT(QC):  else len = 8;
MPRINT(QC):  file log;
MPRINT(QC):  if len NE 8 then do;
MPRINT(QC):  retain bad 0;
MPRINT(QC):  bad = bad + 1;
MPRINT(QC):  if bad EQ 1 then do;
MPRINT(QC):  put 'WARNING: THE LENGTH OF THE FOLLOWING VARIABLE(S) CAN BE SET';
MPRINT(QC):  put '         WITHOUT ANY LOSS OF PRECISION.';
MPRINT(QC):  end;
MPRINT(QC):  put '         length ' name len +(-1) ';' @;
MPRINT(QC):  put ' /* ' @;
MPRINT(QC):  if label NE ' ' then put label @;
MPRINT(QC):  put min '- ' max '*/';
MPRINT(QC):  end;
MPRINT(QC):  run;
WARNING: THE LENGTH OF THE FOLLOWING VARIABLE(S) CAN BE SET
         WITHOUT ANY LOSS OF PRECISION.
         length chosen_cac_ind_gender 3; /* 1.0000 - 2.0000 */
         length chosen_cac_ind_number 3; /* 1.0000 - 5.0000 */
         length chosen_first_x_of_x_flag 3; /* 0.0000 - 1.0000 */
         length chosen_match_level 3; /* 1.0000 - 3.0000 */
         length chosen_spedis_score 3; /* 0.0000 - 450.0000 */
         length last_name_match 3; /* 1.0000 - 1.0000 */
MPRINT(QC):  proc printto log=log;
MPRINT(QC):  run;
MPRINT(QC):  options ls=100;
MPRINT(QC):  options NOTES missing=".";
MPRINT(COVERAGE):  ;
MPRINT(COVERAGE):  data _null_;
MPRINT(COVERAGE):  file outfile dlm=',' dsd lrecl=1000;
MPRINT(COVERAGE):  set scored__ND (obs=max where=(not(missing(chosen_cac_ind_number))));
MPRINT(COVERAGE):  if _n_=1 then put 'cac_hh_pid,cac_bridge_md5email_id,chosen_cac_ind_number,
                   chosen_cac_ind_gender,chosen_cac_ind_name,chosen_cac_ind_mi,
                   chosen_cac_ind_last,' @;
MPRINT(COVERAGE):  if _n_=1 then put 'chosen_spedis_score,chosen_match_level,
                   chosen_first_x_of_x_flag';
MPRINT(COVERAGE):  put cac_hh_pid cac_bridge_md5email_id chosen_cac_ind_number
                   chosen_cac_ind_gender chosen_cac_ind_name chosen_cac_ind_mi
                   chosen_cac_ind_last chosen_spedis_score chosen_match_level
                   chosen_first_x_of_x_flag ;
MPRINT(COVERAGE):  run;

NOTE: The file outfile is:
      File
      Name=/project/CACDIRECT/DATA/DEVELOPMENT/1240_Z2_HH/EXPORT/BRIDGE/bridge_pid_table_ND.csv,
      Access Permissions=-rw-rw-rw-,Number of Links=1,
      Owner Name=intellibase,Group Name=intellibase,
      File Size=0,Last Modified=Jul 29 2015,
      Created=Jul 29 2015,Lrecl=1000, Recfm=V

NOTE: 56433 records were written to file outfile
      The minimum record length was 78
      The maximum record length was 199
NOTE: 56432 observations were read from "WORK.scored__ND"
NOTE: The data step took :
      real time : 0.212
      cpu time  : 0.211



NOTE: Submitted statements took :
      real time : 10.687
      cpu time  : 10.787
